{
    "version": "https://jsonfeed.org/version/1",
    "title": "victinSever • All posts by \"nginx\" tag",
    "description": "",
    "home_page_url": "http://victinSever.github.io",
    "items": [
        {
            "id": "http://victinsever.github.io/2022/11/04/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/Nginx/Nginx%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",
            "url": "http://victinsever.github.io/2022/11/04/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/Nginx/Nginx%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",
            "title": "Nginx学习记录",
            "date_published": "2022-11-03T17:07:01.000Z",
            "content_html": "<h1 id=\"nginx\"><a class=\"markdownIt-Anchor\" href=\"#nginx\">#</a> Nginx</h1>\n<h2 id=\"nginx概述\"><a class=\"markdownIt-Anchor\" href=\"#nginx概述\">#</a> Nginx 概述</h2>\n<ul>\n<li>高性能的 HTTP 和方向代理服务器，特点是战友内存少，并发能力强，同类型的网页服务器表现较好。</li>\n<li>转为性能优化而开发，性能和效率是最重要的考量，能经受高负载的考研，并发可高达 50000 个。</li>\n</ul>\n<h2 id=\"反向代理\"><a class=\"markdownIt-Anchor\" href=\"#反向代理\">#</a> 反向代理</h2>\n<ul>\n<li>正向代理\n<ul>\n<li>在客户端（浏览器）配置代理服务器，来实现对服务器的访问</li>\n</ul>\n</li>\n<li>反向代理\n<ul>\n<li>请求发送给代理服务器，由代理服务器去选择目标服务器返回响应给客户端，暴露了代理服务器，隐藏了目标服务器</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#负载均衡\">#</a> 负载均衡</h2>\n<p>单个服务器会造成比较大的并发压力，需要增加服务器数量，将请求分发到各个服务器上，即请求集中到一个服务器上的情况变成均分到多个服务器处理。</p>\n<h2 id=\"动静分离\"><a class=\"markdownIt-Anchor\" href=\"#动静分离\">#</a> 动静分离</h2>\n<p>为加快网站解析速度，将服务器部署的静态资源（html、css、js、图片）和动态资源（jsp，servlet）分开部署，降低原来单个服务器的压力。</p>\n<h2 id=\"nginx环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#nginx环境搭建\">#</a> Nginx 环境搭建</h2>\n<h3 id=\"准备工作\"><a class=\"markdownIt-Anchor\" href=\"#准备工作\">#</a> 准备工作</h3>\n<ul>\n<li>Linux 环境（可用本地 VM 运行 linux 系统，也可远程链接服务器虚拟机环境）</li>\n<li>nginx 的 linux 软件包</li>\n</ul>\n<h3 id=\"流程\"><a class=\"markdownIt-Anchor\" href=\"#流程\">#</a> 流程</h3>\n<ul>\n<li>\n<p>安装 pcre 依赖</p>\n<ul>\n<li>\n<p>联网下载 pcre 压缩文件依赖 (这里通过 wget 下载，也可直接在官网下载 tar 包）</p>\n<figure class=\"highlight bash\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装包放在 linux 系统（如果在 window 中下载的直接拖拽或者用 xftp 移过来）</p>\n</li>\n<li>\n<p>解压压缩文件</p>\n<figure class=\"highlight bash\"><figcaption><span>2</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar –xvf pcre-8.37.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>进入解压目录，执行编译配置</p>\n<figure class=\"highlight bash\"><figcaption><span>3</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ./pcre-8.37</span><br><span class=\"line\">./configure</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用 make 进行安装</p>\n<figure class=\"highlight bash\"><figcaption><span>4</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装完成检查版本</p>\n<figure class=\"highlight bash\"><figcaption><span>5</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pcre-config --version</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>安装其他依赖文件（<strong>openssl</strong> **、**zlib <strong>、</strong> <strong>gcc</strong> ）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel</span><br></pre></td></tr></table></figure>\n<p>如果没有 yum，则会报错，本人在这里耽误很长时间，本地 linux 没有 yum，安装 yum 找不到文件源，因此采用的远程链接腾讯云服务器。或者不用 yum 安装也可。</p>\n</li>\n<li>\n<p>安装 nginx</p>\n<ul>\n<li>\n<p>下载 nginx 安装包（<span class=\"exturl\" data-url=\"aHR0cDovL25naW54Lm9yZy8=\">nginx</span>）选择 linux 版本，如最新的 nginx-1.23.2 （pgp）</p>\n</li>\n<li>\n<p>接下来流程同上 pcre 的安装流程</p>\n</li>\n<li>\n<p>安装成功后进入 usr 文件夹查看多出的 local/nginx 文件夹，多出了 sbin 脚本</p>\n<figure class=\"highlight bash\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"built_in\">local</span>/nginx</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sbin</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>检查脚本启动</p>\n<figure class=\"highlight bash\"><figcaption><span>2</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br><span class=\"line\">ps -ef | grep nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>浏览器中查看结果（输入服务器地址）</p>\n<p><img data-src=\"./../../../../../../%E9%A1%B9%E7%9B%AE/blog/source/image/image-20221104133932732.png\" alt=\"image-20221104133932732\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>在 windows 系统中访问 linux 中 nginx，默认不能访问的，因为防火墙问题</p>\n<ul>\n<li>\n<p>查看开放的端口号</p>\n</li>\n<li>\n<p><strong>firewall-cmd --list-all</strong></p>\n</li>\n<li>\n<p>设置开放的端口号</p>\n<ul>\n<li><strong>firewall-cmd --add-service=http –permanent</strong></li>\n<li><strong>firewall-cmd --add-port=80/tcp --permanent</strong></li>\n</ul>\n</li>\n<li>\n<p>重启防火墙</p>\n<ul>\n<li><strong>firewall-cmd –reload</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"nginx常用命令\"><a class=\"markdownIt-Anchor\" href=\"#nginx常用命令\">#</a> Nginx 常用命令</h2>\n<ul>\n<li>\n<p><strong>进入</strong> <strong>nginx</strong> <strong>目录中才能使用命令</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx/sbin</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>1、查看</strong> <strong>nginx</strong> <strong>版本号</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -v</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>2、启动 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>3、停止 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s stop</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>4、重新加载 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>5、查看状态 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep nginx</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"nginx配置文件\"><a class=\"markdownIt-Anchor\" href=\"#nginx配置文件\">#</a> Nginx 配置文件</h2>\n<p>包含三部分内容<br>\n（1）全局块：配置服务器整体运行的配置指令<br>\n比如 worker_processes 1; 处理并发数的配置<br>\n（2）events 块：影响 Nginx 服务器与用户的网络连接<br>\n比如 worker_connections 1024; 支持的最大连接数为 1024<br>\n（3）http 块<br>\n还包含两部分：<br>\nhttp 全局块<br>\n server 块</p>\n<p>Nginx 的三个重要配置一般都在 http 模块下。</p>\n",
            "tags": [
                "Nginx"
            ]
        }
    ]
}