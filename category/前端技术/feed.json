{
    "version": "https://jsonfeed.org/version/1",
    "title": "眸光似星辰 • All posts by \"前端技术\" category",
    "description": "",
    "home_page_url": "http://victinSever.github.io",
    "items": [
        {
            "id": "http://victinsever.github.io/2023/02/16/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/http/%E8%B7%A8%E5%9F%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88jsonp%E5%92%8Ccors/",
            "url": "http://victinsever.github.io/2023/02/16/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/http/%E8%B7%A8%E5%9F%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88jsonp%E5%92%8Ccors/",
            "title": "跨域解决方案jsonp和cors",
            "date_published": "2023-02-16T03:15:24.000Z",
            "content_html": "<p>直接前端代码如下：</p>\n<h2 id=\"jsonp\"><a href=\"#jsonp\" class=\"headerlink\" title=\"jsonp\"></a>jsonp</h2><p>原理：利用的原理是script标签可以跨域请求资源，将回调函数作为参数拼接在url中。后端收到请求，调用该回调函数，并将数据作为参数返回去，注意设置响应头返回文档类型，应该设置成javascript。</p>\n<p>html中首先声明回调处理函数，然后动态创建script标签发送请求信息</p>\n<figure class=\"highlight html\"><figcaption><span>jsonp方案.html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>发送xml请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;data&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"property\">jsonpCallback</span> = <span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#data&#x27;</span>).<span class=\"property\">innerHTML</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(res)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> script = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;script&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            script.<span class=\"property\">type</span> = <span class=\"string\">&#x27;text/javascript&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            script.<span class=\"property\">src</span> = <span class=\"string\">&#x27;http://localhost:8080/api/jsonp?id=1&amp;cb=jsonpCallback&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(script)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- &lt;script src=&quot;http://localhost:8080/api/jsonp?id=1&amp;cb=jsonpCallback&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>服务端需要安装koa或者express框架创建app，根据获得的回调格式使用相同的回调函数返回数据</p>\n<figure class=\"highlight js\"><figcaption><span>jsonp-server.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> data = [</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">17</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">18</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ctx.<span class=\"property\">path</span> === <span class=\"string\">&#x27;/api/jsonp&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; id, cb &#125; = ctx.<span class=\"property\">query</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> info = data.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">id</span> == id)</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"string\">`<span class=\"subst\">$&#123;cb&#125;</span>(<span class=\"subst\">$&#123;<span class=\"built_in\">JSON</span>.stringify(info)&#125;</span>)`</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">8080</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;listen 8080 ...&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"cors\"><a href=\"#cors\" class=\"headerlink\" title=\"cors\"></a>cors</h2><p>原理：目前最常用的一种解决办法，通过设置后端允许跨域实现。</p>\n<p>使用XMLHttpRequest创建ajax请求，这里使用axios或者其他的ajax封装库都一样</p>\n<figure class=\"highlight html\"><figcaption><span>cors方案.html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>发送xml请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;data&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">const</span> <span class=\"variable constant_\">XML</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable constant_\">XML</span>.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;get&#x27;</span>, <span class=\"string\">&#x27;http://localhost:8080/api/xml&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable constant_\">XML</span>.<span class=\"title function_\">send</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable constant_\">XML</span>.<span class=\"property\">onreadystatechange</span> = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span>(<span class=\"variable constant_\">XML</span>.<span class=\"property\">readyState</span> === <span class=\"number\">4</span> &amp;&amp; <span class=\"variable constant_\">XML</span>.<span class=\"property\">status</span> === <span class=\"number\">200</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#data&#x27;</span>).<span class=\"property\">innerHTML</span> = <span class=\"variable constant_\">XML</span>.<span class=\"property\">response</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable constant_\">XML</span>.<span class=\"property\">onerror</span> = <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;err：&#x27;</span> + e);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;) </span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>设置响应体的头部的两个属性如下即可：<code>&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;</code>，<code>&#39;Access-Control-Allow-Methods&#39;, &#39;OPTIONS, GET, PUT, POST, DELETE&#39;</code>。（也可使用cors封装库，此处省略）</p>\n<figure class=\"highlight js\"><figcaption><span>cors-srever.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> data = [</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">17</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">18</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">    ctx.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class=\"string\">&#x27;OPTIONS, GET, PUT, POST, DELETE&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ctx.<span class=\"property\">path</span> === <span class=\"string\">&#x27;/api/xml&#x27;</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">JSON</span>.stringify(data)&#125;</span>`</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">8080</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;listen 8080 ...&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他方案\"><a href=\"#其他方案\" class=\"headerlink\" title=\"其他方案\"></a>其他方案</h2><p>其他方案本人用的比较少，此处不详细代码阐释。</p>\n<ul>\n<li><p>node中间件、nginx反向代理</p>\n<p>跨域限制的时候浏览器不能跨域访问服务器，node中间件和nginx反向代理，都是让请求发给代理服务器，静态页面面和代理服务器是同源的，然后代理服务器再向后端服务器发请求，服务器和服务器之间不存在同源限制</p>\n</li>\n<li><p>postmessage</p>\n<p>H5新增API，通过发送和接收API实现跨域通信。</p>\n<figure class=\"highlight html\"><figcaption><span>postMessage.html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//这个只是给自己本地发送信息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> msg = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;昂三&#x27;</span> &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"title function_\">postMessage</span>(msg, <span class=\"string\">&#x27;http://127.0.0.1:5500&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;message&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e.<span class=\"property\">data</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e.<span class=\"property\">origin</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e.<span class=\"property\">source</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n",
            "tags": [
                "跨域"
            ]
        },
        {
            "id": "http://victinsever.github.io/2023/01/11/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/mockjs/mockjs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "http://victinsever.github.io/2023/01/11/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/mockjs/mockjs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "mockjs学习笔记",
            "date_published": "2023-01-11T04:42:01.000Z",
            "content_html": "<h4 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h4><p>在命令行终端中：</p>\n<ul>\n<li><p>初始化package.json</p>\n<figure class=\"highlight js\"><figcaption><span>初始化package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init -y</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载mockjs</p>\n<figure class=\"highlight js\"><figcaption><span>下载mockjs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i mockjs --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加node运行指令</p>\n<p>在package.json的scripts中添加</p>\n<blockquote>\n<p> “start”: “node 运行的js文件名”</p>\n</blockquote>\n</li>\n<li><p>下载nodemon预编译node插件</p>\n<figure class=\"highlight js\"><figcaption><span>下载nodemon预编译node插件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node i nodemon -save-dev</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行的js编写mock的模拟数据</p>\n<figure class=\"highlight js\"><figcaption><span>test.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Mock</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mockjs&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;list|5-10&quot;</span>: [</span><br><span class=\"line\">        &#123; <span class=\"string\">&quot;id|+1&quot;</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm start</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"MockJs语言规则\"><a href=\"#MockJs语言规则\" class=\"headerlink\" title=\"MockJs语言规则\"></a>MockJs语言规则</h4><p>[官网实例](<span class=\"exturl\" data-url=\"aHR0cDovL21vY2tqcy5jb20vZXhhbXBsZXMuaHRtbA==\">Mock.js (mockjs.com)</span>)</p>\n<h4 id=\"Mockjs服务器\"><a href=\"#Mockjs服务器\" class=\"headerlink\" title=\"Mockjs服务器\"></a>Mockjs服务器</h4><ul>\n<li><p>全局安装mock-server服务器包</p>\n<blockquote>\n<p>npm i @shymean&#x2F;mock-server -g</p>\n</blockquote>\n</li>\n<li><p>编写mock服务</p>\n<figure class=\"highlight js\"><figcaption><span>server.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Mock</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mockjs&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(<span class=\"string\">&quot;/home&quot;</span>, <span class=\"string\">&#x27;get&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">code</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;访问成功！&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">user</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(<span class=\"string\">&#x27;@cname&#x27;</span>),</span><br><span class=\"line\">            <span class=\"string\">&quot;age|18-60&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;userImage&quot;</span>: <span class=\"title class_\">Mock</span>.<span class=\"property\">Random</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&#x27;200*400&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用mock命令启动服务器</p>\n<p>端口号范围：1024-65535</p>\n<blockquote>\n<p>mock -p 9999 -f .&#x2F;server.js </p>\n</blockquote>\n</li>\n<li><p>通过浏览器或者接口测试工具postman访问</p>\n<p><img data-src=\"/../../../image/image-20230111162541163.png\" alt=\"image-20230111162541163\"></p>\n</li>\n</ul>\n<h4 id=\"在jQuery中使用mock\"><a href=\"#在jQuery中使用mock\" class=\"headerlink\" title=\"在jQuery中使用mock\"></a>在jQuery中使用mock</h4><figure class=\"highlight plaintext\"><figcaption><span>index.html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;在jQuery中使用mock&lt;/title&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.3/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/Mock.js/1.0.0/mock-min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        Mock.mock(&#x27;/user&#x27;, &#x27;get&#x27;, &#123;</span><br><span class=\"line\">            name: &quot;@cname&quot;,</span><br><span class=\"line\">            createTime: &quot;@datetime&quot;,</span><br><span class=\"line\">            email: &quot;@email&quot;,</span><br><span class=\"line\">            username: &quot;@title&quot;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        $.ajax(&#123;</span><br><span class=\"line\">            url: &#x27;/user&#x27;,</span><br><span class=\"line\">            dataType: &#x27;json&#x27;,</span><br><span class=\"line\">            method: &#x27;get&#x27;,</span><br><span class=\"line\">            success: (res) =&gt; &#123;</span><br><span class=\"line\">                console.log(res);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在Vue中使用mock\"><a href=\"#在Vue中使用mock\" class=\"headerlink\" title=\"在Vue中使用mock\"></a>在Vue中使用mock</h4><ul>\n<li><p>目录结构</p>\n<p><img data-src=\"/../../../image/image-20230111181031062.png\" alt=\"image-20230111181031062\"></p>\n</li>\n<li><p>创建项目</p>\n<figure class=\"highlight js\"><figcaption><span>npm</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create vue-mock</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载依赖</p>\n<ul>\n<li><p>mockjs</p>\n</li>\n<li><p>json5</p>\n<blockquote>\n<p>json格式数据，可以写注释，属性名可以不用引号</p>\n</blockquote>\n</li>\n<li><p>axios</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><figcaption><span>npm</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i mockjs --save-dev</span><br><span class=\"line\"></span><br><span class=\"line\">npm i json5 --save-dev</span><br><span class=\"line\"></span><br><span class=\"line\">npm i axios</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建mock接口拦截</p>\n<figure class=\"highlight js\"><figcaption><span>src/mock/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> json5 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;json5&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Mock</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mockjs&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getJsonFile</span>(<span class=\"params\">filePath</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> json = fs.<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">join</span>(__dirname, filePath), <span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json5.<span class=\"title function_\">parse</span>(json)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//这是在webpack的5.75.0版本写法，需要传入的devSever内涵app属性</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">devServer</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!devServer) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;webpack-dev-server is not defined&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(process.<span class=\"property\">env</span>.<span class=\"property\">Mock</span>) &#123;</span><br><span class=\"line\">        devServer.<span class=\"property\">app</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/user/userInfo&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123; </span><br><span class=\"line\">            res.<span class=\"title function_\">json</span>(<span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(<span class=\"title function_\">getJsonFile</span>(<span class=\"string\">&#x27;./data.json5&#x27;</span>)))</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建接口返回的数据</p>\n<figure class=\"highlight json\"><figcaption><span>src/mock/data.json5</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      name<span class=\"punctuation\">:</span> <span class=\"string\">&quot;@cname&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      createTime<span class=\"punctuation\">:</span> <span class=\"string\">&quot;@datetime&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      email<span class=\"punctuation\">:</span> <span class=\"string\">&quot;@email&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      username<span class=\"punctuation\">:</span> <span class=\"string\">&quot;@title&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">- 设置项目启动前的中间件监听</span><br><span class=\"line\"></span><br><span class=\"line\">  ```js vue.config.js</span><br><span class=\"line\">  <span class=\"comment\">//webpack的5.75.0版本写法，字段变为了onBeforeSetupMiddleware</span></span><br><span class=\"line\">  module.exports = <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    devServer<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      onBeforeSetupMiddleware<span class=\"punctuation\">:</span> require(&#x27;./src/mock/index.js&#x27;)</span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发送请求测试</p>\n<figure class=\"highlight plaintext\"><figcaption><span>src/compontent/HelloWord.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import axios from &#x27;axios&#x27;;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &#x27;HelloWorld&#x27;,</span><br><span class=\"line\">  setup() &#123;</span><br><span class=\"line\">    axios.get(&#x27;user/userInfo&#x27;).then(res =&gt; &#123;</span><br><span class=\"line\">      console.log(res)</span><br><span class=\"line\">    &#125;).catch(err =&gt; console.log(err))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动&#x2F;重启项目</p>\n<figure class=\"highlight js\"><figcaption><span>npm</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/01/08/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/mongodb/mongodb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "http://victinsever.github.io/2023/01/08/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/mongodb/mongodb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "mongodb学习笔记",
            "date_published": "2023-01-08T13:04:01.000Z",
            "content_html": "<h2 id=\"mongodb\"><a href=\"#mongodb\" class=\"headerlink\" title=\"mongodb\"></a>mongodb</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><p>数据库，集合，数据&#x2F;文档</p>\n<h3 id=\"进入数据库\"><a href=\"#进入数据库\" class=\"headerlink\" title=\"进入数据库\"></a>进入数据库</h3><ul>\n<li>配置环境变量直到可以输入mongo或者mongosh进入数据库命令行操作模式</li>\n</ul>\n<h3 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h3><ul>\n<li>show databases 展示数据库</li>\n<li>use admin 选择一个数据库<ul>\n<li>可选择现成的数据库，也可以选择不存在的，选择不存在则隐式创建数据库</li>\n</ul>\n</li>\n<li>show collections 展示集合</li>\n<li>db.createCollection(“c1”) 创建集合</li>\n<li>db.c1.drop() 删除集合</li>\n</ul>\n<h3 id=\"增删查改\"><a href=\"#增删查改\" class=\"headerlink\" title=\"增删查改\"></a>增删查改</h3><h4 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h4><ul>\n<li><p>语法：db.集合名.insert(json数据)</p>\n</li>\n<li><p>&#96;&#96;&#96;js 1<br>db.getCollection(‘user’).insert({“userId” : “014”,”uclass” : “B”,”name” : “Back”,”age” : 11,”email” : “<span class=\"exturl\" data-url=\"bWFpbHRvOiYjeDYyOyYjeDMxOyYjNTI7JiN4NDA7JiMxMTU7JiMxMDU7JiN4NmU7JiN4NjE7JiM0NjsmI3g2MzsmIzExMTsmIzEwOTs=\">&#x62;&#x31;&#52;&#x40;&#115;&#105;&#x6e;&#x61;&#46;&#x63;&#111;&#109;</span>“,”birthday” : ISODate(“2018-07-31T03:46:13.885Z”),”dataStatus” : 1});</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 注意</span><br><span class=\"line\"></span><br><span class=\"line\">  - 自定义_id，只需要插入的json数据存在_id这个数据进行覆盖</span><br><span class=\"line\"></span><br><span class=\"line\">  - 一次插入多个数据</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js 1</span><br><span class=\"line\">    db.c1.insert([</span><br><span class=\"line\">    \t&#123;name:&#x27;张三&#x27;,age:14&#125;,</span><br><span class=\"line\">    \t&#123;name:&#x27;李四&#x27;,age:14&#125;,</span><br><span class=\"line\">    ])</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>插入循环数据</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">\tdb.<span class=\"property\">c2</span>.<span class=\"title function_\">insert</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;a&#x27;</span>+i,<span class=\"attr\">age</span>:i&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"/../../../image/image-20230103230437314.png\" alt=\"image-20230103230437314\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h4><ul>\n<li><p>语法：</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">find</span>(条件，[,查询的列])</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>查询全部</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询一列</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>(&#123;&#125;,&#123;<span class=\"attr\">name</span>:<span class=\"number\">1</span>&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询除了某一列</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>(&#123;&#125;,&#123;<span class=\"attr\">name</span>:<span class=\"number\">0</span>&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>语法升级：</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">find</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">age</span>: &#123;运算符:值&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>年龄大于5</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>(&#123;<span class=\"attr\">age</span>:&#123;<span class=\"attr\">$gt</span>:<span class=\"number\">5</span>&#125;&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>年龄为5,8,10</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>(&#123;<span class=\"attr\">age</span>:&#123;<span class=\"attr\">$in</span>:[<span class=\"number\">5</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>]&#125;&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>运算符</p>\n<p><img data-src=\"/../../../image/image-20230103231503013.png\" alt=\"image-20230103231503013\"></p>\n</li>\n</ul>\n<h4 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h4><ul>\n<li><p>语法：</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">update</span>(条件,新数据 [，是否新增，是否修改多条])</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>升级语法：</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">update</span>(<span class=\"params\">条件,新数据</span>)</span><br><span class=\"line\">\t\t\t\t\t&#123;修改器：&#123;键：值&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"/../../../image/image-20230103232023122.png\" alt=\"image-20230103232023122\"></p>\n</li>\n<li><p>因为不用修改器，默认是替换而不是修改，所以在修改数据需要使用修改器</p>\n</li>\n<li><p>测试</p>\n<ul>\n<li><p>修改一个信息</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c3</span>.<span class=\"title function_\">update</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;a1&#x27;</span>&#125;,&#123;<span class=\"attr\">$set</span>:&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;s1&#x27;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改多个信息</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c4</span>.<span class=\"title function_\">update</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;哈哈&quot;</span>&#125;,&#123;</span><br><span class=\"line\">\t<span class=\"attr\">$set</span>:&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;haha&quot;</span>&#125;，</span><br><span class=\"line\">\t$inc：&#123;age：<span class=\"number\">111</span>&#125;，</span><br><span class=\"line\">\t<span class=\"attr\">$rename</span>:&#123;<span class=\"attr\">who</span>:<span class=\"string\">&quot;sex&quot;</span>&#125;,</span><br><span class=\"line\">\t<span class=\"attr\">$unset</span>:&#123;<span class=\"attr\">other</span>:<span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><ul>\n<li><p>语法：</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">remove</span>(条件,[,是否删除一条])</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"查询语句扩展\"><a href=\"#查询语句扩展\" class=\"headerlink\" title=\"查询语句扩展\"></a>查询语句扩展</h3><ul>\n<li><p>格式化</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>().<span class=\"title function_\">pretty</span>()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>排序</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>().<span class=\"title function_\">sort</span>(json)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//sort(&#123;列:1/-1&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">find</span>().<span class=\"title function_\">sort</span>(&#123;<span class=\"attr\">age</span>:-<span class=\"number\">1</span>&#125;) <span class=\"comment\">//以年龄降序</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>limit和skip方法</p>\n<figure class=\"highlight js\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">find</span>().<span class=\"title function_\">sort</span>().<span class=\"title function_\">skip</span>(数字).<span class=\"title function_\">limit</span>(数字)</span><br><span class=\"line\"><span class=\"comment\">//skip跳过指定数量(可选)</span></span><br><span class=\"line\"><span class=\"comment\">//limit限制查询的数量(可选)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>分页展示</p>\n<figure class=\"highlight js\"><figcaption><span>11</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">find</span>().<span class=\"title function_\">skip</span>().<span class=\"title function_\">limit</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">//skip计算公式：（当前页 - 1） * 每页显示条数</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>count方法：统计数量</p>\n</li>\n</ul>\n<h3 id=\"聚合查询\"><a href=\"#聚合查询\" class=\"headerlink\" title=\"聚合查询\"></a>聚合查询</h3><ul>\n<li><p>语法：</p>\n<figure class=\"highlight js\"><figcaption><span>11</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">aggregate</span>([</span><br><span class=\"line\">    &#123;管道：&#123;表达式&#125;&#125;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"/../../../image/image-20230103235138600.png\" alt=\"image-20230103235138600\"><img data-src=\"/../../../image/image-20230103235145652.png\" alt=\"image-20230103235145652\"></p>\n</li>\n<li><p>练习</p>\n<ul>\n<li><p>统计男生女生总年龄</p>\n<figure class=\"highlight js\"><figcaption><span>11</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">aggregate</span>([</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">$group</span>:&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">_id</span>:<span class=\"string\">&quot;$sex&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">rs</span>:&#123;<span class=\"attr\">$sum</span>:<span class=\"string\">&quot;$age&quot;</span>&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统计男女生人数</p>\n<figure class=\"highlight js\"><figcaption><span>11</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">aggregate</span>([</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">$group</span>:&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">_id</span>:<span class=\"string\">&quot;$sex&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">rs</span>:&#123;<span class=\"attr\">$sum</span>:<span class=\"number\">1</span>&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>人总数和，平局年龄</p>\n<figure class=\"highlight js\"><figcaption><span>11</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">aggregate</span>([</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">$group</span>:&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">_id</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">total_num</span>:&#123;<span class=\"attr\">$sum</span>:<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">total_avg</span>:&#123;<span class=\"attr\">$avg</span>:<span class=\"string\">&quot;$age&quot;</span>&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>人数升序查询男女生人数</p>\n<figure class=\"highlight js\"><figcaption><span>mongodb</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">c1</span>.<span class=\"title function_\">aggregate</span>([</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">$group</span>:&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">_id</span>:<span class=\"string\">&quot;$sex&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">rs</span>:&#123;<span class=\"attr\">$sum</span>:<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">$sort</span>:&#123;<span class=\"attr\">rs</span>:<span class=\"number\">1</span>&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"索引操作\"><a href=\"#索引操作\" class=\"headerlink\" title=\"索引操作\"></a>索引操作</h3><ul>\n<li><p>优点：提高数据库查询效率，降低数据库IO，降低数据排序成本，降低CPU消耗</p>\n</li>\n<li><p>缺点：占用磁盘空间，增加了索引数据，空间插入和修改需要更新索引</p>\n</li>\n<li><p>语法</p>\n<ul>\n<li>创建：db.集合名.createIndex(待创建索引的列,[,额外选项])<ul>\n<li>1升序， -1降序</li>\n</ul>\n</li>\n<li>删除全部：db.集合名.dropIndexes()</li>\n<li>删除指定：db.集合名.dropIndex(索引名)</li>\n<li>查看索引：db.集合名.getIndexes()</li>\n<li>分析索引：db.集合名.explain(“executionStatus”)</li>\n</ul>\n</li>\n<li><p>练习</p>\n<ul>\n<li><p>创建唯一索引</p>\n<figure class=\"highlight js\"><figcaption><span>mongodb</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.<span class=\"title function_\">createIndex</span>(待添加索引列, &#123;<span class=\"attr\">unique</span>: 列名&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>选择规则</p>\n<ul>\n<li>为常用条件、排序、分组的字段简历索引</li>\n<li>选择唯一性索引</li>\n<li>选择较小的数据列，为长字符串使用前缀索引</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"权限机制\"><a href=\"#权限机制\" class=\"headerlink\" title=\"权限机制\"></a>权限机制</h3><p>使用权限机制开启账号机制</p>\n<ul>\n<li><p>开启验证模式</p>\n<ul>\n<li><p>添加超级管理员</p>\n<ul>\n<li><p>&#96;&#96;&#96;js mongodb<br>use admin</p>\n<p>db.createUser({<br>“user”: “admin”,<br>“pwd”: “123456”,<br>“roles”: [{<br>    role: “root”,<br>    db: “admin”<br>}]<br>})</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 退出卸载服务</span><br><span class=\"line\"></span><br><span class=\"line\">  - ```</span><br><span class=\"line\">    在mogodb的bin目录下</span><br><span class=\"line\">    mongod --remove</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>重新安装需要输入账密的服务</p>\n<ul>\n<li>&#96;&#96;&#96;js mongodb<br>在mogodb的bin目录下<br>mongod –install –dbpath E:\\Application\\mongodb\\data –logpath E:\\Application\\mongodb\\logs\\mongodb2.log –auth<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 启动服务</span><br><span class=\"line\"></span><br><span class=\"line\">  - ```js mongodb</span><br><span class=\"line\">    net start mongodb</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>登录测试</p>\n<ul>\n<li><p>&#96;&#96;&#96;js mongodb<br>mongo或者mongosh</p>\n<p>use admin</p>\n<p>db.auth(‘admin’, ‘123456’)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- ```js mongodb</span><br><span class=\"line\">  mongosh 127.0.0.1:27017/admin -u admin -p 123456</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>添加用户权限</p>\n<ul>\n<li><p>&#96;&#96;&#96;js mongodb<br>&#x2F;&#x2F;在管理员权限下，进入新的数据库</p>\n<p>use shop</p>\n<p>&#x2F;&#x2F;shop1 只读权限<br>db.createUser({<br>“user”: “shop1”,<br>“pwd”: “123456”,<br>“roles”: [{<br>    role: “read”,<br>    db: “shop”<br>}]<br>})<br>&#x2F;&#x2F;shop2 可读可写权限<br>db.createUser({<br>“user”: “shop2”,<br>“pwd”: “123456”,<br>“roles”: [{<br>    role: “readWrite”,<br>    db: “shop”<br>}]<br>})</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 备份和还原数据库</span><br><span class=\"line\"></span><br><span class=\"line\">- 备份</span><br><span class=\"line\"></span><br><span class=\"line\">  - 语法：</span><br><span class=\"line\"></span><br><span class=\"line\">    &gt; 导出数据库语法：mongodbump -h -port -u -p -d -o</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; 说明：</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-h   \t\thost服务器IP地址</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-port\t\t\t 端口</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-u \t\t user账号</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-p \t\t pwd 密码</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-d\t\t  database 数据库</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-o \t\t open 备份到指定目录下</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">  - 练习</span><br><span class=\"line\"></span><br><span class=\"line\">    - 备份所有数据：</span><br><span class=\"line\"></span><br><span class=\"line\">      &gt;mongodbump  -u admin -p 123456 -o E:\\Application\\mongodb\\bak</span><br><span class=\"line\"></span><br><span class=\"line\">    - 备份指定数据：</span><br><span class=\"line\"></span><br><span class=\"line\">      &gt; mongodbump  -u shop -p 123456 -d shop -o E:\\Application\\mongodb\\bak2</span><br><span class=\"line\"></span><br><span class=\"line\">- 还原</span><br><span class=\"line\"></span><br><span class=\"line\">  - 语法：</span><br><span class=\"line\"></span><br><span class=\"line\">    &gt; 导出数据库语法：mongorestore -h -port -u -p -d -drop</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; 说明：</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-h   \t\thost服务器IP地址</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-port\t\t\t 端口</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-u \t\t user账号</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-p \t\t pwd 密码</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-d\t\t  database 数据库</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &gt; ​\t-drop \tdrop</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">  - 练习</span><br><span class=\"line\"></span><br><span class=\"line\">    - 还原所有数据库：</span><br><span class=\"line\"></span><br><span class=\"line\">      &gt;mongorestore -u admin -p 123456 -drop E:\\Application\\mongodb\\bak</span><br><span class=\"line\"></span><br><span class=\"line\">    - 还原指定数据库：（删除时不能删除admin数据库）</span><br><span class=\"line\"></span><br><span class=\"line\">      &gt; mongorestore -u shop -p 123456 -d shop -drop E:\\Application\\mongodb\\bak2</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">## mongoose</span><br><span class=\"line\"></span><br><span class=\"line\">- 使用node语言管理mongodb</span><br><span class=\"line\"></span><br><span class=\"line\">- 是node中的一个模块包</span><br><span class=\"line\"></span><br><span class=\"line\">- 核心概念</span><br><span class=\"line\">  - schema</span><br><span class=\"line\">    - 约束字段</span><br><span class=\"line\">  - model</span><br><span class=\"line\">    - 模型</span><br><span class=\"line\">    - 对应集合，用户数据增删改查</span><br><span class=\"line\"></span><br><span class=\"line\">- 使用</span><br><span class=\"line\"></span><br><span class=\"line\">  - 下载</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>npm i mongoose 或 yarn add mongoose</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 语法</span><br><span class=\"line\"></span><br><span class=\"line\">  ```js mongodb-connection.js</span><br><span class=\"line\">  //导入数据库</span><br><span class=\"line\">  var mongoose = require(&#x27;mongoose&#x27;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  //链接数据库</span><br><span class=\"line\">  const db = mongoose.createConnection(&#x27;mongodb://admin:123456@localhost:27017/weblog?authMechanism=DEFAULT&amp;authSource=admin&#x27;, &#123;</span><br><span class=\"line\">      useNewUrlParser: true,</span><br><span class=\"line\">      useUnifiedTopology: true</span><br><span class=\"line\">  &#125;, err =&gt; &#123;</span><br><span class=\"line\">      if(err) console.error(&quot;连接出错：&quot; + err)</span><br><span class=\"line\">      else console.log(&quot;weblog数据库连接成功！&quot;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  //创建模型</span><br><span class=\"line\">  const Users = db.model(&#x27;users&#x27;, &#123;</span><br><span class=\"line\">      name: String,</span><br><span class=\"line\">      age: Number</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  //实例操作</span><br><span class=\"line\">  </span><br><span class=\"line\">  //增</span><br><span class=\"line\">  //增加一条数据</span><br><span class=\"line\">  async function insertOne(obj) &#123;</span><br><span class=\"line\">      const res = await new Users(obj).save()</span><br><span class=\"line\">      console.log(res);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // insertOne(&#123; name: &#x27;神龙&#x27;,age: 100000 &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  //查</span><br><span class=\"line\">  //查一条</span><br><span class=\"line\">  async function search(obj) &#123;</span><br><span class=\"line\">      const res = await Users.find(obj)</span><br><span class=\"line\">      console.log(res);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  //查全部</span><br><span class=\"line\">  async function searchAll() &#123;</span><br><span class=\"line\">      const res = await Users.find(&#123;&#125;)</span><br><span class=\"line\">      console.log(res);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  //分页查询</span><br><span class=\"line\">  async function searchPagination(page = 1, size = 2) &#123;</span><br><span class=\"line\">      const res = await Users.find(&#123;&#125;).skip((page - 1) * size).limit(size)</span><br><span class=\"line\">      console.log(res);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  // search(&#123; name: &#x27;神龙&#x27;&#125;)</span><br><span class=\"line\">  // searchAll()</span><br><span class=\"line\">  searchPagination(2)</span><br><span class=\"line\">  </span><br><span class=\"line\">  // db.close()</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h2><ul>\n<li><p>作用</p>\n<ul>\n<li>数据角度：让项目静态&#x2F;固定数据动态</li>\n<li>功能角度：天气接口，获取IP接口，名言接口</li>\n</ul>\n</li>\n<li><p>接口地址</p>\n<ul>\n<li>通过编程语言实现：node&#x2F;go&#x2F;java&#x2F;php&#x2F;asp</li>\n<li>使用第三方接口</li>\n</ul>\n</li>\n<li><p>一次编写，多次接入</p>\n</li>\n<li><p>一个返回json或者xml数据的文件</p>\n</li>\n</ul>\n<h3 id=\"接口开发规范\"><a href=\"#接口开发规范\" class=\"headerlink\" title=\"接口开发规范\"></a>接口开发规范</h3><ul>\n<li><p>保证多人开发编写的规范性，可以方便后期维护，使用Restful API思想</p>\n</li>\n<li><p>Restful</p>\n<ul>\n<li>目前流行的互联网软件架构</li>\n<li>申明一个设计原则和规范</li>\n<li>规范条件<ul>\n<li>项目统一有模块标准</li>\n<li>根据URL知道操作资源</li>\n<li>根据H团体票Method知道操作动作</li>\n<li>根据Http Status Code知道操作结果</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>接口测试工具</p>\n</li>\n</ul>\n<h3 id=\"接口测试工具\"><a href=\"#接口测试工具\" class=\"headerlink\" title=\"接口测试工具\"></a>接口测试工具</h3><ul>\n<li>Postman，apifox···</li>\n<li>测试接口<ul>\n<li>测试地址：<span class=\"exturl\" data-url=\"aHR0cDovL2pzb252aWV3LmNvbS9leGFtcGxlLmpzb24=\">http://jsonview.com/example.json</span></li>\n</ul>\n</li>\n<li>使用<ul>\n<li>后端：调试接口</li>\n<li>前端：测试接口</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"接口开发\"><a href=\"#接口开发\" class=\"headerlink\" title=\"接口开发\"></a>接口开发</h2><ul>\n<li><p>下载模块依赖</p>\n<ul>\n<li><p>express</p>\n<blockquote>\n<p>框架</p>\n</blockquote>\n</li>\n<li><p>body-parser</p>\n<blockquote>\n<p>request解析</p>\n</blockquote>\n</li>\n<li><p>mongoose</p>\n<blockquote>\n<p>node操作mongodb</p>\n</blockquote>\n</li>\n<li><pre><code class=\"json\">&#123;\n  &quot;dependencies&quot;: &#123;\n    &quot;body-parser&quot;: &quot;^1.20.1&quot;,\n    &quot;express&quot;: &quot;^4.18.2&quot;,\n    &quot;mongoose&quot;: &quot;^6.8.3&quot;\n  &#125;\n&#125;\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 开发实战</span><br><span class=\"line\"></span><br><span class=\"line\">  - 目录</span><br><span class=\"line\"></span><br><span class=\"line\">    ![image-20230109234239665](../../../image/image-20230109234239665.png)</span><br><span class=\"line\"></span><br><span class=\"line\">  - 根文件http.js</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js http.js</span><br><span class=\"line\">    //引入express</span><br><span class=\"line\">    const express = require(&#x27;express&#x27;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    //创建app</span><br><span class=\"line\">    const app = express()</span><br><span class=\"line\">    </span><br><span class=\"line\">    //引入body-parser模块</span><br><span class=\"line\">    const bodyparser = require(&#x27;body-parser&#x27;)</span><br><span class=\"line\">    app.use(bodyparser.urlencoded(&#123;extend: true&#125;))</span><br><span class=\"line\">    app.use(bodyparser.json())</span><br><span class=\"line\">    </span><br><span class=\"line\">    //路由语法</span><br><span class=\"line\">    app.get(&#x27;/&#x27;, (request, response) =&gt; &#123;</span><br><span class=\"line\">        response.send(&#x27;访问成功！&#x27;)    </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    const userController = require(process.cwd() + &#x27;/controller/user&#x27;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    app.post(&#x27;/user/addUser&#x27;, userController.addUser)</span><br><span class=\"line\">    app.get(&#x27;/user/getAllUser&#x27;, userController.getAllUser)</span><br><span class=\"line\">    app.get(&#x27;/user/getUserList&#x27;, userController.getUserList)</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    app.listen(8000, () =&gt; &#123;</span><br><span class=\"line\">        console.log(&quot;http://localhost:8000接口服务正在运行中···&quot;);</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n</code></pre>\n</li>\n<li><p>控制器controller</p>\n<figure class=\"highlight js\"><figcaption><span>controller/user.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入模型</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    createUserModel, listUserModel, listUserModelByPagination</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(process.<span class=\"title function_\">cwd</span>() + <span class=\"string\">&#x27;/models/user&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义处理方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//添加一条数据</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">addUser</span> = <span class=\"keyword\">async</span> (<span class=\"params\">req, res</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> rs = <span class=\"keyword\">await</span> <span class=\"title function_\">createUserModel</span>(req.<span class=\"property\">body</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断返回值</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rs) &#123;</span><br><span class=\"line\">            res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">                <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">state</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">                    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;添加成功！&#x27;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">data</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">                <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">state</span>: <span class=\"number\">500</span>,</span><br><span class=\"line\">                    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;添加失败！&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err) &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取所有用户</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getAllUser</span> = <span class=\"keyword\">async</span> (<span class=\"params\">req, res</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = <span class=\"keyword\">await</span> <span class=\"title function_\">listUserModel</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断返回值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">state</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">                <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;查询成功！&#x27;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: data</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取所有用户</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getUserList</span> = <span class=\"keyword\">async</span> (<span class=\"params\">req, res</span>) =&gt; &#123; </span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; query &#125; = req</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(query);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> page = <span class=\"built_in\">parseInt</span>(query.<span class=\"property\">page</span>), size = <span class=\"built_in\">parseInt</span>(query.<span class=\"property\">size</span>)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(page, size);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = <span class=\"keyword\">await</span> <span class=\"title function_\">listUserModel</span>(page, size)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断返回值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data) &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">send</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">state</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">                <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;查询成功！&#x27;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: data</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    addUser, getAllUser, getUserList</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模型model</p>\n<figure class=\"highlight js\"><figcaption><span>model/user.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导入数据库</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//链接数据库</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db = mongoose.<span class=\"title function_\">createConnection</span>(<span class=\"string\">&#x27;mongodb://admin:123456@localhost:27017/weblog?authMechanism=DEFAULT&amp;authSource=admin&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">useNewUrlParser</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">useUnifiedTopology</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&quot;连接出错：&quot;</span> + err)</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;weblog数据库连接成功！&quot;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建模型</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Users</span> = db.<span class=\"title function_\">model</span>(<span class=\"string\">&#x27;users&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">username</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">default</span>: <span class=\"string\">&#x27;未命名用户&#x27;</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">default</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">phone</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">default</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">role</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">default</span>: <span class=\"string\">&#x27;user&#x27;</span> &#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//实例操作</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建模型</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">createUserModel</span> = (<span class=\"params\">obj</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Users</span>(obj).<span class=\"title function_\">save</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分页查询模型列表</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">listUserModel</span> = (<span class=\"params\">page = <span class=\"number\">1</span>, size = <span class=\"number\">10</span></span>) =&gt; &#123;   </span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"title class_\">Users</span>.<span class=\"title function_\">find</span>(&#123;&#125;).<span class=\"title function_\">skip</span>((page - <span class=\"number\">1</span>) * size).<span class=\"title function_\">limit</span>(size)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    createUserModel,</span><br><span class=\"line\">    listUserModel</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// db.close()</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"接口文档\"><a href=\"#接口文档\" class=\"headerlink\" title=\"接口文档\"></a>接口文档</h3><ul>\n<li><p>工具：apidoc</p>\n</li>\n<li><p>apidoc</p>\n<ul>\n<li>根据注释生产接口文档</li>\n</ul>\n</li>\n<li><p>使用</p>\n<ul>\n<li><p>下载（1次）</p>\n<blockquote>\n<p>npm i apidoc -g</p>\n</blockquote>\n</li>\n<li><p>根目录下创建apidoc.json文件（1次）</p>\n<blockquote>\n<p>{</p>\n<p>​\t“name”: “weblog”,</p>\n<p>​\t“version”: “1.0.0”,</p>\n<p>​\t“description”:  “该项目为博客系统，基于mongodb+node+express搭建的后台平台”，</p>\n<p>​\t“title”: “暂无”,</p>\n<p>​\t“url”: “”</p>\n<p>}</p>\n</blockquote>\n</li>\n<li><p>写接口注释（N次）</p>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * @api &#123;get&#125; /user/getUserList 分页获取用户</span><br><span class=\"line\"> * @apiName 分页获取用户</span><br><span class=\"line\"> * @apiGroup User</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @apiParam &#123;Number&#125; page  当前页</span><br><span class=\"line\"> * @apiParam &#123;Number&#125; size  每页显示条数</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @apiSuccess &#123;String&#125; meta 状态码&amp;提示信息</span><br><span class=\"line\"> * @apiSuccess &#123;String&#125; data 数据</span><br><span class=\"line\"> */</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>创建接口文档</p>\n<blockquote>\n<p>apidoc -i .&#x2F;接口注释目录 -o .&#x2F;接口文档存放目录</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2022/11/22/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/http/%E8%B7%A8%E5%9F%9F%E7%9A%84%E4%B8%89%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",
            "url": "http://victinsever.github.io/2022/11/22/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/http/%E8%B7%A8%E5%9F%9F%E7%9A%84%E4%B8%89%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",
            "title": "跨域的三种解决方案",
            "date_published": "2022-11-22T14:13:24.000Z",
            "content_html": "<p>[原文链接]([什么是跨域 &amp; 跨域的 3 种解决方案 - n031 - 博客园 (<span class=\"exturl\" data-url=\"aHR0cDovL2NuYmxvZ3MuY29t\">cnblogs.com</span>)](<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjOn46dGV4dD0lRTQlQjglQkElRTQlQkElODYlRTglQTclQTMlRTUlODYlQjMlRTYlQjUlOEYlRTglQTclODglRTUlOTklQTglRTglQjclQTglRTUlOUYlOUYlRTklOTclQUUlRTklQTIlOTglRUYlQkMlOENXM0M=\">https://www.cnblogs.com/n031/p/11828797.html#:~:text = 为了解决浏览器跨域问题，W3C</span> 提出了跨源资源共享方案，即 CORS (Cross-Origin Resource,Sharing)。 CORS 可以在不破坏即有规则的情况下，通过后端服务器实现 CORS 接口，就可以实现跨域通信。)</p>\n<h1 id=\"什么是跨域-跨域的解决方案\"><a class=\"markdownIt-Anchor\" href=\"#什么是跨域-跨域的解决方案\">#</a> 什么是跨域 &amp; 跨域的解决方案</h1>\n<h2 id=\"跨域问题\"><a class=\"markdownIt-Anchor\" href=\"#跨域问题\">#</a> 跨域问题</h2>\n<p>所谓同源（即指在同一个域）就是两个页面具有相同的协议（protocol），主机（host）端口号（port）</p>\n<p>同源策略是浏览器的一个安全功能，不同源的客户端脚本在没有明确授权的情况下，不能读写对方资源。 同源策略是浏览器<strong>安全的基石</strong></p>\n<p>同源策略会阻止一个域的 javascript 脚本和另外一个域的内容进行交互。例如办公内外网环境，当我们访问外网一个恶意网站的时候，恶意网站就会利用我们的主机向内网的 url 发送 ajax 请求，破坏或盗取数据。</p>\n<p>所谓跨域，就是引发的非同源限制，会导致：</p>\n<ul>\n<li>无法读取非同源网页的 Cookie、LocalStorage 和 IndexedDB</li>\n<li>无法接触非同源网页的 DOM</li>\n<li>无法向非同源地址发送 AJAX 请求，即 XHR 请求</li>\n</ul>\n<h2 id=\"跨域解决思路\"><a class=\"markdownIt-Anchor\" href=\"#跨域解决思路\">#</a> 跨域解决思路</h2>\n<ul>\n<li>思路 1 （避免同源限制）\n<ul>\n<li>客户端浏览器不做限制，在指定参数时不校验（不合理，因为不可能人人浏览器这样设置）</li>\n<li>不发出 XHR 请求，旧不会有跨域出现，通过 JSONP 的方案：即通过动态创建一个 script 标签然后通过标签发起请求</li>\n</ul>\n</li>\n<li>思路 2（跨域资源共享）\n<ul>\n<li>W3C 的跨域资源解决方案推荐：被调用的方加上字段，告诉浏览器该网站支持跨域，即设置请求头允许跨域</li>\n</ul>\n</li>\n<li>思路 3（隐藏跨域方案）\n<ul>\n<li>通过 Nginx 反向代理，在 a 域名里面的的请求地址使用反向代理指向 b 域名，让浏览器以为一直在访问 a 网站，不触发跨域限制</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"jsonp\"><a class=\"markdownIt-Anchor\" href=\"#jsonp\">#</a> JSONP<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjanNvbnA=\">#</span></h2>\n<ul>\n<li>普通请求值 XHR，希望得到服务端返回的 content-type 一般是 json</li>\n<li>JSONP 发出的是 script 请求，希望得到的返回是 js 脚本</li>\n</ul>\n<blockquote>\n<p>Content-Type 是指 http/https 发送信息至服务端时的内容编码类型，在 HTTP 协议消息头中，使用 Content-Type 来表示请求和响应中的媒体类型信息。它用来告诉服务端如何处理请求的数据，以及告诉客户端（一般是浏览器）如何解析响应的数据，比如显示图片，解析并展示 html 等等。</p>\n<p><strong>并不是请求或响应独有的参数</strong></p>\n</blockquote>\n<h3 id=\"jsonp-原理\"><a class=\"markdownIt-Anchor\" href=\"#jsonp-原理\">#</a> JSONP 原理<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjanNvbnAtJUU1JThFJTlGJUU3JTkwJTg2\">#</span></h3>\n<p>以 JQuery 为例，发送 ajax 请求的时候，设置 <code>dataType:&quot;jsonp&quot;</code> ，将使用 JSONP 方式调用函数，函数的 url 变为 <code>myurl?callback=e5bbttt</code>  的形式，e5bbttt 就是一个临时方法名，后端会根据 <code>callback</code>  的值返回一个 js 脚本，如</p>\n<figure class=\"highlight html\"><figcaption><span>jsonp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">e5bbttt</span>(&#123;<span class=\"string\">&quot;a&quot;</span>:<span class=\"string\">&quot;aaa&quot;</span>,<span class=\"string\">&quot;b&quot;</span>:<span class=\"string\">&quot;bbb&quot;</span>&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>JQuery 会提前根据 ajax 中 success 的内容生成一个临时函数，名字就是 xxx</p>\n<figure class=\"highlight javascript\"><figcaption><span>jquery</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 其他省略</span></span><br><span class=\"line\">    <span class=\"attr\">dataType</span>:<span class=\"string\">&quot;jsonp&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>:<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data.<span class=\"property\">a</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data.<span class=\"property\">b</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">jsonp</span>:<span class=\"string\">&quot;e5bbttt&quot;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// JQuery 生成的临时函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">e5bbttt</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    ajaxObject.<span class=\"title function_\">success</span>(data);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>服务端返回给客户端的 <code>e5bbttt(&#123;&quot;a&quot;:&quot;aaa&quot;,&quot;b&quot;:&quot;bbb&quot;&#125;);</code> ，相当于调用立即（？）调用了 JQuery 生成的 <code>e5bbttt</code>  函数，用完这个函数就销毁了（？）</p>\n<p>JSONP 也算是一个约定俗成的 “协议”，callback 是约定俗成的作为定义临时函数名的参数。如果想自定义这个参数名，需要在 ajax 中用 jsonp 属性定义。</p>\n<h3 id=\"jsonp-的弊端\"><a class=\"markdownIt-Anchor\" href=\"#jsonp-的弊端\">#</a> JSONP 的弊端<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjanNvbnAtJUU3JTlBJTg0JUU1JUJDJThBJUU3JUFCJUFG\">#</span></h3>\n<ol>\n<li>需要服务器改动代码</li>\n<li>只支持 GET 请求</li>\n<li>发送的不是 xhr 请求</li>\n<li><strong>不安全</strong></li>\n</ol>\n<h2 id=\"后端解决跨域\"><a class=\"markdownIt-Anchor\" href=\"#后端解决跨域\">#</a> 后端解决跨域<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JTkwJThFJUU3JUFCJUFGJUU4JUE3JUEzJUU1JTg2JUIzJUU4JUI3JUE4JUU1JTlGJTlG\">#</span></h2>\n<p>跟用户数据有关的就是动态请求，没有数据的是静态请求，比如 css js，so，HTTP 服务器（Apache、Nginx 等）至少做了两个作用</p>\n<ul>\n<li>HTTP 服务器，处理静态请求</li>\n<li>反向代理，负载均衡</li>\n</ul>\n<p>在服务器端解决跨域有 2 种解决思路</p>\n<ul>\n<li>在被调用后端应用解决：在响应头增加指定字段，告诉浏览器允许调用。这种解决方案的请求是直接从浏览器发送给后端服务器，在浏览器上会看到 <span class=\"exturl\" data-url=\"aHR0cDovL2IuY29t\">b.com</span> 的 url</li>\n<li>在前端服务器解决：这是隐藏跨域的解决方案。这种跨域请求不是直接从浏览器发送的，而是从中间的 http 服务器（前端应用所在服务器）转发过去的，在浏览器中看到的还是 <span class=\"exturl\" data-url=\"aHR0cDovL2EuY29t\">a.com</span> 的 url，所以不会认为是跨域。但是该到 <span class=\"exturl\" data-url=\"aHR0cDovL2IuY29t\">b.com</span> 的请求还是会到 <span class=\"exturl\" data-url=\"aHR0cDovL2IuY29t\">b.com</span></li>\n</ul>\n<h3 id=\"跨域原理及后端解决思路\"><a class=\"markdownIt-Anchor\" href=\"#跨域原理及后端解决思路\">#</a> 跨域原理及后端解决思路<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU4JUI3JUE4JUU1JTlGJTlGJUU1JThFJTlGJUU3JTkwJTg2JUU1JThGJThBJUU1JTkwJThFJUU3JUFCJUFGJUU4JUE3JUEzJUU1JTg2JUIzJUU2JTgwJTlEJUU4JUI3JUFG\">#</span></h3>\n<p>依据浏览器同源策略，非同源脚本不可操作其他源下面的对象。想要操作其他源下的对象就需要跨域。综上所述，在同源策略的限制下，非同源的网站之间不能发送 ajax 请求。如有需要，可通过降域或其他技术实现。</p>\n<p>为了解决浏览器跨域问题，W3C 提出了跨源资源共享方案，即 CORS (Cross-Origin Resource Sharing)。</p>\n<p>CORS 可以在不破坏即有规则的情况下，通过后端服务器实现 CORS 接口，就可以实现跨域通信。</p>\n<p>CORS 将请求分为两类：简单请求和非简单请求，分别对跨域通信提供了支持。</p>\n<h4 id=\"简单请求\"><a class=\"markdownIt-Anchor\" href=\"#简单请求\">#</a> 简单请求<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU3JUFFJTgwJUU1JThEJTk1JUU4JUFGJUI3JUU2JUIxJTgy\">#</span></h4>\n<ol>\n<li>在 CORS 出现前，发送 HTTP 请求时在头信息中不能包含任何自定义字段，且 HTTP 头信息不超过以下几个字段：\n<ol>\n<li>Accept</li>\n<li>Accept-Language</li>\n<li>Content-Language</li>\n<li>Last-Event-ID</li>\n<li>Content-Type 仅为这 3 种\n<ul>\n<li>application/x-www-form-urlencoded</li>\n<li>multipart/form-data</li>\n<li>text/plain</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>请求方法是 GET HEAD POST 且满足条件 1</li>\n</ol>\n<p>一个简单请求：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/test</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>*/*</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate, sdch, br</span><br><span class=\"line\"><span class=\"attribute\">Origin</span><span class=\"punctuation\">: </span>http://www.test.com</span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>www.test.com</span><br></pre></td></tr></table></figure>\n<p>对于简单请求，CORS 的策略是请求时在请求头中增加一个 Origin 字段，表示请求发出的域。服务器收到请求后，根据该字段判断是否允许该请求访问。</p>\n<ul>\n<li>如果允许，则在 HTTP 头信息中添加 Access-Control-Allow-Origin 字段，并返回正确的结果</li>\n<li>如果不允许，则不添加 Access-Control-Allow-Origin 字段</li>\n</ul>\n<p>除了上面提到的 Access-Control-Allow-Origin，还有几个字段用于描述 CORS 返回结果</p>\n<ul>\n<li>Access-Control-Allow-Credentials：可选，用户是否可以发送、处理 cookie</li>\n<li>Access-Control-Expose-Headers：可选，可以让用户拿到的字段。有几个字段无论是否允许跨域都可以拿到的：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma</li>\n</ul>\n<h4 id=\"非简单请求\"><a class=\"markdownIt-Anchor\" href=\"#非简单请求\">#</a> 非简单请求<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU5JTlEJTlFJUU3JUFFJTgwJUU1JThEJTk1JUU4JUFGJUI3JUU2JUIxJTgy\">#</span></h4>\n<p>一般是发送 JSON 格式的 ajax 请求，或带有自定义头的请求</p>\n<p>对于非简单请求的跨源请求，浏览器会在真实请求发出前，增加一次 OPTION 请求，称为预检请求 (preflightrequest)。预检请求将真实请求的信息，包括请求方法、自定义头字段、源信息添加到 HTTP 头信息字段中，询问服务器是否允许这样的操作</p>\n<p>例如一个 GET 请求的预检请求，包含一个自定义参数 X-Custom-Header</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">OPTIONS</span> <span class=\"string\">/test</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Origin</span><span class=\"punctuation\">: </span>http://www.test.com</span><br><span class=\"line\"><span class=\"attribute\">Access-Control-Request-Method</span><span class=\"punctuation\">: </span>GET // 请求使用的 HTTP 方法</span><br><span class=\"line\"><span class=\"attribute\">Access-Control-Request-Headers</span><span class=\"punctuation\">: </span>X-Custom-Header // 请求中包含的自定义头字段</span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>www.test.com</span><br></pre></td></tr></table></figure>\n<p><em>服务器收到请求时，需要分别对 Origin、Access-Control-Request-Method、Access-Control-Request-Headers 进行验证，验证通过后，会在返回 HTTP 头信息中添加：</em></p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Access-Control-Allow-Origin</span><span class=\"punctuation\">: </span>http://www.test.com // 允许的域</span><br><span class=\"line\"><span class=\"attribute\">Access-Control-Allow-Methods</span><span class=\"punctuation\">: </span>GET, POST, PUT, DELETE // 允许的方法</span><br><span class=\"line\"><span class=\"attribute\">Access-Control-Allow-Headers</span><span class=\"punctuation\">: </span>X-Custom-Header // 允许的自定义字段</span><br><span class=\"line\"><span class=\"attribute\">Access-Control-Allow-Credentials</span><span class=\"punctuation\">: </span>true // 是否允许用户发送、处理 cookie</span><br><span class=\"line\"><span class=\"attribute\">Access-Control-Max-Age</span><span class=\"punctuation\">: </span>172800 // 预检请求的有效期，单位为秒。有效期内，不需要发送预检请求，ps 48小时</span><br></pre></td></tr></table></figure>\n<p><em>当预检请求通过后，浏览器才会发送真实请求到服务器。这样就实现了跨域资源的请求访问。</em></p>\n<p>所以后端处理其实处理的就是这次预检请求</p>\n<h3 id=\"后端应用处理-filterhttpservletresponse-方法\"><a class=\"markdownIt-Anchor\" href=\"#后端应用处理-filterhttpservletresponse-方法\">#</a> 后端应用处理 - Filter&amp;HttpServletResponse 方法<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JTkwJThFJUU3JUFCJUFGJUU1JUJBJTk0JUU3JTk0JUE4JUU1JUE0JTg0JUU3JTkwJTg2LS0tZmlsdGVyaHR0cHNlcnZsZXRyZXNwb25zZS0lRTYlOTYlQjklRTYlQjMlOTU=\">#</span></h3>\n<p>这种方法不会用到 Spring，对 Servlet 也可以使用</p>\n<p>在 web.xml 中配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 跨域 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>webFliter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>com.n031.filter.WebFliter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>webFliter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>编写 java 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebFliter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Filter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">init</span><span class=\"params\">(FilterConfig filterConfig)</span> <span class=\"keyword\">throws</span> ServletException &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span><br><span class=\"line\">            <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">        <span class=\"type\">HttpServletRequest</span> <span class=\"variable\">req</span> <span class=\"operator\">=</span> (HttpServletRequest)request;</span><br><span class=\"line\">        <span class=\"type\">HttpServletResponse</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> (HttpServletResponse) response;</span><br><span class=\"line\">        <span class=\"comment\">// 允许跨域的域名，设置*表示允许所有域名</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">origin</span> <span class=\"operator\">=</span> req.getHeader(<span class=\"string\">&quot;Origin&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;abcdefg&quot;</span>.contains(origin)) &#123;  <span class=\"comment\">// 满足指定的条件</span></span><br><span class=\"line\">            res.addHeader(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, origin);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.addHeader(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;http://www.test.com&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 允许跨域的方法，可设置*表示所有</span></span><br><span class=\"line\">        res.addHeader(<span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>, <span class=\"string\">&quot;GET, POST, PUT, DELETE&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 允许的自定义字段</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">headers</span> <span class=\"operator\">=</span> req.getHeader(<span class=\"string\">&quot;Access-Control-Request-Headers&quot;</span>); <span class=\"comment\">// 获取 request 发来的自定义字段</span></span><br><span class=\"line\">        res.addHeader(<span class=\"string\">&quot;Access-Control-Allow-Headers&quot;</span>, headers);</span><br><span class=\"line\">        <span class=\"comment\">// 或者</span></span><br><span class=\"line\">        <span class=\"comment\">// res.addHeader(&quot;Access-Control-Allow-Headers&quot;, &quot;X-Custom-Header&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">// 预检请求的有效期，单位为秒。有效期内，不需要发送预检请求，ps 48小时</span></span><br><span class=\"line\">        res.addHeader(<span class=\"string\">&quot;Access-Control-Max-Age&quot;</span>, <span class=\"string\">&quot;172800&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 还可以有其他配置...</span></span><br><span class=\"line\">        chain.doFilter(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"后端应用处理-spring-方法\"><a class=\"markdownIt-Anchor\" href=\"#后端应用处理-spring-方法\">#</a> 后端应用处理 - Spring 方法<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JTkwJThFJUU3JUFCJUFGJUU1JUJBJTk0JUU3JTk0JUE4JUU1JUE0JTg0JUU3JTkwJTg2LS0tc3ByaW5nLSVFNiU5NiVCOSVFNiVCMyU5NQ==\">#</span></h3>\n<p>Spring 解决跨域的方法很多，感觉就和茴字有五种写法一样。这里列举的并不全。</p>\n<p>先看下原理。说实话虽然搞不懂为什么这么做，但看了下这个类的源码确实是这么写的。</p>\n<p>本质都是构造 <code>CorsConfiguration</code>  然后委托给 <code>DefaultCorsProcessor</code>  实现（责任链模式，要学的东西好多啊…）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; allowedOrigins;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; allowedMethods;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; allowedHeaders;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;String&gt; exposedHeaders;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Boolean allowCredentials;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long maxAge;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>DefaultCorsProcessor</code>  的 <code>processRequest</code>  处理步骤如下（ <code>spring-web 5.1.8-RELEASE</code> ）</p>\n<ol>\n<li>判断是否是包含 Origin 字段，不包含就放行，否则继续判断</li>\n<li>判断 Response 的 Header 是否已经包含 Access-Control-Allow-Origin。如果包含，证明已经被处理过了，放行，否则继续判断</li>\n<li>判断是否同源，如果是则放行，否则继续判断</li>\n<li>到此步基本已经得出这是个跨域请求的结论。然后看配置了 CORS 规则\n<ul>\n<li>没有配置，且是预检请求，则拒绝该请求 *（说明该应用禁止跨域）*</li>\n<li>没有配置，且不是预检请求，跳过跨域处理 *（有可能导致返回数据被浏览器拦截）*</li>\n<li>配置了，则根据配置的规则（ <code>CorsConfiguration</code> ）决定是否放行</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"在-controller-上添加-crossorigin-注解\"><a class=\"markdownIt-Anchor\" href=\"#在-controller-上添加-crossorigin-注解\">#</a> 在 Controller 上添加 @CrossOrigin 注解<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JTlDJUE4LWNvbnRyb2xsZXItJUU0JUI4JThBJUU2JUI3JUJCJUU1JThBJUEwLWNyb3Nzb3JpZ2luLSVFNiVCMyVBOCVFOCVBNyVBMw==\">#</span></h4>\n<p>这种方式适合只有一两个 rest 接口需要跨域或者没有网关的情况下，这种处理方式就非常简单，适合在原来基代码基础上修改，影响比较小。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CrossOrigin(allowCredentials = &quot;true&quot;, allowedHeaders = &quot;*&quot;, methods = &#123;RequestMethod.GET, RequestMethod.POST, RequestMethod.DELETE&#125;, origins = &quot;*&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@PostMapping(&quot;/abc&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">handler</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> String json)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;abc&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"增加-webmvcconfigurer-全局配置\"><a class=\"markdownIt-Anchor\" href=\"#增加-webmvcconfigurer-全局配置\">#</a> 增加 WebMvcConfigurer 全局配置<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JUEyJTlFJUU1JThBJUEwLXdlYm12Y2NvbmZpZ3VyZXItJUU1JTg1JUE4JUU1JUIxJTgwJUU5JTg1JThEJUU3JUJEJUFF\">#</span></h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebMvcConfigurerAdapter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addCorsMappings</span><span class=\"params\">(CorsRegistry registry)</span> &#123;</span><br><span class=\"line\">        registry.addMapping(<span class=\"string\">&quot;/**&quot;</span>)<span class=\"comment\">// 允许跨域的访问路径</span></span><br><span class=\"line\">            .allowedOrigins(<span class=\"string\">&quot;*&quot;</span>)<span class=\"comment\">// 允许跨域访问的源</span></span><br><span class=\"line\">            .allowedMethods(<span class=\"string\">&quot;POST&quot;</span>, <span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;PUT&quot;</span>, <span class=\"string\">&quot;OPTIONS&quot;</span>, <span class=\"string\">&quot;DELETE&quot;</span>)<span class=\"comment\">// 允许请求方法</span></span><br><span class=\"line\">            .maxAge(<span class=\"number\">172800</span>)<span class=\"comment\">// 预检间隔时间</span></span><br><span class=\"line\">            .allowCredentials(<span class=\"literal\">true</span>);<span class=\"comment\">// 是否允许发送 cookie</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意由于 Java8 开始支持 default method，这个类从 spring 5.0 开始已经过期，未来这个方法将转移到 <code>WebMvcConfigurer</code>  接口中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">default</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addCorsMappings</span><span class=\"params\">(CorsRegistry registry)</span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"结合-filter-使用\"><a class=\"markdownIt-Anchor\" href=\"#结合-filter-使用\">#</a> 结合 Filter 使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU3JUJCJTkzJUU1JTkwJTg4LWZpbHRlci0lRTQlQkQlQkYlRTclOTQlQTg=\">#</span></h4>\n<p>其实和方法 2 类似，都是构造 <code>CorsConfiguration</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> FilterRegistrationBean&lt;CorsFilter&gt; <span class=\"title function_\">corsFilter</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UrlBasedCorsConfigurationSource</span> <span class=\"variable\">source</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UrlBasedCorsConfigurationSource</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">CorsConfiguration</span> <span class=\"variable\">config</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CorsConfiguration</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 是否发送cookie</span></span><br><span class=\"line\">        config.setAllowCredentials(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 允许的网站域名，全允许则设为 *</span></span><br><span class=\"line\">        config.addAllowedOrigin(<span class=\"string\">&quot;http://localhost:8088&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 允许 HEADER 或 METHOD ， * 为全部</span></span><br><span class=\"line\">        config.addAllowedHeader(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        config.addAllowedMethod(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        source.registerCorsConfiguration(<span class=\"string\">&quot;/**&quot;</span>, config);</span><br><span class=\"line\">        FilterRegistrationBean&lt;CorsFilter&gt; bean = <span class=\"keyword\">new</span> <span class=\"title class_\">FilterRegistrationBean</span>&lt;&gt;(<span class=\"keyword\">new</span> <span class=\"title class_\">CorsFilter</span>(source));</span><br><span class=\"line\">        <span class=\"comment\">// 这个顺序很重要，为避免麻烦请设置在最前</span></span><br><span class=\"line\">        bean.setOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bean;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上这种方案如果微服务多的话，需要在每个服务的主类上都加上这么段代码，增加了维护量。</p>\n<p>这三种方案都是在 SpringBoot 的基础上实现的解决方案，在模块较多或者接口较多的情况下不易维护。</p>\n<p>既然 Spring Cloud 自带 Gateway，下面就讲讲使用 Gateway 的跨域解决方案。（Gateway 是取代不断跳票的 Zuul 的新一代网关）</p>\n<h4 id=\"在-gateway-增加-corsfilter-拦截器\"><a class=\"markdownIt-Anchor\" href=\"#在-gateway-增加-corsfilter-拦截器\">#</a> 在 Gateway 增加 CorsFilter 拦截器<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JTlDJUE4LWdhdGV3YXktJUU1JUEyJTlFJUU1JThBJUEwLWNvcnNmaWx0ZXItJUU2JThCJUE2JUU2JTg4JUFBJUU1JTk5JUE4\">#</span></h4>\n<p><em><strong>4 5 方法未验证</strong></em></p>\n<p>这种方案跟方案三有些类似，只不过是放到了 Gateway 端，对于有多个微服务模块的情况下，就大大减少了 SpringBoot 模块端的代码量，让各个模块更集中精力做业务逻辑实现。这个方案只需要在 Gateway 里添加 Filter 代码类即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpHeaders;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpStatus;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.cors.CorsUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.server.WebFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.server.WebFilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> reactor.core.publisher.Mono;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsWebFilter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebFilter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">ALL</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">MAX_AGE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;18000&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Mono&lt;Void&gt; <span class=\"title function_\">filter</span><span class=\"params\">(ServerWebExchange ctx, WebFilterChain chain)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ServerHttpRequest</span> <span class=\"variable\">request</span> <span class=\"operator\">=</span> ctx.getRequest();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> request.getPath().value();</span><br><span class=\"line\">        <span class=\"type\">ServerHttpResponse</span> <span class=\"variable\">response</span> <span class=\"operator\">=</span> ctx.getResponse();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;/favicon.ico&quot;</span>.equals(path)) &#123;</span><br><span class=\"line\">            response.setStatusCode(HttpStatus.OK);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Mono.empty();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!CorsUtils.isCorsRequest((HttpServletRequest) request)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> chain.filter(ctx);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">HttpHeaders</span> <span class=\"variable\">requestHeaders</span> <span class=\"operator\">=</span> request.getHeaders();</span><br><span class=\"line\">        <span class=\"type\">HttpMethod</span> <span class=\"variable\">requestMethod</span> <span class=\"operator\">=</span> requestHeaders.getAccessControlRequestMethod();</span><br><span class=\"line\">        <span class=\"type\">HttpHeaders</span> <span class=\"variable\">headers</span> <span class=\"operator\">=</span> response.getHeaders();</span><br><span class=\"line\">        headers.add(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, requestHeaders.getOrigin());</span><br><span class=\"line\">        headers.addAll(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, requestHeaders.getAccessControlRequestHeaders());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (requestMethod != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            headers.add(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, requestMethod.name());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        headers.add(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, <span class=\"string\">&quot;true&quot;</span>);</span><br><span class=\"line\">        headers.add(HttpHeaders.ACCESS_CONTROL_EXPOSE_HEADERS, ALL);</span><br><span class=\"line\">        headers.add(HttpHeaders.ACCESS_CONTROL_MAX_AGE, MAX_AGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (request.getMethod() == HttpMethod.OPTIONS) &#123;</span><br><span class=\"line\">            response.setStatusCode(HttpStatus.OK);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Mono.empty();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> chain.filter(ctx);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改-gateway-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#修改-gateway-配置文件\">#</a> 修改 Gateway 配置文件<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU0JUJGJUFFJUU2JTk0JUI5LWdhdGV3YXktJUU5JTg1JThEJUU3JUJEJUFFJUU2JTk2JTg3JUU0JUJCJUI2\">#</span></h4>\n<p>在仔细阅读过 Gateway 的文档你就会发现，原来 CorsFilter 早已经在 Gateway 里了，不需要自己写代码实现，而且更灵活，修改配置文件即可，结合配置中心使用，可以实现动态修改。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">globalcors:</span></span><br><span class=\"line\">        <span class=\"attr\">corsConfigurations:</span></span><br><span class=\"line\">          <span class=\"string\">&#x27;[/**]&#x27;</span><span class=\"string\">:</span></span><br><span class=\"line\">            <span class=\"attr\">allowedOrigins:</span> <span class=\"string\">&quot;docs.spring.io&quot;</span></span><br><span class=\"line\">            <span class=\"attr\">allowedMethods:</span></span><br><span class=\"line\">              <span class=\"bullet\">-</span> <span class=\"string\">GET</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"后端服务器处理-ngnix-方法\"><a class=\"markdownIt-Anchor\" href=\"#后端服务器处理-ngnix-方法\">#</a> 后端服务器处理 - Ngnix 方法<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JTkwJThFJUU3JUFCJUFGJUU2JTlDJThEJUU1JThBJUExJUU1JTk5JUE4JUU1JUE0JTg0JUU3JTkwJTg2LS0tbmduaXgtJUU2JTk2JUI5JUU2JUIzJTk1\">#</span></h3>\n<p>这里的 Nginx 尽做反向代理功能，浏览器访问页面在 <span class=\"exturl\" data-url=\"aHR0cDovL2EuY29t\">a.com</span> 的 Nginx 上，ajax 请求接口是 <span class=\"exturl\" data-url=\"aHR0cDovL2IuY29t\">b.com</span>，所以浏览器认为是跨域</p>\n<p>Nginx 在 nginx.conf 上配（vhost 是约定做法，这样做不修改主文件）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include vhost/*.config;</span><br></pre></td></tr></table></figure>\n<p>创建 cors.conf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">    listen 80; // 监听80端口</span><br><span class=\"line\">    server_name b.com; // 监听向 b.com 发送的请求</span><br><span class=\"line\">    location /&#123;</span><br><span class=\"line\">        proxy_pass http://ser432ver.53253bb.com:8080; // 转发到哪里</span><br><span class=\"line\"></span><br><span class=\"line\">        // Filter实现的功能在Nginx上再实现一遍</span><br><span class=\"line\"></span><br><span class=\"line\">        add_header Access-Control-Allow-Origin $http_origin; // $http_ 可以获取请求中相应的 header 参数</span><br><span class=\"line\">        add_header Access-Control-Allow-Method *;</span><br><span class=\"line\">        add_header Access-Control-Allow-Headers X-Custom-Header;</span><br><span class=\"line\">        // 或者</span><br><span class=\"line\">        // add_header Access-Control-Allow-Headers $http_access_control_request_headers;</span><br><span class=\"line\">        add_header Access-Control-Allow-Credentials true;</span><br><span class=\"line\">        add_header Access-Max-age 172800;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 直接处理预检命令，if 后要带空格</span><br><span class=\"line\">        if ($request_method = OPTIONS) &#123;</span><br><span class=\"line\">            return 200;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"前端服务器解决跨域\"><a class=\"markdownIt-Anchor\" href=\"#前端服务器解决跨域\">#</a> 前端服务器解决跨域<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JTg5JThEJUU3JUFCJUFGJUU2JTlDJThEJUU1JThBJUExJUU1JTk5JUE4JUU4JUE3JUEzJUU1JTg2JUIzJUU4JUI3JUE4JUU1JTlGJTlG\">#</span></h2>\n<p>但其实大部分情况下，我们会把前端应用和请求转发放在同一台 Nginx 上</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">    listen 80; // 监听80端口</span><br><span class=\"line\">    server_name a.com; // 监听向 a.com 发送的请求</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        root   html;</span><br><span class=\"line\">        index  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    locltion /ajaxserver &#123;</span><br><span class=\"line\">        proxy_pass http://ser432ver.53253bb.com:8080; // 后端地址</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样实质是隐藏跨域，让浏览器认为没有访问其他域就不会发生跨域。</p>\n<p>前端代码需要在每个 ajax 请求前都要加上 <code>/ajaxserver</code></p>\n<h2 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbjAzMS9wLzExODI4Nzk3Lmh0bWwjJUU1JThGJTgyJUU4JTgwJTgzJUU4JUI1JTg0JUU2JTk2JTk5\">#</span></h2>\n<blockquote>\n<p>ajax 跨域完全讲解</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW1vb2MuY29tL2xlYXJuLzk0Nw==\">https://www.imooc.com/learn/947</span></p>\n<p>SpringBoot 使用 CORS 解决跨域请求问题</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vNzc4OElUL3AvMTA2OTMwNzMuaHRtbA==\">https://www.cnblogs.com/7788IT/p/10693073.html</span></p>\n<p>Spring MVC 之 @RequestParam @RequestBody @RequestHeader 等详解</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N1bW1lclN1blN0YXJ0L2FydGljbGUvZGV0YWlscy83ODY3Njc4MQ==\">https://blog.csdn.net/summerSunStart/article/details/78676781</span></p>\n<p>你不知道的「跨域 CORS」</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hYmI1ZjZiZjkyYzM=\">https://www.jianshu.com/p/abb5f6bf92c3</span></p>\n<p>关于跨域问题和安全性的一点理解</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pheXRhbGVudC9hcnRpY2xlL2RldGFpbHMvNTIyMTM1NzY=\">https://blog.csdn.net/jaytalent/article/details/52213576</span></p>\n<p>浅谈跨域威胁与安全</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzIwODY3Mi5odG1s\">https://www.freebuf.com/articles/web/208672.html</span></p>\n<p>cors 跨域中关于 access-control-allow-headers 导致的错误</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9jZWNiNzNiMjZhMTE=\">https://www.jianshu.com/p/cecb73b26a11</span></p>\n<p>什么是跨域？跨域解决方法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MTI4MTc5L2FydGljbGUvZGV0YWlscy84NDk1NjU1Mg==\">https://blog.csdn.net/qq_38128179/article/details/84956552</span></p>\n<p>Spring Cloud 配置跨域访问的五种方案？你用的是哪一种呢？</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxNzE4ODI5Ng==\">https://segmentfault.com/a/1190000017188296</span></p>\n<p>servlet 跨域请求</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0MTM1NjE1L2FydGljbGUvZGV0YWlscy84MjkwMDc4Ng==\">https://blog.csdn.net/qq_34135615/article/details/82900786</span></p>\n<p>跨域 (CORS) 解决方案中，为什么 Access-Control-Allow-Methods 不起作用？</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3EvMTAxMDAwMDAwNTA2NzU1Mi9hLTEwMjAwMDAwMDUwNjc4MjI=\">https://segmentfault.com/q/1010000005067552/a-1020000005067822</span></p>\n</blockquote>\n",
            "tags": [
                "跨域"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/11/11/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/JavaScript%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/",
            "url": "http://victinsever.github.io/2022/11/11/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/JavaScript%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/",
            "title": "JavaScript常用函数",
            "date_published": "2022-11-11T15:21:29.000Z",
            "content_html": "<h1 id=\"开发中常用的随机函数\"><a class=\"markdownIt-Anchor\" href=\"#开发中常用的随机函数\">#</a> 开发中常用的随机函数</h1>\n<h2 id=\"生成随机颜色\"><a class=\"markdownIt-Anchor\" href=\"#生成随机颜色\">#</a> 生成随机颜色</h2>\n<p>生成随机颜色。</p>\n<figure class=\"highlight javascript\"><figcaption><span>生成随机颜色</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">generateRandomHexColor</span> = (<span class=\"params\"></span>) =&gt; <span class=\"string\">`#<span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">0xffffff</span>).toString(<span class=\"number\">16</span>)&#125;</span>`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">generateRandomHexColor</span>())</span><br></pre></td></tr></table></figure>\n<h2 id=\"数组重排序\"><a class=\"markdownIt-Anchor\" href=\"#数组重排序\">#</a> 数组重排序</h2>\n<p>原生数组没有重排序功能</p>\n<figure class=\"highlight javascript\"><figcaption><span>数组重排序</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">shuffle</span> = (<span class=\"params\">arr</span>) =&gt; arr.<span class=\"title function_\">sort</span>(<span class=\"function\">() =&gt;</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() - <span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">shuffle</span>(arr))</span><br></pre></td></tr></table></figure>\n<h2 id=\"复制到剪贴板\"><a class=\"markdownIt-Anchor\" href=\"#复制到剪贴板\">#</a> 复制到剪贴板</h2>\n<p>对数组的元素进行重新排序是一项非常重要的技巧，但是原生 Array 中并没有这项功能。</p>\n<figure class=\"highlight javascript\"><figcaption><span>复制到剪贴板</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">copyToClipboard</span> = (<span class=\"params\">text</span>) =&gt; navigator.<span class=\"property\">clipboard</span> &amp;&amp; navigator.<span class=\"property\">clipboard</span>.<span class=\"property\">writeText</span> &amp;&amp; navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">writeText</span>(text)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">copyToClipboard</span>(<span class=\"string\">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"检测暗色主题\"><a class=\"markdownIt-Anchor\" href=\"#检测暗色主题\">#</a> 检测暗色主题</h2>\n<p>暗色主题日益普及，很多用的都会在设备中启用案模式，我们将应用程序切换到暗色主题可以提高用户体验度。</p>\n<figure class=\"highlight javascript\"><figcaption><span>检测暗色主题</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">isDarkMode</span> = (<span class=\"params\"></span>) =&gt; <span class=\"variable language_\">window</span>.<span class=\"property\">matchMedia</span> &amp;&amp; <span class=\"variable language_\">window</span>.<span class=\"title function_\">matchMedia</span>(<span class=\"string\">&quot;(prefers-color-scheme: dark)&quot;</span>).<span class=\"property\">matches</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">isDarkMode</span>())</span><br></pre></td></tr></table></figure>\n<h2 id=\"滚动到顶部\"><a class=\"markdownIt-Anchor\" href=\"#滚动到顶部\">#</a> 滚动到顶部</h2>\n<p>将元素滚动到顶部最简单的方法是使用 scrollIntoView。设置 block 为 start 可以滚动到顶部；设置 behavior 为 smooth 可以开启平滑滚动。</p>\n<figure class=\"highlight javascript\"><figcaption><span>滚动到顶部</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">scrollToTop</span> = (<span class=\"params\">element</span>) =&gt; element.<span class=\"title function_\">scrollIntoView</span>(&#123; <span class=\"attr\">behavior</span>: <span class=\"string\">&quot;smooth&quot;</span>, <span class=\"attr\">block</span>: <span class=\"string\">&quot;start&quot;</span> &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"滚动到底部\"><a class=\"markdownIt-Anchor\" href=\"#滚动到底部\">#</a> 滚动到底部</h2>\n<p>与滚动到顶部一样，滚动到底部只需要设置 block 为 end 即可。</p>\n<figure class=\"highlight javascript\"><figcaption><span>滚动到底部</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">scrollToBottom</span> = (<span class=\"params\">element</span>) =&gt; element.<span class=\"title function_\">scrollIntoView</span>(&#123; <span class=\"attr\">behavior</span>: <span class=\"string\">&quot;smooth&quot;</span>, <span class=\"attr\">block</span>: <span class=\"string\">&quot;end&quot;</span> &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"检测元素是否在屏幕中\"><a class=\"markdownIt-Anchor\" href=\"#检测元素是否在屏幕中\">#</a> 检测元素是否在屏幕中</h2>\n<p>检查元素是否在窗口中最好的方法是使用 IntersectionObserver。</p>\n<figure class=\"highlight javascript\"><figcaption><span>检测元素是否在屏幕中</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">callback</span> = (<span class=\"params\">entries</span>) =&gt; &#123;</span><br><span class=\"line\">  entries.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">entry</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (entry.<span class=\"property\">isIntersecting</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// `entry.target` is the dom element</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`<span class=\"subst\">$&#123;entry.target.id&#125;</span> is visible`</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">  <span class=\"attr\">threshold</span>: <span class=\"number\">1.0</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">IntersectionObserver</span>(callback, options);</span><br><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bottomBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;bottom-btn&quot;</span>);</span><br><span class=\"line\">observer.<span class=\"title function_\">observe</span>(btn);</span><br><span class=\"line\">observer.<span class=\"title function_\">observe</span>(bottomBtn);</span><br></pre></td></tr></table></figure>\n<h2 id=\"检测设备\"><a class=\"markdownIt-Anchor\" href=\"#检测设备\">#</a> 检测设备</h2>\n<p>使用 navigator.userAgent 来检测网站运行在哪种平台设备上。</p>\n<figure class=\"highlight javascript\"><figcaption><span>检测设备</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">detectDeviceType</span> = (<span class=\"params\"></span>) =&gt;</span><br><span class=\"line\">  <span class=\"regexp\">/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i</span>.<span class=\"title function_\">test</span>(</span><br><span class=\"line\">    navigator.<span class=\"property\">userAgent</span></span><br><span class=\"line\">  ) ? <span class=\"string\">&quot;Mobile&quot;</span> : <span class=\"string\">&quot;Desktop&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">detectDeviceType</span>());</span><br></pre></td></tr></table></figure>\n<h2 id=\"隐藏元素\"><a class=\"markdownIt-Anchor\" href=\"#隐藏元素\">#</a> 隐藏元素</h2>\n<p>我们可以将元素的 style.visibility 设置为 hidden，隐藏元素的可见性，但元素的空间仍然会被占用。如果设置元素的 style.display 为 none，会将元素从渲染流中删除。</p>\n<figure class=\"highlight javascript\"><figcaption><span>隐藏元素</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">hideElement</span> = (<span class=\"params\">el, removeFromFlow = <span class=\"literal\">false</span></span>) =&gt; &#123;</span><br><span class=\"line\">  removeFromFlow ? (el.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">  : (el.<span class=\"property\">style</span>.<span class=\"property\">visibility</span> = <span class=\"string\">&#x27;hidden&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"从-url-中获取参数\"><a class=\"markdownIt-Anchor\" href=\"#从-url-中获取参数\">#</a> 从 URL 中获取参数</h2>\n<p>JavaScript 中有一个 URL 对象，通过它可以非常方便的获取 URL 中的参数。</p>\n<figure class=\"highlight javascript\"><figcaption><span>从 URL 中获取参数</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getParamByUrl</span> = (<span class=\"params\">key</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> url = <span class=\"keyword\">new</span> <span class=\"title function_\">URL</span>(location.<span class=\"property\">href</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> url.<span class=\"property\">searchParams</span>.<span class=\"title function_\">get</span>(key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"深拷贝对象\"><a class=\"markdownIt-Anchor\" href=\"#深拷贝对象\">#</a> 深拷贝对象</h2>\n<p>深拷贝对象非常简单，先将对象转换为字符串，再转换成对象即可。</p>\n<figure class=\"highlight javascript\"><figcaption><span>深拷贝对象</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">deepCopy</span> = obj =&gt; <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj))</span><br></pre></td></tr></table></figure>\n<p>除了利用 JSON 的 API，还有更新的深拷贝对象的 structuredClone API，但并不是在所有的浏览器中都支持。</p>\n<figure class=\"highlight javascript\"><figcaption><span>深拷贝对象</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">structuredClone</span>(obj)</span><br></pre></td></tr></table></figure>\n<h2 id=\"等待函数\"><a class=\"markdownIt-Anchor\" href=\"#等待函数\">#</a> 等待函数</h2>\n<p>JavaScript 提供了 setTimeout 函数，但是它并不返回 Promise 对象，所以我们没办法使用 async 作用在这个函数上，但是我们可以封装等待函数。</p>\n<figure class=\"highlight javascript\"><figcaption><span>等待函数</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">wait</span> = (<span class=\"params\">ms</span>) =&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>)=&gt;</span> <span class=\"built_in\">setTimeout</span>(resolve, ms))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">asyncFn</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"title function_\">wait</span>(<span class=\"number\">1000</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;等待异步函数执行结束&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">asyncFn</span>()</span><br></pre></td></tr></table></figure>",
            "tags": [
                "JavaScript"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/11/07/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/vue/vue%E9%A1%B9%E7%9B%AE%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E7%AC%94%E8%AE%B0/",
            "url": "http://victinsever.github.io/2022/11/07/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/vue/vue%E9%A1%B9%E7%9B%AE%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E7%AC%94%E8%AE%B0/",
            "title": "Vue源码解析笔记",
            "date_published": "2022-11-07T04:15:01.000Z",
            "content_html": "<h1 id=\"vue重点模块源码解析\"><a class=\"markdownIt-Anchor\" href=\"#vue重点模块源码解析\">#</a> Vue 重点模块源码解析</h1>\n<h2 id=\"new-vue\"><a class=\"markdownIt-Anchor\" href=\"#new-vue\">#</a> new Vue</h2>\n<ul>\n<li>\n<p>_init：</p>\n<p>初始化时，调用了_init 方法，生成一个 uid 并混入一些全局的 api，此时将加入 beforeCreate 勾子，然后渲染初始化数据后，加入 created 勾子，然后开始进行挂载。</p>\n</li>\n<li>\n<p>$mount</p>\n<ul>\n<li>\n<p>具体实现思路是：根据传入的 el 查看节点，根据是否有 render，没有的话是否有 template 模板，都没有就用 outerHTML 作为渲染模板</p>\n</li>\n<li>\n<p>在挂载阶段主要是得到 render 函数</p>\n</li>\n</ul>\n</li>\n<li>\n<p>mountCompontent</p>\n<ul>\n<li>挂载真实 dom，创建了渲染使用的 Watcher，初次渲染时内部调用了 updateCompontent 方法更新组件</li>\n</ul>\n</li>\n<li>\n<p>_render</p>\n<p>render 函数被调用得到 Vnode</p>\n</li>\n<li>\n<p>update</p>\n<p>在 update 中获取 Vnode，进行页面视图更新，这个 Vnode 是指的旧的 Vnode，没有则通过 el 更新，有则通过旧节点更新</p>\n</li>\n<li>\n<p>patch</p>\n<p>用 Vnode 首次渲染真实 dom，通过递归等方法判断内部节点的渲染方式</p>\n</li>\n</ul>\n<h2 id=\"双向数据绑定\"><a class=\"markdownIt-Anchor\" href=\"#双向数据绑定\">#</a> 双向数据绑定</h2>\n<ul>\n<li>核心方法：Object.defineProperty (obj, prop, descriptor)</li>\n<li>核心类：Watcher，Dep</li>\n<li>原理：<strong>初始化 data 调用 observe 方法给 data 中的数据重写 get 和 set 方法，渲染真实 dom 时，渲染 watcher 会去访问页面上使用了的属性变量，给属性的 Dep 加上渲染函数，每次修改就会通知 watcher 修改视图</strong>。</li>\n<li>初始化 data，递归给 data 属性重写 get，set，同时增加一个 Dep 类，渲染阶段的 Dep 会收集 watcher，每次修改通知 watcher 调用 dep.notify () 更新。</li>\n<li>个人 idea：其实这就是 MVC 设计中的视图和模型之间的数据流通和绑定思路。</li>\n</ul>\n<h2 id=\"数组响应式\"><a class=\"markdownIt-Anchor\" href=\"#数组响应式\">#</a> 数组响应式</h2>\n<p>获取数组原型拿到数组原有方法进行重写，重写主要针对 7 个要对数组有直接变更的方法，数组是响应式的就会拿到数组上的__ob__属性，调用该属性上的 notify () 方法。</p>\n<h2 id=\"watch监听实现\"><a class=\"markdownIt-Anchor\" href=\"#watch监听实现\">#</a> Watch 监听实现</h2>\n<p>核心：利用 watcher 和 dep 两个类实现，区别于数据绑定的是 watcher 保留用户传入的 watch 回调函数</p>\n<h2 id=\"computed实现\"><a class=\"markdownIt-Anchor\" href=\"#computed实现\">#</a> computed 实现</h2>\n<p>重点：计算属性方法内部变量的 Dep 上有两个 watcher，分别是计算属性 watcher 和渲染 watcher，计算属性 watcher 只控制是否重新计算，跟随渲染 watcher 重新计算</p>\n<h2 id=\"nexttick原理\"><a class=\"markdownIt-Anchor\" href=\"#nexttick原理\">#</a> nextTick 原理</h2>\n<ul>\n<li>采用异步队列方式控制 DOM 的更新（异步函数执行是在同步函数之后）</li>\n<li>采用 vue 异步方式降级策略，为了适应兼容性：promise,MutationObserver,setTmmediate,setTimeout</li>\n</ul>\n<h2 id=\"vueextend\"><a class=\"markdownIt-Anchor\" href=\"#vueextend\">#</a> Vue.extend</h2>\n<p>基于 Vue 的构造函数，创建一个子类，子类继承父类的所有属性和方法，最后返回这个子类。</p>\n<p>每一个子组件都是一个 Sub 构造函数。</p>\n<p>子组件的创建流程和 new Vue 初始化的流程区别不大。</p>\n<p>子组件创建的时候没有 el 生成，在 vue 自身进行渲染时，调用本身的 child.$mount (undefined)，这个没有传入 el，因此不会挂载到页面上去，是直接放在 vnode.compontentInstance.el 上，通过父组件渲染页面时，压入页面上。</p>\n<p>参考文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MTk4OTY0NDM=\">vue 源码阅读解析（超详细） - 知乎 (zhihu.com)</span></p>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/11/02/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/vue/Vue2%E9%A1%B9%E7%9B%AE%E7%BB%93%E5%90%88%E9%80%9A%E7%94%A8%E4%BE%9D%E8%B5%96%E8%BF%9B%E8%A1%8C%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/",
            "url": "http://victinsever.github.io/2022/11/02/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/vue/Vue2%E9%A1%B9%E7%9B%AE%E7%BB%93%E5%90%88%E9%80%9A%E7%94%A8%E4%BE%9D%E8%B5%96%E8%BF%9B%E8%A1%8C%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/",
            "title": "Vue2项目结合通用依赖进行项目搭建",
            "date_published": "2022-11-02T04:57:01.000Z",
            "content_html": "<h1 id=\"vue2项目结合通用依赖进行项目搭建\"><a class=\"markdownIt-Anchor\" href=\"#vue2项目结合通用依赖进行项目搭建\">#</a> Vue2 项目结合通用依赖进行项目搭建</h1>\n<h2 id=\"技术栈\"><a class=\"markdownIt-Anchor\" href=\"#技术栈\">#</a> 技术栈</h2>\n<ul>\n<li>\n<p><strong>Vue-cli</strong>（框架）</p>\n<ul>\n<li>Vue 项目框架，基于 Vue.js 进行快速开发的完整系统</li>\n<li>本次项目为 Vue2 项目框架</li>\n</ul>\n</li>\n<li>\n<p><strong>Vuex</strong>（数据管理）</p>\n<ul>\n<li>一个专为 Vue.js 应用程序开发的<strong>状态管理模式 + 库</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化</li>\n<li>本项目中作为全局共享数据库，采用三版本</li>\n</ul>\n</li>\n<li>\n<p><strong>Vue-router</strong>（路由管理）</p>\n<ul>\n<li>Vue.js 官方的路由插件，它和 vue.js 是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTYlQjclQjElRTUlQkElQTYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">深度</span>集成的，适合用于构建单页面应用</li>\n<li>本项目中作为路由链接管理插件，采用三版本</li>\n</ul>\n</li>\n<li>\n<p><strong>ElementUI</strong>（组件库）</p>\n<ul>\n<li>基于 Vue 2.0 的桌面端组件库</li>\n<li>本项目作为主要的全局组件库，进行样式美化</li>\n</ul>\n</li>\n<li>\n<p><strong>axios</strong>（ajax 请求封装库）</p>\n<ul>\n<li>一个基于 promise 的网络请求库，可以用于浏览器和 node.js</li>\n<li>本项目作为数据请求发送的封装库，对前后端数据进行连接</li>\n</ul>\n</li>\n<li>\n<p><strong>Sass</strong>（CSS 扩展语言插件）</p>\n<ul>\n<li>进行 CSS 的语言扩展，提高 CSS 样式的可读性，便于 CSS 样式设计</li>\n</ul>\n</li>\n<li>\n<p><strong>NProgress</strong>（小进度条插件）</p>\n</li>\n</ul>\n<p>上述技术有很多等价的技术可以代替，但是基本的技术如框架，路由管理必不可少，此处只是本人最常用的 Vue2 技术套装，本文章做一个一般流程记录，推荐的代替技术在最后（仅供参考）。</p>\n<h2 id=\"搭建项目\"><a class=\"markdownIt-Anchor\" href=\"#搭建项目\">#</a> 搭建项目</h2>\n<p>下面是项目搭建和依赖下载和搭配流程，特别强调部分的技术版本依赖必须一一对应。</p>\n<ul>\n<li></li>\n</ul>\n",
            "tags": [
                "Vue",
                "Vuex",
                "Vue-router",
                "ElementUI",
                "axios",
                "sass",
                "NProgress"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/25/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/canvas/%E7%BB%98%E5%88%B6%E6%97%B6%E9%92%9F/",
            "url": "http://victinsever.github.io/2022/10/25/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/canvas/%E7%BB%98%E5%88%B6%E6%97%B6%E9%92%9F/",
            "title": "canvas绘制时钟",
            "date_published": "2022-10-25T15:50:55.000Z",
            "content_html": "<h3 id=\"canvas绘制时钟\"><a class=\"markdownIt-Anchor\" href=\"#canvas绘制时钟\">#</a> Canvas 绘制时钟</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.clock</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: skyblue;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-shadow</span>: <span class=\"number\">2px</span> <span class=\"number\">5px</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgb</span>(<span class=\"number\">80</span>, <span class=\"number\">196</span>, <span class=\"number\">241</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clock&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400px&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400px&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;canvas&quot;</span>&gt;</span></span><br><span class=\"line\">            您的浏览器版本过低，不支持canvas功能</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> canvas = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;canvas&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> ctx = canvas.<span class=\"title function_\">getContext</span>(<span class=\"string\">&#x27;2d&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 定义变量</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> w = h = <span class=\"number\">400</span> <span class=\"comment\">//宽高</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> x = y = <span class=\"number\">200</span> <span class=\"comment\">//圆心</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> r = <span class=\"number\">180</span> <span class=\"comment\">//半径</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> r_h = <span class=\"number\">60</span>, r_m = <span class=\"number\">120</span>, r_s = <span class=\"number\">140</span> <span class=\"comment\">//时分秒针长度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> r_t = <span class=\"number\">140</span> <span class=\"comment\">//文字半径</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> r_squ = <span class=\"number\">165</span> <span class=\"comment\">//刻度半径</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> r_c = <span class=\"number\">10</span> <span class=\"comment\">//表盘圆点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> deg = <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span> * <span class=\"number\">2</span> <span class=\"comment\">//圆周</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 平移中心点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        ctx.<span class=\"title function_\">translate</span>(w / <span class=\"number\">2</span>, h / <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">clock</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">clock</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">1000</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">clock</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 画圆盘</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">drawCircle</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, r, <span class=\"string\">&#x27;#fff&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//画圆心</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">drawCircle</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, r_c, <span class=\"string\">&#x27;#000&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 画指针</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> day = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> hour = day.<span class=\"title function_\">getHours</span>() % <span class=\"number\">12</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> minute = day.<span class=\"title function_\">getMinutes</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> second = day.<span class=\"title function_\">getSeconds</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            hour = hour * deg / <span class=\"number\">12</span> - deg / <span class=\"number\">4</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            minute = minute * deg / <span class=\"number\">60</span> - deg / <span class=\"number\">4</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            second = second * deg / <span class=\"number\">60</span> - deg / <span class=\"number\">4</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">drawLine</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, r_h * <span class=\"title class_\">Math</span>.<span class=\"title function_\">cos</span>(hour), r_h * <span class=\"title class_\">Math</span>.<span class=\"title function_\">sin</span>(hour), <span class=\"string\">&#x27;#000&#x27;</span>, <span class=\"number\">10</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">drawLine</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, r_m * <span class=\"title class_\">Math</span>.<span class=\"title function_\">cos</span>(minute), r_m * <span class=\"title class_\">Math</span>.<span class=\"title function_\">sin</span>(minute), <span class=\"string\">&#x27;#000&#x27;</span>, <span class=\"number\">5</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">drawLine</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, r_s * <span class=\"title class_\">Math</span>.<span class=\"title function_\">cos</span>(second), r_s * <span class=\"title class_\">Math</span>.<span class=\"title function_\">sin</span>(second), <span class=\"string\">&#x27;red&#x27;</span>, <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//画数字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">12</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> t = (deg / <span class=\"number\">12</span>) * i - deg / <span class=\"number\">4</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> x = r_t * <span class=\"title class_\">Math</span>.<span class=\"title function_\">cos</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> y = r_t * <span class=\"title class_\">Math</span>.<span class=\"title function_\">sin</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">drawText</span>(i, x, y)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//画刻度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">60</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> t = (deg / <span class=\"number\">60</span>) * i</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> x1 = r * <span class=\"title class_\">Math</span>.<span class=\"title function_\">cos</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> y1 = r * <span class=\"title class_\">Math</span>.<span class=\"title function_\">sin</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">//判断是否整点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (i % <span class=\"number\">5</span> === <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">let</span> x2 = r_squ * <span class=\"title class_\">Math</span>.<span class=\"title function_\">cos</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">let</span> y2 = r_squ * <span class=\"title class_\">Math</span>.<span class=\"title function_\">sin</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">drawLine</span>(x1, y1, x2, y2, <span class=\"string\">&#x27;#999&#x27;</span>, <span class=\"number\">3</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">let</span> x2 = (r_squ + <span class=\"number\">3</span>) * <span class=\"title class_\">Math</span>.<span class=\"title function_\">cos</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">let</span> y2 = (r_squ + <span class=\"number\">3</span>) * <span class=\"title class_\">Math</span>.<span class=\"title function_\">sin</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">drawLine</span>(x1, y1, x2, y2, <span class=\"string\">&#x27;#ddd&#x27;</span>, <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 画文字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">drawText</span>(<span class=\"params\">text, x, y, font = <span class=\"string\">&#x27;20px 微软雅黑&#x27;</span></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">font</span> = font</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">textAlign</span> = <span class=\"string\">&#x27;center&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">textBaseline</span> = <span class=\"string\">&#x27;middle&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">fillText</span>(text, x, y)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//画圆</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">drawCircle</span>(<span class=\"params\">x, y, r, color = <span class=\"string\">&#x27;#000&#x27;</span></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">beginPath</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">arc</span>(x, y, r, <span class=\"number\">0</span>, <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span> * <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">fillStyle</span> = color</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">fill</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">closePath</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//画线</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">drawLine</span>(<span class=\"params\">x1, y1, x2, y2, color = <span class=\"string\">&#x27;black&#x27;</span>, width</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">beginPath</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">moveTo</span>(x1, y1)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">lineTo</span>(x2, y2)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">strokeStyle</span> = color</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">lineWidth</span> = width</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">lineCap</span> = <span class=\"string\">&#x27;round&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">stroke</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">closePath</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "canvas"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/25/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/canvas/%E7%BA%BF%E6%80%A7%E5%B0%8F%E7%90%83%E7%89%B9%E6%95%88/",
            "url": "http://victinsever.github.io/2022/10/25/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/canvas/%E7%BA%BF%E6%80%A7%E5%B0%8F%E7%90%83%E7%89%B9%E6%95%88/",
            "title": "线性小球特效",
            "date_published": "2022-10-25T15:45:07.000Z",
            "content_html": "<h3 id=\"线性小球特效\"><a class=\"markdownIt-Anchor\" href=\"#线性小球特效\">#</a> 线性小球特效</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500px&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;500px&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;canvas&quot;</span>&gt;</span></span><br><span class=\"line\">        您的浏览器版本过低，不支持canvas功能</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> canvas = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;canvas&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> ctx = canvas.<span class=\"title function_\">getContext</span>(<span class=\"string\">&#x27;2d&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 获取屏幕大小</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> w = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span> - <span class=\"number\">6</span> <span class=\"comment\">//画布大小</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> h = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span> - <span class=\"number\">6</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//更新宽高</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        canvas.<span class=\"property\">width</span> = w</span></span><br><span class=\"line\"><span class=\"language-javascript\">        canvas.<span class=\"property\">height</span> = h</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> speed = <span class=\"number\">15</span> <span class=\"comment\">//速度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> ballNum = <span class=\"number\">15</span> <span class=\"comment\">//小球个数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> lineColor = <span class=\"string\">&#x27;#ccc&#x27;</span> <span class=\"comment\">//线的颜色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//文字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> titleArr = (<span class=\"string\">&quot;JavaScript HTML5前端 JAVA PHP jQuery Canvas&quot;</span> +</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"string\">&quot; CSS CSS3 Angular Bootstrap LayUI 全栈工程师 NodeJS React Vue.js&quot;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> ballArr = [] <span class=\"comment\">//小球数组</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; ballNum; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 当前小球</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> ball = <span class=\"keyword\">new</span> <span class=\"title class_\">Ball</span>(titleArr[i])</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ballArr.<span class=\"title function_\">push</span>(ball)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//清除画布</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">clearRect</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, w, h)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; ballArr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                ballArr[i].<span class=\"title function_\">show</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 小球连线</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; i; j++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//取出当前小球前面的小球</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">let</span> preBall = ballArr[j]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">drawLine</span>(ballArr[i].<span class=\"property\">x</span>, ballArr[i].<span class=\"property\">y</span>, preBall.<span class=\"property\">x</span>, preBall.<span class=\"property\">y</span>, lineColor)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, speed)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//创建小球类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">Ball</span>(<span class=\"params\">text</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">width</span> = w</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">height</span> = h <span class=\"comment\">//盒子宽高</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> = <span class=\"title function_\">r</span>(<span class=\"number\">30</span>) + <span class=\"number\">10</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> = <span class=\"title function_\">r</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">width</span> - <span class=\"number\">2</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">r</span>) + <span class=\"variable language_\">this</span>.<span class=\"property\">r</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">y</span> = <span class=\"title function_\">r</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">height</span> - <span class=\"number\">2</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">r</span>) + <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> </span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = <span class=\"title function_\">rColor2</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">xSpeed</span> = <span class=\"title function_\">r</span>(<span class=\"number\">5</span>) + <span class=\"number\">2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">ySpeed</span> = <span class=\"title function_\">r</span>(<span class=\"number\">3</span>) + <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">text</span> = text</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Ball</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">show</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">run</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">drawCircle</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">x</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">y</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">r</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">color</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">drawText</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">text</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">r</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">y</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Ball</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">run</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">x</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> &lt;= <span class=\"number\">0</span> || <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> &gt;= <span class=\"variable language_\">this</span>.<span class=\"property\">width</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">xSpeed</span> = -<span class=\"variable language_\">this</span>.<span class=\"property\">xSpeed</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125; </span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> += <span class=\"variable language_\">this</span>.<span class=\"property\">xSpeed</span>            </span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">y</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> &lt;= <span class=\"number\">0</span> || <span class=\"variable language_\">this</span>.<span class=\"property\">y</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> &gt;= <span class=\"variable language_\">this</span>.<span class=\"property\">height</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">ySpeed</span> = -<span class=\"variable language_\">this</span>.<span class=\"property\">ySpeed</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;                    </span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">y</span> += <span class=\"variable language_\">this</span>.<span class=\"property\">ySpeed</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 随机颜色2：rgb</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">rColor2</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;rgb(&#x27;</span> + <span class=\"title function_\">r</span>(<span class=\"number\">255</span>) + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"title function_\">r</span>(<span class=\"number\">255</span>) + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"title function_\">r</span>(<span class=\"number\">255</span>) + <span class=\"string\">&#x27;)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 随机颜色#ffffff</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">rColor</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;#&#x27;</span> + <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">0xffffff</span>).<span class=\"title function_\">toString</span>(<span class=\"number\">16</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 随机数字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">r</span>(<span class=\"params\">num</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * num)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 画文字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">drawText</span>(<span class=\"params\">text, x, y, font = <span class=\"string\">&#x27;20px 微软雅黑&#x27;</span></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">font</span> = font</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">textAlign</span> = <span class=\"string\">&#x27;top&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">textBaseline</span> = <span class=\"string\">&#x27;middle&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">fillText</span>(text, x, y)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//画圆</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">drawCircle</span>(<span class=\"params\">x, y, r, color = <span class=\"string\">&#x27;#000&#x27;</span></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">beginPath</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">arc</span>(x, y, r, <span class=\"number\">0</span>, <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span> * <span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">fillStyle</span> = color</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">fill</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//画线</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">drawLine</span>(<span class=\"params\">x1, y1, x2, y2, color = <span class=\"string\">&#x27;black&#x27;</span></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">beginPath</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">moveTo</span>(x1, y1)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">lineTo</span>(x2, y2)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"property\">strokeStyle</span> = color</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ctx.<span class=\"title function_\">stroke</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "canvas"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/22/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/11-%E6%89%8B%E5%86%99new%EF%BC%8Ccall%EF%BC%8Capply%E7%9A%84%E5%AE%9E%E7%8E%B0/",
            "url": "http://victinsever.github.io/2022/10/22/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/11-%E6%89%8B%E5%86%99new%EF%BC%8Ccall%EF%BC%8Capply%E7%9A%84%E5%AE%9E%E7%8E%B0/",
            "title": "手写new，call，apply的实现",
            "date_published": "2022-10-22T05:20:48.000Z",
            "content_html": "<h3 id=\"手写new的实现\"><a class=\"markdownIt-Anchor\" href=\"#手写new的实现\">#</a> 手写 new 的实现</h3>\n<ul>\n<li>第一版</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_new</span>(<span class=\"params\">Ctor, ...args</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">    obj.<span class=\"property\">__proto__</span> = <span class=\"title class_\">Ctor</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span></span><br><span class=\"line\">    <span class=\"title class_\">Ctor</span>.<span class=\"title function_\">apply</span>(obj, args)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第二版</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_new</span>(<span class=\"params\">Ctor, ...args</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断是否是构造器</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title class_\">Ctor</span>.<span class=\"title function_\">hasOwnProperty</span>(<span class=\"string\">&#x27;prototype&#x27;</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TypeError</span>(<span class=\"string\">&#x27;Ctor is not a constructor&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//根据Ctor的原型创建一个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"title class_\">Ctor</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//显示绑定</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"title class_\">Ctor</span>.<span class=\"title function_\">apply</span>(obj, args)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//判断绑定结果不是null且对象和函数同时可能存在的情况</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(result !== <span class=\"literal\">null</span> &amp;&amp; (<span class=\"keyword\">typeof</span> result == <span class=\"string\">&#x27;object&#x27;</span> || <span class=\"keyword\">typeof</span> result == <span class=\"string\">&#x27;function&#x27;</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>调用：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Pig</span>(<span class=\"params\"></span>)&#123; <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name &#125;</span><br><span class=\"line\"><span class=\"title function_\">_new</span>(<span class=\"title class_\">Pig</span>, <span class=\"string\">&quot;peiqi&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"手写call的实现\"><a class=\"markdownIt-Anchor\" href=\"#手写call的实现\">#</a> 手写 call 的实现</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">; (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 接收实参有三种方案:</span></span><br><span class=\"line\">    <span class=\"comment\">//    1)通过形参</span></span><br><span class=\"line\">    <span class=\"comment\">//    2)通过...args</span></span><br><span class=\"line\">    <span class=\"comment\">//    3)通过arguments  伪数组  接收了所有的实以</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">mycall</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">        context = context ? <span class=\"title class_\">Object</span>(context) : <span class=\"variable language_\">window</span></span><br><span class=\"line\">        context.<span class=\"property\">f</span> = <span class=\"variable language_\">this</span>; <span class=\"comment\">// f也是指向fn函数</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            args.<span class=\"title function_\">push</span>(<span class=\"variable language_\">arguments</span>[i])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = context.<span class=\"title function_\">f</span>(...args);  <span class=\"comment\">// 隐式绑定</span></span><br><span class=\"line\">        <span class=\"keyword\">delete</span> context.<span class=\"property\">f</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 挂载到Function的原型对象上</span></span><br><span class=\"line\">    <span class=\"comment\">// 就意味着所有的函数都可以调用mycall</span></span><br><span class=\"line\">    <span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">mycall</span> = mycall;</span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;wc&quot;</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = fn.<span class=\"title function_\">mycall</span>(obj, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br></pre></td></tr></table></figure>\n<h3 id=\"手写apply的实现\"><a class=\"markdownIt-Anchor\" href=\"#手写apply的实现\">#</a> 手写 apply 的实现</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">; (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">mlapply</span>(<span class=\"params\">context, args</span>) &#123;</span><br><span class=\"line\">        context = context ? <span class=\"title class_\">Object</span>(context) : <span class=\"variable language_\">window</span>;</span><br><span class=\"line\">        context.<span class=\"property\">f</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = context.<span class=\"title function_\">f</span>(...args);</span><br><span class=\"line\">        <span class=\"keyword\">delete</span> context.<span class=\"property\">f</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">mlapply</span> = mlapply;</span><br><span class=\"line\">&#125;())</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JavaScript"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/10-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9AJS%E4%B8%AD%E5%9C%A8%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8Ba%E7%AD%89%E4%BA%8E1%E6%88%96%E8%80%852%E6%88%96%E8%80%853/",
            "url": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/10-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9AJS%E4%B8%AD%E5%9C%A8%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8Ba%E7%AD%89%E4%BA%8E1%E6%88%96%E8%80%852%E6%88%96%E8%80%853/",
            "title": "面试题：JS中在什么情况下a等于1或者2或者3",
            "date_published": "2022-10-21T15:02:20.000Z",
            "content_html": "<h3 id=\"面试题1js中在什么情况下a等于1或者2或者3\"><a class=\"markdownIt-Anchor\" href=\"#面试题1js中在什么情况下a等于1或者2或者3\">#</a> 面试题 1：JS 中在什么情况下 a 等于 1 或者 2 或者 3？</h3>\n<p><strong>题目详情如下：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let a = ?;</span><br><span class=\"line\">if (a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3) &#123;</span><br><span class=\"line\">    console.log(&quot;i love you~&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方案一：通过重写 valueOf 方法返回 1,2,3</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = &#123;</span><br><span class=\"line\">    <span class=\"attr\">i</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">valueOf</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++<span class=\"variable language_\">this</span>.<span class=\"property\">i</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方案二：通过重写 toString 方法返回 1,2,3</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = &#123;</span><br><span class=\"line\">    <span class=\"attr\">i</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">toString</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++<span class=\"variable language_\">this</span>.<span class=\"property\">i</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方案三：通过数组的 shift 每次拿到 1,2,3 赋值给 toString 方法</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">a.<span class=\"property\">toString</span> = a.<span class=\"property\">shift</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方案四：通过 Object.defineProperty 定义变量进行迭代</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"variable language_\">window</span>,<span class=\"string\">&quot;a&quot;</span>,&#123;</span><br><span class=\"line\">    <span class=\"title function_\">get</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JavaScript",
                "面试题"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/09-with%EF%BC%8Ceval%EF%BC%8C%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/",
            "url": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/09-with%EF%BC%8Ceval%EF%BC%8C%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/",
            "title": "with，eval，严格模式",
            "date_published": "2022-10-21T14:49:23.000Z",
            "content_html": "<h4 id=\"with\"><a class=\"markdownIt-Anchor\" href=\"#with\">#</a> with</h4>\n<ul>\n<li>\n<p>功能：扩展作用域链。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> address = <span class=\"string\">&quot;bj&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">uname</span>: <span class=\"string\">&quot;wc&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">uage</span>: <span class=\"number\">18</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> (obj) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// var uname = &quot;xq&quot;;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果自己没有uname，会去obj中找uname</span></span><br><span class=\"line\">    <span class=\"comment\">// with扩展了作用域链</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果obj中没有，去ECG中找</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(uname);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(address);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在开发中，不要使用 with 语句，因为破坏了作用域链</p>\n</li>\n<li>\n<p>vue 源码中使用到了 with 语句</p>\n</li>\n</ul>\n<h4 id=\"eval\"><a class=\"markdownIt-Anchor\" href=\"#eval\">#</a> eval</h4>\n<ul>\n<li>\n<p>功能：把一片字符串，当成 JS 代码去执行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">110</span>;</span><br><span class=\"line\"><span class=\"comment\">//  一片字符串</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> jsStr = <span class=\"string\">&quot; var msg=&#x27;haha&#x27;; console.log(msg); console.log(age); &quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">eval</span>(jsStr);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>eval 是 JS 中内置的函数，直接去调用</p>\n</li>\n<li>\n<p>eval 执行的代码，并不是一个沙箱环境，受外界的影响</p>\n</li>\n<li>\n<p>开发中不建议使用</p>\n</li>\n</ul>\n<h4 id=\"严格模式\"><a class=\"markdownIt-Anchor\" href=\"#严格模式\">#</a> 严格模式</h4>\n<p>JS 被设计时，非常灵活，也有非常多的不足，在 ES5 中，提出了严格模式，默认情况下，我们写的代码执行时，并不是严格模式。要使用严格模式，必须开启严格模式。</p>\n<ul>\n<li>\n<p>开启严格模式</p>\n<ul>\n<li>\n<p>在一个 JS 文件的最前面开启，这样，整个 JS 文件都要受严格模式的约束。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// js文件</span></span><br><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在某个函数中，开启严格模式，函数体中的代码就受严格模式的约束。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">gn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    a = <span class=\"number\">123</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\">    <span class=\"title function_\">gn</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>严格模式限制</p>\n<ul>\n<li>\n<p>不能使用没有加 var 的全局变量</p>\n</li>\n<li>\n<p>在严格模式下形参不能重名</p>\n</li>\n<li>\n<p>不能使用老的 8 进制数据的写法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// let num1 = 0x123; // 16进制</span></span><br><span class=\"line\"><span class=\"comment\">// let num2 = 0o10; // 8进制</span></span><br><span class=\"line\"><span class=\"comment\">// let num3 = 010;  // 8进制 (老的写法)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>不能使用 with 语句</p>\n</li>\n<li>\n<p>在严格模式下，JS 串中定义的数据，外界不能使用。外界定义的数据，在 JS 串中还是可以使用</p>\n</li>\n<li>\n<p>在非严格模式下，this 是 window  在严格模式下，不会默认绑定，this 是 undefind。 独立函数调用，this 不再表示 window，是 und</p>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "JavaScript"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/08-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/",
            "url": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/08-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/",
            "title": "数据存储",
            "date_published": "2022-10-21T14:34:23.000Z",
            "content_html": "<h3 id=\"localstorage\"><a class=\"markdownIt-Anchor\" href=\"#localstorage\">#</a> localStorage</h3>\n<h4 id=\"使用的api\"><a class=\"markdownIt-Anchor\" href=\"#使用的api\">#</a> 使用的 API</h4>\n<ul>\n<li>length 返回数据的数量</li>\n<li>setItem (key, value) 存储数据的 如果 key 一样，数据会发生覆盖</li>\n<li>getItem (key) 获取数据</li>\n<li>removeItem (key) 删除数据</li>\n<li>Clear () 清除 local storage 中的所有的数据</li>\n</ul>\n<p><strong>localStorage 是永久本地存储，只能手动删除修改</strong></p>\n<h4 id=\"sessionstorage\"><a class=\"markdownIt-Anchor\" href=\"#sessionstorage\">#</a> SessionStorage</h4>\n<h4 id=\"使用的api-2\"><a class=\"markdownIt-Anchor\" href=\"#使用的api-2\">#</a> 使用的 API</h4>\n<ul>\n<li>length 返回数据的数量</li>\n<li>setItem (key, value) 存储数据的 如果 key 一样，数据会发生覆盖</li>\n<li>getItem (key) 获取数据</li>\n<li>removeItem (key) 删除数据</li>\n<li>Clear () 清除 session storage 中的所有的数据</li>\n</ul>\n<p><strong>如果把浏览器关闭了，sessioinStorage 中的数据就没有了</strong></p>\n<h3 id=\"封装cache缓存存储\"><a class=\"markdownIt-Anchor\" href=\"#封装cache缓存存储\">#</a> 封装 Cache：缓存存储</h3>\n<ul>\n<li>使用<strong>原型对象</strong>封装：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Cache</span>(<span class=\"params\">isLocal = <span class=\"literal\">true</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span> = isLocal ? <span class=\"variable language_\">localStorage</span> : sessionStorage;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Cache</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">setItem</span> = <span class=\"keyword\">function</span> (<span class=\"params\">key, value</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">setItem</span>(key, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(value))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Cache</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getItem</span> = <span class=\"keyword\">function</span> (<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> value = <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">getItem</span>(key);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">        value = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(value)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Cache</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">removeItem</span> = <span class=\"keyword\">function</span> (<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">removeItem</span>(key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Cache</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">clear</span> = <span class=\"keyword\">function</span> (<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">clear</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Cache</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">length</span> = <span class=\"keyword\">function</span> (<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> localCache = <span class=\"keyword\">new</span> <span class=\"title class_\">Cache</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> sessionCache = <span class=\"keyword\">new</span> <span class=\"title class_\">Cache</span>(<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用<strong> class</strong> 封装：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cache</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">isLocal = <span class=\"literal\">true</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span> = isLocal ? <span class=\"variable language_\">localStorage</span> : sessionStorage;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">setItem</span>(<span class=\"params\">key, value</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">setItem</span>(key, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(value))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">getItem</span>(<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> value = <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">getItem</span>(key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">            value = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(value)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">removeItem</span>(<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">removeItem</span>(key)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">clear</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"title function_\">clear</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">length</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">storage</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> localCache = <span class=\"keyword\">new</span> <span class=\"title class_\">Cache</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> sessionCache = <span class=\"keyword\">new</span> <span class=\"title class_\">Cache</span>(<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JavaScript",
                "cache"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/07-JSON/",
            "url": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/07-JSON/",
            "title": "JSON",
            "date_published": "2022-10-21T14:21:05.000Z",
            "content_html": "<h2 id=\"json\"><a class=\"markdownIt-Anchor\" href=\"#json\">#</a> JSON</h2>\n<ul>\n<li>JSON: JavaScript Object Notation JS 对象描述符</li>\n<li>前后端交互的一种数据格式，我们可以把 JSON 数据扔给后端，后端也可以响应 JSON 数据</li>\n</ul>\n<h3 id=\"json格式\"><a class=\"markdownIt-Anchor\" href=\"#json格式\">#</a> JSON 格式</h3>\n<ul>\n<li>\n<p>格式一：字符串</p>\n<ul>\n<li>\n<p>不能使用单引号</p>\n</li>\n<li>\n<p>很少使用直接的字符串类型，而是被包装成后两种</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;hello json&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>格式二：对象</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;wc&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;age&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">18</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;friend&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;xq&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hobbies&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"string\">&quot;coding&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>格式三：数组</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;abc&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"number\">123</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;wc&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"json序列化和反序列化\"><a class=\"markdownIt-Anchor\" href=\"#json序列化和反序列化\">#</a> JSON 序列化和反序列化</h3>\n<ul>\n<li>\n<p>序列化：把对象转成 JSON 串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;wc&quot;</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> jsonStr = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj)</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;obj&quot;</span>, jsonStr)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>反序列化：把 JSON 串还原成 JS 对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> jsonStr = <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;obj&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(jsonStr);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>序列化和反序列化过程是深度拷贝</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;wc&quot;</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> newObj = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj === newObj) <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": [
                "JavaScript",
                "JSON"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/06-%E7%BB%A7%E6%89%BF/",
            "url": "http://victinsever.github.io/2022/10/21/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/06-%E7%BB%A7%E6%89%BF/",
            "title": "JS继承",
            "date_published": "2022-10-21T02:21:05.000Z",
            "content_html": "<h2 id=\"继承\"><a class=\"markdownIt-Anchor\" href=\"#继承\">#</a> 继承</h2>\n<p>让多个类之前，建立关系，便于代码的管理和复用。</p>\n<h3 id=\"不使用继承\"><a class=\"markdownIt-Anchor\" href=\"#不使用继承\">#</a> 不使用继承</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name, age</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayHello</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;开始说话...&quot;</span>); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Student</span>(<span class=\"params\">name, age, className</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">className</span> = className;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Student</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayHello</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;开始说话...&quot;</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>同种属性或者类似的方法不能复用，代码累赘。</p>\n<h3 id=\"原型继承\"><a class=\"markdownIt-Anchor\" href=\"#原型继承\">#</a> 原型继承</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Student</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();  <span class=\"comment\">// 原型继承可以继承父类上的公有方法</span></span><br><span class=\"line\"><span class=\"title class_\">Student</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Student</span>;  <span class=\"comment\">// 手动修改constructor的指向</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>通过显式原型对象建立对象关系，即子对象的原型指向父类。</p>\n</li>\n<li>\n<p>原型链继承：<strong>改变子类的原型对象</strong></p>\n<ul>\n<li>\n<p>核心：Student.prototype = new Person ();   修改子类的原型对象</p>\n</li>\n<li>\n<p>缺点：如果父中的数据是引用数据类型，子对象修改了，另一个子对象也会受影响</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"组合继承\"><a class=\"markdownIt-Anchor\" href=\"#组合继承\">#</a> 组合继承</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name,age</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Person执行了...&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Student</span>(<span class=\"params\">name,age,className</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Person</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>,name,age);  <span class=\"comment\">// 1遍,调用父类传参</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">className</span> = className;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// new Person(); // 也让Person函数执行一遍</span></span><br><span class=\"line\"><span class=\"title class_\">Student</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(); <span class=\"comment\">// 原型链继承核心</span></span><br><span class=\"line\"><span class=\"title class_\">Student</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Student</span>; </span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>核心：</p>\n<ul>\n<li>\n<p>Student.prototype = new Person (); // 继承父类的公有属性</p>\n</li>\n<li>\n<p>Person.call (this,name,age);  // 继承父类的私有属性</p>\n</li>\n</ul>\n</li>\n<li>\n<p>缺点：Person.call (this,name,age);  让父类构造函数多执行一遍</p>\n<h3 id=\"objectcreateapi\"><a class=\"markdownIt-Anchor\" href=\"#objectcreateapi\">#</a> Object.createAPI</h3>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个对象，又有一个新方案：Object.create</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> res = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(obj);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用来创建一个非常干净的，没有原型对象的对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n<p>Object.create 可以给创建出来的新对象指定原型对象。</p>\n<h3 id=\"寄生组合继承\"><a class=\"markdownIt-Anchor\" href=\"#寄生组合继承\">#</a> 寄生组合继承</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Student</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>)</span><br></pre></td></tr></table></figure>\n<p>使用 Object.createAPI 和组合继承一起调用。</p>\n<h3 id=\"es6中的class继承\"><a class=\"markdownIt-Anchor\" href=\"#es6中的class继承\">#</a> ES6 中的 Class 继承</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">name, age</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">sayHello</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;会说话...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 让Student类继承Person类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">name, age, className</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">super</span>(name, age); <span class=\"comment\">// 调用父类的 constructor</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">className</span> = className;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JavaScript",
                "继承"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/19/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/05-%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE/",
            "url": "http://victinsever.github.io/2022/10/19/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/05-%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE/",
            "title": "原型和原型链",
            "date_published": "2022-10-19T13:29:05.000Z",
            "content_html": "<h3 id=\"原型\"><a class=\"markdownIt-Anchor\" href=\"#原型\">#</a> 原型</h3>\n<h4 id=\"原型对象\"><a class=\"markdownIt-Anchor\" href=\"#原型对象\">#</a> 原型对象</h4>\n<ul>\n<li>\n<p>显示原型</p>\n<ul>\n<li>每个构造器（类）上都有一个叫 prototype 属性</li>\n<li>prototype 叫显示原型</li>\n</ul>\n</li>\n<li>\n<p>隐式原型</p>\n<ul>\n<li>\n<p>只要是一个对象，它的身上必定有一个属性，叫 <strong>proto</strong>，_ __proto__是属性名，叫隐式原型，对象的值是一个对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;&#125;</span><br><span class=\"line\">obj.<span class=\"property\">__proto__</span> <span class=\"comment\">//隐式原型对象</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>显示原型和隐式原型指向同一个对象，叫做原型对象</p>\n</li>\n</ul>\n<h4 id=\"对象的私有和公有属性\"><a class=\"markdownIt-Anchor\" href=\"#对象的私有和公有属性\">#</a> 对象的私有和公有属性</h4>\n<ul>\n<li>\n<p>obj 是一个对象，属性的无序集合，属性的分类有两种：</p>\n<ul>\n<li>私有属性\n<ul>\n<li>非 proto 找到的属性</li>\n</ul>\n</li>\n<li>公有属性  沿着__proto__找到的属性都是公有属性</li>\n</ul>\n</li>\n<li>\n<p>对象在调用属性时，先使用 hasOwnProperty 方法判断是否是私有属性，如果没有就会沿着原型链向上查找</p>\n</li>\n</ul>\n<h4 id=\"两个属性存在判断方法\"><a class=\"markdownIt-Anchor\" href=\"#两个属性存在判断方法\">#</a> 两个属性存在判断方法</h4>\n<ul>\n<li>\n<p>hasOwnProperty</p>\n<ul>\n<li>\n<p>判断当前对象自身是否有该属性（不在原型链上寻找，判断是否是私有）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;wc&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">18</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"title function_\">hasOwnProperty</span>(<span class=\"string\">&#x27;name&#x27;</span>));  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>in</p>\n<ul>\n<li>\n<p>判断当前对象是否有该属性（任何位置，不管是公有还是私有）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;push&quot;</span> <span class=\"keyword\">in</span> arr);  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"原型链\"><a class=\"markdownIt-Anchor\" href=\"#原型链\">#</a> 原型链</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// arr1是对象  对象身上都有一个隐式原型</span></span><br><span class=\"line\"><span class=\"comment\">// Array是类，也叫构造器，本质就是函数</span></span><br><span class=\"line\"><span class=\"comment\">// 函数身都都一个显示原型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"string\">&quot;wc&quot;</span>, <span class=\"string\">&quot;xq&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"string\">&quot;jj&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> == arr1.<span class=\"property\">__proto__</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> == arr2.<span class=\"property\">__proto__</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span> == <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span>); <span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>作用域链：在 EC 中查找数据的机制</li>\n</ul>\n<p><img data-src=\"./../../image/12321-1666190602837-3.png\" alt=\"12321\"></p>\n<ul>\n<li>\n<p>原型链：在对象上查找某个属性的机制</p>\n<ul>\n<li>\n<p>上图中的查找顺序如下图红色线所指：</p>\n<p><img data-src=\"./../../image/14-%E5%8E%9F%E5%9E%8B%E9%93%BE.png\" alt=\"14-原型链\"></p>\n</li>\n<li>\n<p>原型查找不断向上寻找作用域链中的属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造器</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name,age</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&quot;wc&quot;</span>,<span class=\"number\">18</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"property\">__proto__</span>.<span class=\"property\">constructor</span> == <span class=\"title class_\">Person</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"./../../image/15-%E5%8E%9F%E5%9E%8B%E9%93%BE.png\" alt=\"15-原型链\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<ul>\n<li>\n<p>一切都是对象</p>\n</li>\n<li>\n<p>对象是属性的无序集合</p>\n</li>\n<li>\n<p>属性分公有属性和私有属性</p>\n</li>\n<li>\n<p>每个对象身上都有一个__proto__属性，叫隐式原型</p>\n</li>\n<li>\n<p>每个函数身上都有一个 prototype 属性，叫显示式原型</p>\n</li>\n<li>\n<p>对象的隐式原型和函数的显示原型，指向一个对象，叫原型对象</p>\n</li>\n<li>\n<p>每一个原型对象身上有一个 constructor 属性，指向函数本身</p>\n</li>\n</ul>\n",
            "tags": [
                "JavaScript",
                "原型",
                "原型链"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/18/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/04-OOP%E5%8F%8A%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%A1%88/",
            "url": "http://victinsever.github.io/2022/10/18/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/04-OOP%E5%8F%8A%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%A1%88/",
            "title": "OOP",
            "date_published": "2022-10-18T12:46:23.000Z",
            "content_html": "<h2 id=\"oop\"><a class=\"markdownIt-Anchor\" href=\"#oop\">#</a> OOP</h2>\n<h3 id=\"对象的创建方法\"><a class=\"markdownIt-Anchor\" href=\"#对象的创建方法\">#</a> 对象的创建方法</h3>\n<ul>\n<li>new Object()</li>\n<li>let obj = {}</li>\n</ul>\n<h3 id=\"js的内置类\"><a class=\"markdownIt-Anchor\" href=\"#js的内置类\">#</a> JS 的内置类</h3>\n<ul>\n<li>常用的：Number，Array，Date，Function，Math，String，Boolean，Window，Set，Map</li>\n<li>Math，Window 等是单体内置类（不能 new）</li>\n</ul>\n<h3 id=\"js所有数据都是对象\"><a class=\"markdownIt-Anchor\" href=\"#js所有数据都是对象\">#</a> JS 所有数据都是对象</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 得到一个伪数组  伪数组不是数组  是对象</span></span><br><span class=\"line\"><span class=\"comment\">// [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]    &#123;0:&quot;a&quot;,1:&quot;b&quot;,2:&quot;c&quot;&#125;伪数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;li&quot;</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> lis = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&quot;li&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(lis[<span class=\"number\">0</span>]);</span><br><span class=\"line\"><span class=\"comment\">// 一个真实的DOM元素，本质就是一个对象</span></span><br><span class=\"line\"><span class=\"comment\">// 这个对象中的属性非常多，操作这个对象，性能就非常低</span></span><br><span class=\"line\"><span class=\"comment\">// jq死了，jq操作的是DOM元素，操作DOM元素性能就低</span></span><br><span class=\"line\"><span class=\"comment\">// vue  react操作的是虚拟DOM元素，虚拟DOM中的属性就没有那么多</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">dir</span>(lis[<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n<p>因此，在开发中，一般不直接操作原生 DOM，而是使用项目框架来操作虚拟 DOM，提高性能。</p>\n<ul>\n<li>\n<p>对象中的键都是字符串，不管加不加单双引号</p>\n</li>\n<li>\n<p>键也可以是其他值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"number\">123</span>: <span class=\"string\">&quot;wc&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">true</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"attr\">undefined</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;run...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj1[<span class=\"number\">123</span>]);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj1[<span class=\"literal\">true</span>]);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj1.<span class=\"property\">true</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj1.<span class=\"title function_\">undefined</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj1[<span class=\"literal\">undefined</span>]());</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>对象没有 length</p>\n</li>\n<li>\n<p>遍历对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 遍历对象使用for in</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj[key]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"对象创建方案\"><a class=\"markdownIt-Anchor\" href=\"#对象创建方案\">#</a> 对象创建方案</h3>\n<ul>\n<li>\n<p>通过字面量的形式创建对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> wc = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;wangcai&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">    <span class=\"attr\">height</span>: <span class=\"number\">188</span>,</span><br><span class=\"line\">    <span class=\"attr\">address</span>: <span class=\"string\">&quot;bj&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">coding</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;coding...&quot;</span>); &#125;,</span><br><span class=\"line\">    <span class=\"attr\">eating</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;eating...&quot;</span>); &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>缺点：①大量重复代码；②内存空间浪费</p>\n</li>\n<li>\n<p>工厂函数创建对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">createPerson</span>(<span class=\"params\">name,age,height,address</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = &#123;&#125;;</span><br><span class=\"line\">    p.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    p.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    p.<span class=\"property\">height</span> = height;</span><br><span class=\"line\">    p.<span class=\"property\">address</span> = address;</span><br><span class=\"line\">    p.<span class=\"property\">coding</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;coding...&quot;</span>);&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> wc = <span class=\"title function_\">createPerson</span>(<span class=\"string\">&quot;wangcai&quot;</span>,<span class=\"number\">11</span>,<span class=\"number\">180</span>,<span class=\"string\">&quot;bj&quot;</span>);  wc.<span class=\"title function_\">coding</span>();</span><br></pre></td></tr></table></figure>\n<p>直接产出对象</p>\n<p>缺点：获取工厂化对象时会通过字面量形式</p>\n</li>\n<li>\n<p>构造器创建对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Fn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;fn...&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 1）创建一个新的对象</span></span><br><span class=\"line\">    <span class=\"comment\">// 2）让函数中的this绑定到这个新对象上  new绑定</span></span><br><span class=\"line\">    <span class=\"comment\">// 3）执行类（函数）中的代码</span></span><br><span class=\"line\">    <span class=\"comment\">// 4）返回上面的新对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> f = <span class=\"keyword\">new</span> <span class=\"title class_\">Fn</span>();</span><br></pre></td></tr></table></figure>\n<p>缺点：也会造成空间浪费</p>\n</li>\n<li>\n<p>构造器 + 原型对象创建对象</p>\n</li>\n</ul>\n<p>推荐使用：构造器 + 原型对象</p>\n",
            "tags": [
                "JavaScript"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/18/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/03-JS%E7%9A%84this/",
            "url": "http://victinsever.github.io/2022/10/18/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/03-JS%E7%9A%84this/",
            "title": "JS的this",
            "date_published": "2022-10-18T11:59:01.000Z",
            "content_html": "<h2 id=\"this\"><a class=\"markdownIt-Anchor\" href=\"#this\">#</a> this</h2>\n<h3 id=\"this是什么\"><a class=\"markdownIt-Anchor\" href=\"#this是什么\">#</a> this 是什么</h3>\n<ul>\n<li>this 到底是什么和你书写的位置没有关系，和调用方式有关系</li>\n<li>this 是在产生 EC 时，动态绑定的</li>\n</ul>\n<h3 id=\"this的绑定规则\"><a class=\"markdownIt-Anchor\" href=\"#this的绑定规则\">#</a> this 的绑定规则</h3>\n<ul>\n<li>\n<p><strong>函数的角色</strong></p>\n<ul>\n<li>\n<p>普通函数</p>\n</li>\n<li>\n<p>对象中的方法</p>\n</li>\n<li>\n<p>对象（一切都是对象）  对象是属性的无序集合</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">gn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;gn...&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// dir表示以对象有形式打印出函数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">dir</span>(gn);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>函数也是类（构造函数 / 构造器），通常情况下，首字母大写</p>\n</li>\n</ul>\n</li>\n<li>\n<p>默认绑定</p>\n<p>独立调用则直接输出 window</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);  <span class=\"comment\">// window</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"keyword\">function</span> <span class=\"title function_\">gn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">       <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);  <span class=\"comment\">// window</span></span><br><span class=\"line\">       <span class=\"title function_\">fn</span>();  <span class=\"comment\">// 独立函数调用</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"keyword\">function</span> <span class=\"title function_\">kn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">       <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);  <span class=\"comment\">// window</span></span><br><span class=\"line\">       <span class=\"title function_\">gn</span>();  <span class=\"comment\">// 独立函数调用</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">// 独立函数调用</span></span><br><span class=\"line\"> <span class=\"title function_\">kn</span>();</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>隐式绑定</p>\n<ul>\n<li>\n<p>一个函数中的 this 是什么，就看谁去调用了这个函数</p>\n</li>\n<li>\n<p>obj 打点去调用了，函数中的 this 表示 obj</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">name</span>:<span class=\"string\">&quot;wc&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">fn</span>:fn</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不叫独立的函数调用</span></span><br><span class=\"line\"><span class=\"comment\">// 是通过obj打点去调用的</span></span><br><span class=\"line\"><span class=\"comment\">// fn中的this表示什么，就看点前面是什么</span></span><br><span class=\"line\"><span class=\"comment\">// 点前面是obj，this就是obj</span></span><br><span class=\"line\">obj.<span class=\"title function_\">fn</span>();<span class=\"comment\">//obj</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;wc&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fn</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;xq&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">gn</span>:obj.<span class=\"property\">fn</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">obj2.<span class=\"title function_\">gn</span>(); <span class=\"comment\">//obj2</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>显示绑定</p>\n<ul>\n<li>\n<p>函数也是一个对象，对象是属性的无序集合，内部有非常多的默认属性或方法，重点关注三个方法，call，apply，bind</p>\n</li>\n<li>\n<p>call</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">num1,num2</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>, num1 + num2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;wc&quot;</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数也是对象，call是它内部的一个方法</span></span><br><span class=\"line\"><span class=\"comment\">// 我们直接去调用这个方法</span></span><br><span class=\"line\"><span class=\"comment\">// 此方法，可以让我们显示地绑定this</span></span><br><span class=\"line\"><span class=\"comment\">// call的作用：1）显示绑定this  2）让fn执行 3）也可以传递</span></span><br><span class=\"line\">fn.<span class=\"title function_\">call</span>(obj,<span class=\"number\">666</span>,<span class=\"number\">111</span>);  <span class=\"comment\">// 显示绑定函数中的this</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>apply</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>, num1 + num2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;wc&quot;</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// apply的作用和call一样，只不过传参的方式不一样</span></span><br><span class=\"line\"><span class=\"comment\">// apply的话，需要把参数放到一个数组中</span></span><br><span class=\"line\">fn.<span class=\"title function_\">apply</span>(obj, [<span class=\"number\">666</span>, <span class=\"number\">111</span>]);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>bind</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>, num1 + num2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;wc&quot;</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bind的作用：1）显示绑定this  2）也可以传参   但是不会让函数执行，call和apply都会让函数执行  3）bind返回绑定this之后的新函数</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> newFn = fn.<span class=\"title function_\">bind</span>(obj, <span class=\"number\">666</span>, <span class=\"number\">111</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">newFn</span>();</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>总结</p>\n<ul>\n<li>call  fn.call (obj,1,2)  显示绑定 this  让 fn 执行  也能传参</li>\n<li>apply  fn.apply (obj,[1,2])  显示绑定 this  让 fn 执行  参数放数组中</li>\n<li>bind  fn.bind (obj,1,2)  显示绑定 this  返回绑定 this 后的新函数  也能传参</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// String &#123;&#x27;hello&#x27;&#125;  是一个对象</span></span><br><span class=\"line\"><span class=\"comment\">//  会把hello包装成一个对象</span></span><br><span class=\"line\"><span class=\"comment\">// fn.call(&quot;hello&quot;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果绑定到und上，实际是绑定到了window上</span></span><br><span class=\"line\"><span class=\"comment\">// fn.call(undefined);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果绑定到null上，实际是绑定到了window上</span></span><br><span class=\"line\">fn.<span class=\"title function_\">call</span>(<span class=\"literal\">null</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>new 绑定</p>\n<ul>\n<li>\n<p>new 做了什么</p>\n<ul>\n<li>在函数内部创建一个对象</li>\n<li>把函数内的 this 绑定到了对象上</li>\n<li>函数执行</li>\n<li>返回这个对象（new 完后，肯定是得到一个对象）</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&quot;wc&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// new一个类，得到一个对象  new是一个运算符</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p1);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>内置函数绑定</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定时器中的this表示window</span></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">&#125;,<span class=\"number\">2000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>点我<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">let</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 监听器中的this表示事件源</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"绑定优先级\"><a class=\"markdownIt-Anchor\" href=\"#绑定优先级\">#</a> 绑定优先级</h3>\n<ul>\n<li>显示 &gt; 隐式</li>\n<li>new &gt; 隐式</li>\n<li>new &gt; bind</li>\n<li>new 绑定 不能和 call 与 apply 比较（因为 call 和 apply 执行了）</li>\n</ul>\n<h2 id=\"箭头函数\"><a class=\"markdownIt-Anchor\" href=\"#箭头函数\">#</a> 箭头函数</h2>\n<h3 id=\"箭头函数书写方法\"><a class=\"markdownIt-Anchor\" href=\"#箭头函数书写方法\">#</a> 箭头函数书写方法</h3>\n<ul>\n<li>\n<p>普通写法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">foo</span> =  (<span class=\"params\">num1, num2</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>形参只有 1 个，那么 () 可以不写</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">foo</span> = num1 =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1*<span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>函数体中只有一条语句，{} 和 return 都可以不写</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">foo</span> = num1 =&gt; num1 * <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>函数体中只有一条语句，没有 reutrn，{} 也是可以不写的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">foo</span> = num1 =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num1 ** <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>函数体中只有一条语句，并且返回一个对象  删除 return 和 {}，对象的 {} 会当成函数的 {}，如果没有形参 () 不能省</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">foo</span> = (<span class=\"params\"></span>) =&gt; (&#123; <span class=\"attr\">a</span>: <span class=\"number\">666</span> &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"箭头函数特点\"><a class=\"markdownIt-Anchor\" href=\"#箭头函数特点\">#</a> 箭头函数特点</h3>\n<ul>\n<li>箭头函数中没有 this 指向自身，当中的 this 指向函数外部</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);<span class=\"comment\">//window</span></span><br><span class=\"line\">&#125;,<span class=\"number\">2000</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>箭头函数没有 constuctor，不能被 new 出来</li>\n<li>箭头函数不能用作 generator 函数，不能被当做迭代器</li>\n</ul>\n",
            "tags": [
                "JavaScript",
                "this"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/18/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/02-%E5%8F%98%E9%87%8F%E5%92%8C%E9%97%AD%E5%8C%85/",
            "url": "http://victinsever.github.io/2022/10/18/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/02-%E5%8F%98%E9%87%8F%E5%92%8C%E9%97%AD%E5%8C%85/",
            "title": "变量和闭包",
            "date_published": "2022-10-18T10:18:01.000Z",
            "content_html": "<h3 id=\"var变量加与不加的区别\"><a class=\"markdownIt-Anchor\" href=\"#var变量加与不加的区别\">#</a> Var 变量加与不加的区别</h3>\n<ul>\n<li>\n<p>加 var 在预编译期间会提升，不加 var 不会</p>\n</li>\n<li>\n<p>不管是否加 var，只要全局变量，在非严格模式下，都会挂载到 GO 上</p>\n</li>\n<li>\n<p>加 var 的变量，可以做全局变量，也可以做局部变量，没有加 var 只能做全局变量</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">110</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">a</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// console.log(b);</span></span><br><span class=\"line\">b = <span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">b</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"let\"><a class=\"markdownIt-Anchor\" href=\"#let\">#</a> let</h3>\n<ul>\n<li>\n<p>项目开发中，基本上都是清一色的 let</p>\n</li>\n<li>\n<p>let 是 ES6 中提出来，弥补了 var 声明变量的缺点</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"comment\">// ReferenceError: Cannot access &#x27;a&#x27; before initialization</span></span><br><span class=\"line\">    <span class=\"comment\">// a没有初始化（赋值），是不能访问的</span></span><br><span class=\"line\">    <span class=\"comment\">// 理解成：使用let声明的变量是没有提升</span></span><br><span class=\"line\">    <span class=\"comment\">// 理解成：使用let声明的变量提升了，但是没有赋值，没有赋值是不能直接访问的</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">110</span>;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// let+&#123;&#125;可以形成块级作用域</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"comment\">// let + &#123;&#125; 形成块级作用域</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"comment\">// 块级作用域中定义的变量，只能在块中使用</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"comment\">// 出了这个块，就不能使用了</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"keyword\">let</span> c = <span class=\"number\">110</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span> --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// 使用let声明的变量，并不会挂载到GO上</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">let</span> a = <span class=\"number\">110</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">a</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">//  SyntaxError: Identifier &#x27;a&#x27; has already been declared </span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">let</span> a = <span class=\"number\">2</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"const\"><a class=\"markdownIt-Anchor\" href=\"#const\">#</a> const</h3>\n<ul>\n<li>\n<p>使用 const 声明变量（常量）的特点：</p>\n<p>​    1）声明的变量不能修改</p>\n<p>​    2）使用 const 声明变量时，必须赋值，不然会报语法错误</p>\n<p>​    3）const 声明的变量也不会提升</p>\n<p>​    4）const 和 {} 也可以形成块级作用域</p>\n<p>​    5）const 声明的变量也不会挂载到 GO 上</p>\n</li>\n<li>\n<p>在项目中，定义变量使用 let，定义常量，使用 const</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"variable constant_\">PI</span> = <span class=\"number\">3.14</span>;</span><br><span class=\"line\">    <span class=\"variable constant_\">PI</span> = <span class=\"number\">666</span>; <span class=\"comment\">// TypeError: Assignment to constant variable.</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable constant_\">PI</span>);</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"comment\">// SyntaxError: Missing initializer in const declaration</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">const</span> <span class=\"variable constant_\">PI</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable constant_\">PI</span> = <span class=\"number\">3.14</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable constant_\">PI</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"列子\"><a class=\"markdownIt-Anchor\" href=\"#列子\">#</a> 列子</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>); &#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span>); &#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> fn = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>); &#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">4</span>); &#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">5</span>); &#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"comment\">//输出为5,5,5,3,3,3</span></span><br></pre></td></tr></table></figure>\n<p>上述列子中，fn 被整体提升，前面三个输出 5，在第四个 fn 之前进行 fn 赋值，输出都是 3</p>\n<h2 id=\"闭包\"><a class=\"markdownIt-Anchor\" href=\"#闭包\">#</a> 闭包</h2>\n<ul>\n<li>一个不能被回收释放掉的栈空间成为闭包。</li>\n<li>有些不能被回收的闭包会造成内存空间泄露。</li>\n<li>作用\n<ul>\n<li>保护  保护 EC 中的变量，外界不能直接访问</li>\n<li>保存  可以让我们像使用全局变量那样使用局部变量，延长变量的生命周期</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"./../../image/10-%E5%BC%95%E5%87%BA%E9%97%AD%E5%8C%85.png\" alt=\"10-引出闭包\"></p>\n<h4 id=\"闭包典型题\"><a class=\"markdownIt-Anchor\" href=\"#闭包典型题\">#</a> 闭包典型题</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    i -= <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    \t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>((++i) - n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"title function_\">fn</span>();</span><br><span class=\"line\"><span class=\"title function_\">f</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"title function_\">f</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"title function_\">fn</span>()(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i);</span><br><span class=\"line\"><span class=\"comment\">//10 10 8 20</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"./../../image/12-%E9%97%AD%E5%8C%85%E7%BB%83%E4%B9%A0%E9%A2%98.png\" alt=\"12-闭包练习题\"></p>\n",
            "tags": [
                "JavaScript"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/17/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/01-EC%E5%92%8CJS%E6%89%A7%E8%A1%8C/",
            "url": "http://victinsever.github.io/2022/10/17/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/01-EC%E5%92%8CJS%E6%89%A7%E8%A1%8C/",
            "title": "JavaScript预编辑",
            "date_published": "2022-10-17T10:40:29.000Z",
            "content_html": "<p>JavaScript 运行分为预编译和代码执行运行</p>\n<h3 id=\"预编译\"><a class=\"markdownIt-Anchor\" href=\"#预编译\">#</a> 预编译</h3>\n<p>预编译也叫预解析</p>\n<p>做了什么？</p>\n<pre><code>- 声明要提升 会先进行var和function的定义提升（只提升声明，而没有赋值，放在代码块最前面）\n- 函数内部局部变量，要提升到函数内部最前面\n</code></pre>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">        <span class=\"comment\">// 预编译会先进行var和function的定义提升</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"title function_\">fn</span>()</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> b = <span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">//undefind</span></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">//2</span></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c); <span class=\"comment\">//und</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> a = <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> c = <span class=\"number\">4</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行执行\"><a class=\"markdownIt-Anchor\" href=\"#运行执行\">#</a> 运行执行</h3>\n<p>执行运行就是运行预编译后的 js 代码，现将所有的声明和函数执行后，运行代码块。</p>\n<h3 id=\"区\"><a class=\"markdownIt-Anchor\" href=\"#区\">#</a> 区</h3>\n<ul>\n<li>内存分为两个区：堆区和栈区</li>\n<li>栈区：存储基本数据类型</li>\n<li>栈区：存储引用数据类型</li>\n</ul>\n<h3 id=\"javascript代码类型\"><a class=\"markdownIt-Anchor\" href=\"#javascript代码类型\">#</a> JavaScript 代码类型</h3>\n<ul>\n<li>全局代码：script 标签都是全局代码</li>\n<li>函数代码：每一个函数都是一个代码块</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//局部代码</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> c = <span class=\"number\">3</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> d = <span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"javascript代码执行\"><a class=\"markdownIt-Anchor\" href=\"#javascript代码执行\">#</a> JavaScript 代码执行</h3>\n<h4 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\">#</a> 定义</h4>\n<ul>\n<li>\n<p>JS 执行时，堆内存创建一个全局对象（GO）</p>\n</li>\n<li>\n<p>全局代码执行时，产生全局执行上下文（ECG）</p>\n</li>\n<li>\n<p>调用一个函数，产生一个局部执行上下文（EC）</p>\n</li>\n<li>\n<p>执行上下文产生放在栈中，栈叫做执行上下文栈（ECS）</p>\n</li>\n</ul>\n<p>EC：给代码提供数据</p>\n<p>GO：也是就 window 对象</p>\n<p><img data-src=\"./../../image/01-ECG%EF%BC%8CGO%EF%BC%8CECFn.png\" alt=\"01-ECG，GO，ECFn\"></p>\n<h4 id=\"执行步骤\"><a class=\"markdownIt-Anchor\" href=\"#执行步骤\">#</a> 执行步骤</h4>\n<p>执行代码开始，会将 GO 挂载</p>\n<p>①执行全局代码，产上 ECG，入 ECS</p>\n<p>②执行局部代码，产生 EC，入 ECS</p>\n<p>③出栈，一次出 EC * N ,ECG</p>\n<p><img data-src=\"E:%5CCode%5C%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%5CJavaScript%5Cjs%E9%AB%98%E7%BA%A7%5Cjs%5C1.png\" alt=\"\"></p>\n",
            "tags": [
                "JavaScript"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/09/13/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/flutter/Flutter%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "http://victinsever.github.io/2022/09/13/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/flutter/Flutter%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "Flutter学习笔记",
            "date_published": "2022-09-13T08:37:55.000Z",
            "content_html": "<h2 id=\"flutter特点\"><a class=\"markdownIt-Anchor\" href=\"#flutter特点\">#</a> Flutter 特点</h2>\n<ul>\n<li>\n<p>多平台支持 iOS Android Linux 未来 Fuchsia OS</p>\n</li>\n<li>\n<p>原生用户界面</p>\n</li>\n<li>\n<p>120fps 超高性能</p>\n</li>\n<li>\n<p>两套成熟 UI 库 Material Design 和 Cupertino</p>\n</li>\n<li>\n<p>响应式的框架 Redux、RxDart、BloC 业务和 UI 分离</p>\n</li>\n<li>\n<p>Flutter 支持 Hot Reload</p>\n</li>\n<li>\n<p>国内阿里咸鱼、腾讯、京东、国外的谷歌等公司都已经有上线产品在使用 Flutter 开发</p>\n</li>\n</ul>\n",
            "tags": []
        }
    ]
}