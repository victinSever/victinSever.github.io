{
    "version": "https://jsonfeed.org/version/1",
    "title": "victinSever • All posts by \"扩展技术\" category",
    "description": "",
    "home_page_url": "http://victinSever.github.io",
    "items": [
        {
            "id": "http://victinsever.github.io/2022/11/04/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/Nginx/Nginx%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",
            "url": "http://victinsever.github.io/2022/11/04/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/Nginx/Nginx%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",
            "title": "Nginx学习记录",
            "date_published": "2022-11-03T17:07:01.000Z",
            "content_html": "<h1 id=\"nginx\"><a class=\"markdownIt-Anchor\" href=\"#nginx\">#</a> Nginx</h1>\n<h2 id=\"nginx概述\"><a class=\"markdownIt-Anchor\" href=\"#nginx概述\">#</a> Nginx 概述</h2>\n<ul>\n<li>高性能的 HTTP 和方向代理服务器，特点是战友内存少，并发能力强，同类型的网页服务器表现较好。</li>\n<li>转为性能优化而开发，性能和效率是最重要的考量，能经受高负载的考研，并发可高达 50000 个。</li>\n</ul>\n<h2 id=\"反向代理\"><a class=\"markdownIt-Anchor\" href=\"#反向代理\">#</a> 反向代理</h2>\n<ul>\n<li>正向代理\n<ul>\n<li>在客户端（浏览器）配置代理服务器，来实现对服务器的访问</li>\n</ul>\n</li>\n<li>反向代理\n<ul>\n<li>请求发送给代理服务器，由代理服务器去选择目标服务器返回响应给客户端，暴露了代理服务器，隐藏了目标服务器</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#负载均衡\">#</a> 负载均衡</h2>\n<p>单个服务器会造成比较大的并发压力，需要增加服务器数量，将请求分发到各个服务器上，即请求集中到一个服务器上的情况变成均分到多个服务器处理。</p>\n<h2 id=\"动静分离\"><a class=\"markdownIt-Anchor\" href=\"#动静分离\">#</a> 动静分离</h2>\n<p>为加快网站解析速度，将服务器部署的静态资源（html、css、js、图片）和动态资源（jsp，servlet）分开部署，降低原来单个服务器的压力。</p>\n<h2 id=\"nginx环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#nginx环境搭建\">#</a> Nginx 环境搭建</h2>\n<h3 id=\"准备工作\"><a class=\"markdownIt-Anchor\" href=\"#准备工作\">#</a> 准备工作</h3>\n<ul>\n<li>Linux 环境（可用本地 VM 运行 linux 系统，也可远程链接服务器虚拟机环境）</li>\n<li>nginx 的 linux 软件包</li>\n</ul>\n<h3 id=\"流程\"><a class=\"markdownIt-Anchor\" href=\"#流程\">#</a> 流程</h3>\n<ul>\n<li>\n<p>安装 pcre 依赖</p>\n<ul>\n<li>\n<p>联网下载 pcre 压缩文件依赖 (这里通过 wget 下载，也可直接在官网下载 tar 包）</p>\n<figure class=\"highlight bash\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装包放在 linux 系统（如果在 window 中下载的直接拖拽或者用 xftp 移过来）</p>\n</li>\n<li>\n<p>解压压缩文件</p>\n<figure class=\"highlight bash\"><figcaption><span>2</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar –xvf pcre-8.37.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>进入解压目录，执行编译配置</p>\n<figure class=\"highlight bash\"><figcaption><span>3</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ./pcre-8.37</span><br><span class=\"line\">./configure</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用 make 进行安装</p>\n<figure class=\"highlight bash\"><figcaption><span>4</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装完成检查版本</p>\n<figure class=\"highlight bash\"><figcaption><span>5</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pcre-config --version</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>安装其他依赖文件（<strong>openssl</strong> **、**zlib <strong>、</strong> <strong>gcc</strong> ）</p>\n<figure class=\"highlight bash\"><figcaption><span>安装其他依赖</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel</span><br></pre></td></tr></table></figure>\n<p>如果没有 yum，则会报错，本人在这里耽误很长时间，本地 linux 没有 yum，安装 yum 找不到文件源，因此采用的远程链接腾讯云服务器。或者不用 yum 安装也可。</p>\n</li>\n<li>\n<p>安装 nginx</p>\n<ul>\n<li>\n<p>下载 nginx 安装包（<span class=\"exturl\" data-url=\"aHR0cDovL25naW54Lm9yZy8=\">nginx</span>）选择 linux 版本，如最新的 nginx-1.23.2 （pgp）</p>\n</li>\n<li>\n<p>接下来流程同上 pcre 的安装流程</p>\n</li>\n<li>\n<p>安装成功后进入 usr 文件夹查看多出的 local/nginx 文件夹，多出了 sbin 脚本</p>\n<figure class=\"highlight bash\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"built_in\">local</span>/nginx</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sbin</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>检查脚本启动</p>\n<figure class=\"highlight bash\"><figcaption><span>2</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br><span class=\"line\">ps -ef | grep nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>浏览器中查看结果（输入服务器地址）</p>\n<p><img data-src=\"./../../../../../../program/blog/source/image/image-20221104133932732.png\" alt=\"image-20221104133932732\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>在 windows 系统中访问 linux 中 nginx，默认不能访问的，因为防火墙问题</p>\n<ul>\n<li>查看开放的端口号</li>\n</ul>\n  <figure class=\"highlight bash\"><figcaption><span>防火墙</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --list-all</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>设置开放的端口号</p>\n<figure class=\"highlight bash\"><figcaption><span>防火墙</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-service=http –permanent</span><br><span class=\"line\">firewall-cmd --add-port=80/tcp --permanent</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>重启防火墙</p>\n<figure class=\"highlight bash\"><figcaption><span>防火墙</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd –reload</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"nginx常用命令\"><a class=\"markdownIt-Anchor\" href=\"#nginx常用命令\">#</a> Nginx 常用命令</h2>\n<ul>\n<li>\n<p><strong>进入</strong> <strong>nginx</strong> <strong>目录中才能使用命令</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx/sbin</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>1、查看</strong> <strong>nginx</strong> <strong>版本号</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -v</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>2、启动 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>3、停止 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s stop</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>4、重新加载 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx -s reload</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>5、查看状态 nginx</strong></p>\n  <figure class=\"highlight bash\"><figcaption><span>常用命令</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep nginx</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"nginx配置文件\"><a class=\"markdownIt-Anchor\" href=\"#nginx配置文件\">#</a> Nginx 配置文件</h2>\n<p>包含三部分内容<br>\n（1）全局块：配置服务器整体运行的配置指令<br>\n比如 worker_processes 1; 处理并发数的配置<br>\n（2）events 块：影响 Nginx 服务器与用户的网络连接<br>\n比如 worker_connections 1024; 支持的最大连接数为 1024<br>\n（3）http 块<br>\n还包含两部分：<br>\nhttp 全局块<br>\n server 块</p>\n<p>Nginx 的三个重要配置一般都在 http 模块下。</p>\n",
            "tags": [
                "Nginx"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/24/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/Svelet/Svelte%E5%92%8CSolid.js%EF%BC%9A%E6%96%B0%E9%94%90%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/",
            "url": "http://victinsever.github.io/2022/10/24/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/Svelet/Svelte%E5%92%8CSolid.js%EF%BC%9A%E6%96%B0%E9%94%90%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/",
            "title": "Svelte和Solid.js：新锐前端框架",
            "date_published": "2022-10-24T10:18:01.000Z",
            "content_html": "<h3 id=\"极简的组件表达式\"><a href=\"#极简的组件表达式\" class=\"headerlink\" title=\"极简的组件表达式\"></a>极简的组件表达式</h3><ul>\n<li>Svelet：贴近原生JS</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">let</span> count = <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">increment</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        count += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">on:click</span>=<span class=\"string\">&quot;increment&quot;</span>&gt;</span></span><br><span class=\"line\">    count is &#123;count&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>Solid.js：React hooks和Composition API的综合体</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Counter.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createSignal &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;solid-js&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Counter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">createSignal</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">increment</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"title function_\">setCount</span>(<span class=\"title function_\">count</span>() + <span class=\"number\">1</span>));</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> increment()&#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                count is &#123;count()&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>solid自动依赖追踪避免手动设置依赖项（createEffect）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//solid</span></span><br><span class=\"line\"><span class=\"title function_\">createEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;count：&#x27;</span> + <span class=\"title function_\">count</span>());</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//react：需要开发者操作依赖项</span></span><br><span class=\"line\"><span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;count：&#x27;</span> + <span class=\"title function_\">count</span>());</span><br><span class=\"line\">&#125;, [count])</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Svelet：不需要响应式API</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">$</span>: <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(count)</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">increment</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    count += <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"无虚拟DOM底层实现\"><a href=\"#无虚拟DOM底层实现\" class=\"headerlink\" title=\"无虚拟DOM底层实现\"></a>无虚拟DOM底层实现</h3><p>鱼和熊掌都可兼得！！！</p>\n<h3 id=\"性能表现\"><a href=\"#性能表现\" class=\"headerlink\" title=\"性能表现\"></a>性能表现</h3><ul>\n<li>solid和svelet性能总体逗比react hook的性能表现较佳</li>\n<li>solid和vue在生成代码量的表现上类似</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><code>Svelte</code>和<code>Solid</code>有着优秀的开发体验和性能表现</p>\n<p>有很多适合它们的应用场景和优点</p>\n<p>底层独特巧妙的解决方案非常值得学习</p>\n",
            "tags": [
                "Svelet",
                "Solid.js"
            ]
        },
        {
            "id": "http://victinsever.github.io/2022/10/24/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/WebSocket/%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E9%80%89%E5%9E%8B%EF%BC%9AWebSocket/",
            "url": "http://victinsever.github.io/2022/10/24/%E6%89%A9%E5%B1%95%E6%8A%80%E6%9C%AF/WebSocket/%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E9%80%89%E5%9E%8B%EF%BC%9AWebSocket/",
            "title": "即时通讯协议选型：WebSocket协议",
            "date_published": "2022-10-24T06:38:06.000Z",
            "content_html": "<h4 id=\"WebSocket\"><a href=\"#WebSocket\" class=\"headerlink\" title=\"WebSocket\"></a>WebSocket</h4><p><strong>Socket：</strong>对处于网络中不同主机上的应用进程之间进行双向通信的端点的抽象，是应用程序通过网络协议进行通信的接口，一个Socket对应着通信的一端，由IP地址和端口组合而成。</p>\n<h4 id=\"WebSocket服务端与客户端之间的通信过程\"><a href=\"#WebSocket服务端与客户端之间的通信过程\" class=\"headerlink\" title=\"WebSocket服务端与客户端之间的通信过程\"></a>WebSocket服务端与客户端之间的通信过程</h4><ul>\n<li>服务端创建包含有效主机与端口的WebSocket实例，随后启动并等待客户端连接</li>\n<li>客户端创建WebSocket实例，并为该实例提供一个URL，该URL代表希望连接的服务器端</li>\n<li>客户端通过HTTP请求握手建立连接之后，后面就使用刚才发起HTTP请求的TCP连接进行双向通信。</li>\n</ul>\n<h4 id=\"WebSocket特点\"><a href=\"#WebSocket特点\" class=\"headerlink\" title=\"WebSocket特点\"></a>WebSocket特点</h4><ul>\n<li>WebSocket本身只是一个应用层协议</li>\n<li>一种全双工通信机制</li>\n</ul>\n<h4 id=\"传统的全双工协议的两种方式\"><a href=\"#传统的全双工协议的两种方式\" class=\"headerlink\" title=\"传统的全双工协议的两种方式\"></a>传统的全双工协议的两种方式</h4><ul>\n<li><strong>短轮询</strong> 即客户端定时向服务端发送请求，服务端收到请求后马上返回响应并关闭连接。 <ul>\n<li>优点：实现简单 </li>\n<li>缺点： <ul>\n<li>1.并发请求对服务端造成较大压力 </li>\n<li>2.数据可能没有更新，造成无效请求 </li>\n<li>3.频繁的网络请求导致客户端设备电量、流量快速消耗 </li>\n<li>4.定时操作存在时间差，可能造成数据同步不及时 </li>\n<li>5.每次请求都需要携带完整的请求头</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>长轮询</strong> 即服务端在收到请求之后，如果数据无更新，会阻塞请求，直至数据更新或连接超时才返回。 <ul>\n<li>优点：相较于短轮询减少了HTTP请求的次数，节省了部分资源。 </li>\n<li>缺点： <ul>\n<li>1.连接挂起同样会消耗资源 </li>\n<li>2.冗余请求头问题依旧存在</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"WebSocket比传统全双工协议的优势\"><a href=\"#WebSocket比传统全双工协议的优势\" class=\"headerlink\" title=\"WebSocket比传统全双工协议的优势\"></a>WebSocket比传统全双工协议的优势</h4><p>当连接建立之后，后续的数据都是以<strong>帧的形式</strong>发送。<strong>除非某一端主动断开连接，否则无需重新建立连接</strong>。因此可以做到：</p>\n<ul>\n<li>1.减轻服务器的负担 </li>\n<li>2.极大地减少不必要的流量、电量消耗 </li>\n<li>3.提高实时性，保证客户端和服务端数据的同步 </li>\n<li>4.减少冗余请求头造成的开销</li>\n</ul>\n<h4 id=\"WebSocket比其他即时通讯协议的优势\"><a href=\"#WebSocket比其他即时通讯协议的优势\" class=\"headerlink\" title=\"WebSocket比其他即时通讯协议的优势\"></a>WebSocket比其他即时通讯协议的优势</h4><ul>\n<li><p>1.<strong>较少的控制开销。</strong>在连接创建后，服务器和客户端之间交换数据时，用于协议控制的数据包头部相对较小。 </p>\n</li>\n<li><p>2.<strong>更好的二进制支持。</strong>Websocket定义了二进制帧，相对HTTP，可以更轻松地处理二进制内容。 </p>\n</li>\n<li><p>3.<strong>可以支持扩展。</strong>Websocket定义了扩展，用户可以扩展协议、实现部分自定义的子协议，如XMPP协议、MQTT协议等。</p>\n</li>\n</ul>\n<h4 id=\"WebSocket协议在Android客户端的实现\"><a href=\"#WebSocket协议在Android客户端的实现\" class=\"headerlink\" title=\"WebSocket协议在Android客户端的实现\"></a>WebSocket协议在Android客户端的实现</h4><ul>\n<li>创建WebSocket实例并提供一个URL以指定要连接的服务器地址</li>\n<li>提供一个WebSocket连接事件监听器，用于监听事件回调以处理连接生命周期的每个阶段</li>\n</ul>\n<p>[即时通讯协议选型：WebSocket协议](<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudG91dGlhby5jb20vYXJ0aWNsZS83MTU2MjA5OTM4NTM1MDM5NTI5Lz9vbmx5X3JlYz0xJnNoYXJlX3Rva2VuPTkzNTAyNzUxLTM0ZmEtNDZlZi1iODUxLWUyNzUyZWM0Yjg0OSZzb3VyY2U9bV9yZWRpcmVjdCZ3aWQ9MTY2NjU5Mjc2NzEyNg==\">即时通讯协议选型：WebSocket协议-今日头条 (toutiao.com)</span>)</p>\n",
            "tags": [
                "WebSocket"
            ]
        }
    ]
}