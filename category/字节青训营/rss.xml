<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>眸光似星辰 • Posts by &#34;字节青训营&#34; category</title>
        <link>http://victinSever.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Thu, 06 Jan 2022 22:25:20 +0800</pubDate>
        <lastBuildDate>Thu, 06 Jan 2022 22:25:20 +0800</lastBuildDate>
        <category>react</category>
        <category>react-redux</category>
        <category>redux</category>
        <category>JavaScript</category>
        <category>this</category>
        <category>继承</category>
        <category>原型</category>
        <category>原型链</category>
        <category>面试题</category>
        <category>cache</category>
        <category>JSON</category>
        <category>canvas</category>
        <category>vue</category>
        <category>react-router-dom</category>
        <category>vue-router</category>
        <category>Vue</category>
        <category>Vuex</category>
        <category>Vue-router</category>
        <category>ElementUI</category>
        <category>axios</category>
        <category>sass</category>
        <category>NProgress</category>
        <category>Nginx</category>
        <category>跨域</category>
        <category>WebSocket</category>
        <category>hexo</category>
        <category>Typora</category>
        <category>Svelet</category>
        <category>Solid.js</category>
        <category>MVC</category>
        <category>Dijkstra</category>
        <category>JDBC</category>
        <category>密码学</category>
        <category>凯斯密码</category>
        <category>维吉尼亚密码</category>
        <category>dp</category>
        <item>
            <guid isPermalink="true">http://victinsever.github.io/2022/01/06/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20CSS/</guid>
            <title>走进前端技术栈 - CSS|青训营笔记</title>
            <link>http://victinsever.github.io/2022/01/06/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20CSS/</link>
            <pubDate>Thu, 06 Jan 2022 22:25:20 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;走进前端技术栈-CSS-青训营笔记&#34;&gt;&lt;a href=&#34;#走进前端技术栈-CSS-青训营笔记&#34; class=&#34;headerlink&#34; title=&#34;走进前端技术栈 - CSS|青训营笔记&#34;&gt;&lt;/a&gt;走进前端技术栈 - CSS|青训营笔记&lt;/h1&gt;&lt;p&gt;这是我参与「第五届青训营 」笔记创作活动的第2天.&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上一篇[前端与HTML](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTg4ODAwMDAxMDEzNzEwOTA4&#34;&gt;前端与HTML | 青训营笔记 - 掘金 (juejin.cn)&lt;/span&gt;)是对HTML以及前端工作的了解，这一篇将介绍CSS技术在前端的应用。笔记内容主要为四个方面：CSS代码构成，CSS使用方法，CSS流程的选择器和文本渲染，CSS部分重点但忽略样式，诸位读者酌情食用。&lt;/p&gt;
&lt;h3 id=&#34;代码构成&#34;&gt;&lt;a href=&#34;#代码构成&#34; class=&#34;headerlink&#34; title=&#34;代码构成&#34;&gt;&lt;/a&gt;代码构成&lt;/h3&gt;&lt;p&gt;通过标签包裹样式对标签的样式进行定义，一般来说都是选择器包含对应一个或多个样式。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-tag&#34;&gt;p&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;font-size&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;color&lt;/span&gt;: white;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;页面中使用&#34;&gt;&lt;a href=&#34;#页面中使用&#34; class=&#34;headerlink&#34; title=&#34;页面中使用&#34;&gt;&lt;/a&gt;页面中使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;外链：引用css文件&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;rel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/styles/index.css&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;嵌入：以标签形式嵌入代码&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-css&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-css&#34;&gt;    &lt;span class=&#34;selector-tag&#34;&gt;li&lt;/span&gt; &amp;#123; &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; &lt;span class=&#34;attribute&#34;&gt;list-style&lt;/span&gt;: none; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-css&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内联：写在标签内部&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;P&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;margin: 0; list-style: none;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;这是文本&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;P&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;CSS工作流程&#34;&gt;&lt;a href=&#34;#CSS工作流程&#34; class=&#34;headerlink&#34; title=&#34;CSS工作流程&#34;&gt;&lt;/a&gt;CSS工作流程&lt;/h3&gt;&lt;p&gt;浏览器渲染页面首先是渲染DOM树，这个阶段将HTML解析，同时也会解析CSS样式生成style树，将两者解析完全后根据DOM树和style生成render，这个render可以根据布局，样式，结构等对页面进行渲染。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a3e6467e157429cb0e649bbe7f81b98~tplv-k3u1fbpfcp-watermark.image&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;CSS选择器&#34;&gt;&lt;a href=&#34;#CSS选择器&#34; class=&#34;headerlink&#34; title=&#34;CSS选择器&#34;&gt;&lt;/a&gt;CSS选择器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基本选择器：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标签选择器：针对&lt;strong&gt;一类&lt;/strong&gt;标签。语法：标签 { 属性1：属性值1 }&lt;/li&gt;
&lt;li&gt;ID 选择器：针对某&lt;strong&gt;一个&lt;/strong&gt;特定的标签使用。语法：#ID名称 { 属性1：属性值1 }&lt;/li&gt;
&lt;li&gt;类选择器：针对&lt;strong&gt;你想要的所有&lt;/strong&gt;标签使用。语法：.类名 { 属性1：属性值1 }&lt;/li&gt;
&lt;li&gt;通用选择器（通配符）：针对所有的标签都适用。语法：* { 属性1：属性值1 }&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性选择器：针对拥有指定属性的标签使用，语法：[标签名称 [匹配符号 属性值] ] { 属性1：属性值1；属性2：属性值2；}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;后代选择器：后代选择器也称包含选择器，用来选择特定元素的后代。语法：标签名称1 标签名称2{ 属性1：属性值1；属性2：属性值2；}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子代选择器：针对标签的一级子标签。语法：标签名称1&amp;gt;标签名称2{ 属性1：属性值1；属性2：属性值2；}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;兄弟选择器：针对兄弟标签。语法：标签名称1+标签名称2 { 属性1：属性值1；属性2：属性值2；}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;+：相邻兄弟才选择&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;~：所有之后的兄弟才选择&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;伪选择器：分为伪类和伪对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;伪类选择器：一共五种。针对标签的某个状态使用。语法：选择器:伪类选择器 { 属性1：属性值1 }&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;伪类选择器&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;应用对象&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;:hover&lt;/td&gt;
&lt;td&gt;定义标记在鼠标悬停(划过)时的样式&lt;/td&gt;
&lt;td&gt;所有显示标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:link&lt;/td&gt;
&lt;td&gt;定义标记在超链接状态下的样式&lt;/td&gt;
&lt;td&gt;a标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:focus&lt;/td&gt;
&lt;td&gt;定义标记在获取焦点时的样式&lt;/td&gt;
&lt;td&gt;a标签(IE浏览器不支持)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:visited&lt;/td&gt;
&lt;td&gt;定义标记被访问过后的样式&lt;/td&gt;
&lt;td&gt;a标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:active&lt;/td&gt;
&lt;td&gt;定义标记在选定时刻下的样式&lt;/td&gt;
&lt;td&gt;a标签&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;伪对象选择器：针对标签进行筛选或者在标签创建一个新的对象标签使用。语法：选择器:伪对象选择器 { 属性1：属性值1 }&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;伪对象选择器&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;:first-letter&lt;/td&gt;
&lt;td&gt;定义文本的第一个字符样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:first-line&lt;/td&gt;
&lt;td&gt;定义文本的首行样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:before&lt;/td&gt;
&lt;td&gt;定义对象之前内容的样式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:after&lt;/td&gt;
&lt;td&gt;定义对象之后内容的样式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;选择器注意事项&#34;&gt;&lt;a href=&#34;#选择器注意事项&#34; class=&#34;headerlink&#34; title=&#34;选择器注意事项&#34;&gt;&lt;/a&gt;选择器注意事项&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;标签彼此可以进行组合，根据不同的选择器有不同的优先级组合计算方案。选择器优先级：id选择器&amp;gt;类选择器&amp;gt;标签选择器&amp;gt;子代选择器&amp;gt;后代选择器&amp;gt;伪类选择器，每一级的优先级为10进制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;!important的优先级是最高的，但出现冲突时则需比较”四位数“;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优先级相同时，则采用就近原则，选择最后出现的样式;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;继承得来的属性，其优先级最低。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;部分重点样式&#34;&gt;&lt;a href=&#34;#部分重点样式&#34; class=&#34;headerlink&#34; title=&#34;部分重点样式&#34;&gt;&lt;/a&gt;部分重点样式&lt;/h2&gt;&lt;h3 id=&#34;颜色&#34;&gt;&lt;a href=&#34;#颜色&#34; class=&#34;headerlink&#34; title=&#34;颜色&#34;&gt;&lt;/a&gt;颜色&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;RGB&lt;/p&gt;
&lt;p&gt;RGB颜色使用三原色更改色调，该方案用于写成16进制颜色更加便于计算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HSL&lt;/p&gt;
&lt;p&gt;HSL分别为Hue（色相），Saturation（饱和度），Lightness（亮度）的缩写，该颜色方案更实用，更方便手动调节颜色阈值。范围：H：0&lt;del&gt;360，S：0&lt;/del&gt;100%，L：0~100%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha透明度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;rgba,hsla颜色中用于不透明度的使用&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-id&#34;&gt;#ff000&lt;/span&gt;`&lt;span class=&#34;number&#34;&gt;78&lt;/span&gt;` rgba(&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.47&lt;/span&gt;) hsla(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50%&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.47&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;字体&#34;&gt;&lt;a href=&#34;#字体&#34; class=&#34;headerlink&#34; title=&#34;字体&#34;&gt;&lt;/a&gt;字体&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;font-family字体样式可以设置多个，一般来说最后设置一个通用字体族。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;英文字体写在中文字体前面（因为浏览器逐个字符寻找字体，英文会被覆盖）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;几款通用字体族：Serif（衬线体），Scans-Serif（无衬线体），Cursive（手写体），Fantasy，Monospace（等宽字体）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;CSS样式很多，文本篇幅有限，本人将容易遗忘或者需要重点记住的CSS知识点标注了出来，便于回顾和加深印象。CSS还有一些设计模式、布局方案、动画效果、兼容处理等很多知识点此处没有解释。但做一个基础内容回顾感觉还是足够使用了。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://victinsever.github.io/2022/01/05/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20JavaScript/</guid>
            <title>走进前端技术栈 - JavaScript|青训营笔记</title>
            <link>http://victinsever.github.io/2022/01/05/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20JavaScript/</link>
            <pubDate>Wed, 05 Jan 2022 22:25:20 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;这是我参与「第五届青训营 」笔记创作活动的第3天.&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;该笔记为JavaScript的字节青训课程笔记，，作为JS的进阶学习，重点内容有五个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码原则&lt;/li&gt;
&lt;li&gt;组建封装&lt;/li&gt;
&lt;li&gt;过程抽象&lt;/li&gt;
&lt;li&gt;质量优化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;诸位看官可以逐情食用。&lt;/p&gt;
&lt;h2 id=&#34;编码原则之各司其责&#34;&gt;&lt;a href=&#34;#编码原则之各司其责&#34; class=&#34;headerlink&#34; title=&#34;编码原则之各司其责&#34;&gt;&lt;/a&gt;编码原则之各司其责&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;各司其职：HTML，CSS，JavaScript职能分离&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;避免不必要的JS操作样式&lt;/li&gt;
&lt;li&gt;用class表示状态&lt;/li&gt;
&lt;li&gt;纯展示类交互寻求零JS方案&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;组建封装：给封装的UI组件具有正确性，扩展性和复用性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;过程抽象：使用函数式编程思维&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;只调用一次，闭包和高阶函数&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;调用一次的自定义函数&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;once&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;fn&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//Outer scoped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;...argus&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//Inner scoped &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(fn) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; ret = fn.&lt;span class=&#34;title function_&#34;&gt;apply&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;, argus)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fn = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; foo = &lt;span class=&#34;title function_&#34;&gt;once&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bar&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://victinsever.github.io/2022/01/03/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E5%89%8D%E7%AB%AF%E4%B8%8EHTML/</guid>
            <title>前端与HTML|青训营笔记</title>
            <link>http://victinsever.github.io/2022/01/03/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E5%89%8D%E7%AB%AF%E4%B8%8EHTML/</link>
            <pubDate>Mon, 03 Jan 2022 22:25:20 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;前端与HTML-青训营笔记&#34;&gt;&lt;a href=&#34;#前端与HTML-青训营笔记&#34; class=&#34;headerlink&#34; title=&#34;前端与HTML|青训营笔记&#34;&gt;&lt;/a&gt;前端与HTML|青训营笔记&lt;/h1&gt;&lt;p&gt;这是我参与「第五届青训营 」笔记创作活动的第1天.&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这个系列文章是参与字节青训营学习课程时做的笔记记录，仅供参阅，对于复习和回顾还是有一定帮助的。第一篇内容不长，仅仅是对HTML和整个前端生态的的一些了解。&lt;/p&gt;
&lt;h2 id=&#34;前端工作&#34;&gt;&lt;a href=&#34;#前端工作&#34; class=&#34;headerlink&#34; title=&#34;前端工作&#34;&gt;&lt;/a&gt;前端工作&lt;/h2&gt;&lt;h3 id=&#34;前端技术栈&#34;&gt;&lt;a href=&#34;#前端技术栈&#34; class=&#34;headerlink&#34; title=&#34;前端技术栈&#34;&gt;&lt;/a&gt;前端技术栈&lt;/h3&gt;&lt;p&gt;前端最基础的技术栈都归结为三个，本质是HTML（内容），CSS（样式）和JavaScript（行为）的组合。所有的工作都是在为这三层做一些铺垫，然后通过http或者https协议发送网络请求给服务端。然后服务端返回请求数据提供前端渲染。这种普遍的业务流程形成了业务核心之一。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/../../../image/image-20230115161048426.png&#34; alt=&#34;image-20230115161048426&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	其他的前端框架以及衍生的等等依赖大部分都是为前端的这个基础工作服务的，因此学好三剑客尤为重要。&lt;/p&gt;
&lt;h3 id=&#34;前端关注面&#34;&gt;&lt;a href=&#34;#前端关注面&#34; class=&#34;headerlink&#34; title=&#34;前端关注面&#34;&gt;&lt;/a&gt;前端关注面&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;产品而言：美观，功能，无障碍，安全，性能，兼容，体验这是前端最为关注的几个点，前端人员是面向用户的，直接和用户打交道的，因此在前端的工作中，对于前述几个点都需要有很好的把握和关注才能创造一个较为满意的前端产品。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学习而言：前端的技术栈相比后端更为繁杂，虽有体系但不完全一家，梁歪技术更新比较频繁，需要时刻关注前沿消息，学习新技术。现在主流的一些学习框架就是React，Vue，或者其他可视化的框架WebGL等，这里不一一列举。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开发而言：一个编辑器一个主流浏览器便可以进行前端开发工作，开发工作的前期准备较为简易。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HTML&#34;&gt;&lt;a href=&#34;#HTML&#34; class=&#34;headerlink&#34; title=&#34;HTML&#34;&gt;&lt;/a&gt;HTML&lt;/h2&gt;&lt;p&gt;HTML是什么？作为一种超文本标记语言，它的工作就是将各种资源连接起来形成一个整体，组成资源骨架。通过一系列的标签将不同区域的internet资源进行加载到一起这就是HTML的核心。因此学习HTML本质就是学习标签语法的过程。&lt;/p&gt;
&lt;h3 id=&#34;DOM树&#34;&gt;&lt;a href=&#34;#DOM树&#34; class=&#34;headerlink&#34; title=&#34;DOM树&#34;&gt;&lt;/a&gt;DOM树&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/780ca3aa023d4224ba3ded1246aa78be~tplv-k3u1fbpfcp-watermark.image&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;浏览器渲染时，页面首先对一个HTML的解析会渲染成上图这个DOM树结构，这是浏览器渲染的第一步。整个页面骨架就渲染成一个树形，通过节点包含的方式不断向下添加标签。&lt;/p&gt;
&lt;h3 id=&#34;标签&#34;&gt;&lt;a href=&#34;#标签&#34; class=&#34;headerlink&#34; title=&#34;标签&#34;&gt;&lt;/a&gt;标签&lt;/h3&gt;&lt;h4 id=&#34;标签语法&#34;&gt;&lt;a href=&#34;#标签语法&#34; class=&#34;headerlink&#34; title=&#34;标签语法&#34;&gt;&lt;/a&gt;标签语法&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;标签和属性不区分大小写，但推荐小写&lt;/li&gt;
&lt;li&gt;空标签可以不闭合：input，meta&lt;/li&gt;
&lt;li&gt;属性值最好使用双引号&lt;/li&gt;
&lt;li&gt;部分属性值可以省略：disabled，required等&lt;/li&gt;
&lt;li&gt;部分标签的属性必须存在：img中的alt&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;标签语义化&#34;&gt;&lt;a href=&#34;#标签语义化&#34; class=&#34;headerlink&#34; title=&#34;标签语义化&#34;&gt;&lt;/a&gt;标签语义化&lt;/h4&gt;&lt;h5 id=&#34;是什么&#34;&gt;&lt;a href=&#34;#是什么&#34; class=&#34;headerlink&#34; title=&#34;是什么&#34;&gt;&lt;/a&gt;是什么&lt;/h5&gt;&lt;p&gt;HTML中的元素、属性以及属性值都有自己的含义&lt;/p&gt;
&lt;h5 id=&#34;如何做&#34;&gt;&lt;a href=&#34;#如何做&#34; class=&#34;headerlink&#34; title=&#34;如何做&#34;&gt;&lt;/a&gt;如何做&lt;/h5&gt;&lt;p&gt;网站一般分为头部、底部、导航、侧边栏、文章等几个模块，每个模块下内容又可以分为标题、段落、超链接、代码、地址、时间、英文缩写、拼音等，我们就可以&lt;strong&gt;根据不同的模块，模块下的内容不同的作用或者意义，进行拆分，使用不同语义的标签进行书写，从而达到语义化的目的&lt;/strong&gt;。&lt;/p&gt;
&lt;h5 id=&#34;有何用&#34;&gt;&lt;a href=&#34;#有何用&#34; class=&#34;headerlink&#34; title=&#34;有何用&#34;&gt;&lt;/a&gt;有何用&lt;/h5&gt;&lt;p&gt;HTML的标签语义化的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;增加代码可读性（开发者）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让搜索引擎更容易懂，利于 SEO（搜索引擎）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结构明确在没有CSS加载前也有较为明确的结构（浏览器）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方便其他阅读设备阅读(如屏幕阅读器阅读 &lt;strong&gt; 的时候会重读而 阅读到 &lt;b&gt; 不会重读)（阅读器）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;标签说明&#34;&gt;&lt;a href=&#34;#标签说明&#34; class=&#34;headerlink&#34; title=&#34;标签说明&#34;&gt;&lt;/a&gt;标签说明&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTML标签分为行内和块级&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;行内：span，img，vedio，audio等&lt;/li&gt;
&lt;li&gt;块级：div，p，title，session等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可以从语义化角度区分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语义化标签：blockquote，p，title，strong&lt;/li&gt;
&lt;li&gt;非语义化：div，span&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;这是前端的入门学习，本人也只是入行前端一年半菜鸟，参加字节青训营不断充实技术，在基础方面更要打牢固，只有不断学习才能进步~&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
