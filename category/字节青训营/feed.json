{
    "version": "https://jsonfeed.org/version/1",
    "title": "眸光似星辰 • All posts by \"字节青训营\" category",
    "description": "",
    "home_page_url": "http://victinSever.github.io",
    "items": [
        {
            "id": "http://victinsever.github.io/2023/01/06/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20CSS/",
            "url": "http://victinsever.github.io/2023/01/06/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20CSS/",
            "title": "走进前端技术栈 - CSS|青训营笔记",
            "date_published": "2023-01-06T14:25:20.000Z",
            "content_html": "<h1 id=\"走进前端技术栈-css青训营笔记\"><a class=\"markdownIt-Anchor\" href=\"#走进前端技术栈-css青训营笔记\">#</a> 走进前端技术栈 - CSS | 青训营笔记</h1>\n<p>这是我参与「第五届青训营 」笔记创作活动的第 2 天.</p>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>上一篇 [前端与 HTML](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTg4ODAwMDAxMDEzNzEwOTA4\">前端与 HTML | 青训营笔记 - 掘金 (juejin.cn)</span>) 是对 HTML 以及前端工作的了解，这一篇将介绍 CSS 技术在前端的应用。笔记内容主要为四个方面：CSS 代码构成，CSS 使用方法，CSS 流程的选择器和文本渲染，CSS 部分重点但忽略样式，诸位读者酌情食用。</p>\n<h3 id=\"代码构成\"><a class=\"markdownIt-Anchor\" href=\"#代码构成\">#</a> 代码构成</h3>\n<p>通过标签包裹样式对标签的样式进行定义，一般来说都是选择器包含对应一个或多个样式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面中使用\"><a class=\"markdownIt-Anchor\" href=\"#页面中使用\">#</a> 页面中使用</h3>\n<ul>\n<li>\n<p>外链：引用 css 文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/styles/index.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>嵌入：以标签形式嵌入代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-tag\">li</span> &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; <span class=\"attribute\">list-style</span>: none; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>内联：写在标签内部</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">P</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 0; list-style: none;&quot;</span>&gt;</span>这是文本<span class=\"tag\">&lt;/<span class=\"name\">P</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"css工作流程\"><a class=\"markdownIt-Anchor\" href=\"#css工作流程\">#</a> CSS 工作流程</h3>\n<p>浏览器渲染页面首先是渲染 DOM 树，这个阶段将 HTML 解析，同时也会解析 CSS 样式生成 style 树，将两者解析完全后根据 DOM 树和 style 生成 render，这个 render 可以根据布局，样式，结构等对页面进行渲染。</p>\n<p><img data-src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a3e6467e157429cb0e649bbe7f81b98~tplv-k3u1fbpfcp-watermark.image?\" alt=\"image.png\"></p>\n<h3 id=\"css选择器\"><a class=\"markdownIt-Anchor\" href=\"#css选择器\">#</a> CSS 选择器</h3>\n<ul>\n<li>\n<p><strong>基本选择器：</strong></p>\n<ul>\n<li 属性1：属性值1=\"\">标签选择器：针对<strong>一类</strong>标签。语法：标签</li>\n<li 属性1：属性值1=\"\">ID 选择器：针对某<strong>一个</strong>特定的标签使用。语法：#ID 名称</li>\n<li 属性1：属性值1=\"\">类选择器：针对<strong>你想要的所有</strong>标签使用。语法：. 类名</li>\n<li 属性1：属性值1=\"\">通用选择器（通配符）：针对所有的标签都适用。语法：*</li>\n</ul>\n</li>\n<li 属性1：属性值1；属性2：属性值2；=\"\">\n<p>属性选择器：针对拥有指定属性的标签使用，语法：[标签名称 [匹配符号 属性值] ]</p>\n</li>\n<li 属性1：属性值1；属性2：属性值2；=\"\">\n<p>后代选择器：后代选择器也称包含选择器，用来选择特定元素的后代。语法：标签名称 1 标签名称 2</p>\n</li>\n<li 属性1：属性值1；属性2：属性值2；=\"\">\n<p>子代选择器：针对标签的一级子标签。语法：标签名称 1 &gt; 标签名称 2</p>\n</li>\n<li 属性1：属性值1；属性2：属性值2；=\"\">\n<p>兄弟选择器：针对兄弟标签。语法：标签名称 1 + 标签名称 2</p>\n<ul>\n<li>\n<p>+：相邻兄弟才选择</p>\n</li>\n<li>\n<p>~：所有之后的兄弟才选择</p>\n</li>\n</ul>\n</li>\n<li>\n<p>伪选择器：分为伪类和伪对象</p>\n<ul>\n<li 属性1：属性值1=\"\">\n<p>伪类选择器：一共五种。针对标签的某个状态使用。语法：选择器：伪类选择器</p>\n<table>\n<thead>\n<tr>\n<th>伪类选择器</th>\n<th>作用</th>\n<th>应用对象</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>:hover</td>\n<td>定义标记在鼠标悬停 (划过) 时的样式</td>\n<td>所有显示标记</td>\n</tr>\n<tr>\n<td>:link</td>\n<td>定义标记在超链接状态下的样式</td>\n<td>a 标签</td>\n</tr>\n<tr>\n<td>:focus</td>\n<td>定义标记在获取焦点时的样式</td>\n<td>a 标签 (IE 浏览器不支持)</td>\n</tr>\n<tr>\n<td>:visited</td>\n<td>定义标记被访问过后的样式</td>\n<td>a 标签</td>\n</tr>\n<tr>\n<td>:active</td>\n<td>定义标记在选定时刻下的样式</td>\n<td>a 标签</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li 属性1：属性值1=\"\">\n<p>伪对象选择器：针对标签进行筛选或者在标签创建一个新的对象标签使用。语法：选择器：伪对象选择器</p>\n<p>| 伪对象选择器  | 作用                     |<br>\n| ------------- | ------------------------ |<br>\n| :first-letter | 定义文本的第一个字符样式 |<br>\n| :first-line   | 定义文本的首行样式       |<br>\n| :before       | 定义对象之前内容的样式   |<br>\n| :after        | 定义对象之后内容的样式   |</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"选择器注意事项\"><a class=\"markdownIt-Anchor\" href=\"#选择器注意事项\">#</a> 选择器注意事项</h4>\n<ul>\n<li>\n<p>标签彼此可以进行组合，根据不同的选择器有不同的优先级组合计算方案。选择器优先级：id 选择器 &gt; 类选择器 &gt; 标签选择器 &gt; 子代选择器 &gt; 后代选择器 &gt; 伪类选择器，每一级的优先级为 10 进制。</p>\n</li>\n<li>\n<p>!important 的优先级是最高的，但出现冲突时则需比较” 四位数 “;</p>\n</li>\n<li>\n<p>优先级相同时，则采用就近原则，选择最后出现的样式；</p>\n</li>\n<li>\n<p>继承得来的属性，其优先级最低。</p>\n</li>\n</ul>\n<h2 id=\"部分重点样式\"><a class=\"markdownIt-Anchor\" href=\"#部分重点样式\">#</a> 部分重点样式</h2>\n<h3 id=\"颜色\"><a class=\"markdownIt-Anchor\" href=\"#颜色\">#</a> 颜色</h3>\n<ul>\n<li>\n<p>RGB</p>\n<p>RGB 颜色使用三原色更改色调，该方案用于写成 16 进制颜色更加便于计算。</p>\n</li>\n<li>\n<p>HSL</p>\n<p>HSL 分别为 Hue（色相），Saturation（饱和度），Lightness（亮度）的缩写，该颜色方案更实用，更方便手动调节颜色阈值。范围：H：0<sub>360，S：0</sub>100%，L：0~100%</p>\n</li>\n<li>\n<p>alpha 透明度</p>\n<ul>\n<li>\n<p>rgba,hsla 颜色中用于不透明度的使用</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#ff000</span>`<span class=\"number\">78</span>` rgba(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.47</span>) hsla(<span class=\"number\">0</span>, <span class=\"number\">100%</span>, <span class=\"number\">50%</span>, <span class=\"number\">0.47</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"字体\"><a class=\"markdownIt-Anchor\" href=\"#字体\">#</a> 字体</h3>\n<ul>\n<li>\n<p>font-family 字体样式可以设置多个，一般来说最后设置一个通用字体族。</p>\n</li>\n<li>\n<p>英文字体写在中文字体前面（因为浏览器逐个字符寻找字体，英文会被覆盖）。</p>\n</li>\n<li>\n<p>几款通用字体族：Serif（衬线体），Scans-Serif（无衬线体），Cursive（手写体），Fantasy，Monospace（等宽字体）</p>\n</li>\n</ul>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>CSS 样式很多，文本篇幅有限，本人将容易遗忘或者需要重点记住的 CSS 知识点标注了出来，便于回顾和加深印象。CSS 还有一些设计模式、布局方案、动画效果、兼容处理等很多知识点此处没有解释。但做一个基础内容回顾感觉还是足够使用了。</p>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/01/05/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20JavaScript/",
            "url": "http://victinsever.github.io/2023/01/05/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E8%B5%B0%E8%BF%9B%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%20-%20JavaScript/",
            "title": "走进前端技术栈 - JavaScript|青训营笔记",
            "date_published": "2023-01-05T14:25:20.000Z",
            "content_html": "<p>这是我参与「第五届青训营 」笔记创作活动的第 3 天.</p>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>该笔记为 JavaScript 的字节青训课程笔记，，作为 JS 的进阶学习，重点内容有五个方面：</p>\n<ul>\n<li>编码原则</li>\n<li>组建封装</li>\n<li>过程抽象</li>\n<li>质量优化</li>\n</ul>\n<p>诸位看官可以逐情食用。</p>\n<h2 id=\"编码原则之各司其责\"><a class=\"markdownIt-Anchor\" href=\"#编码原则之各司其责\">#</a> 编码原则之各司其责</h2>\n<ul>\n<li>\n<p>各司其职：HTML，CSS，JavaScript 职能分离</p>\n<ul>\n<li>避免不必要的 JS 操作样式</li>\n<li>用 class 表示状态</li>\n<li>纯展示类交互寻求零 JS 方案</li>\n</ul>\n</li>\n<li>\n<p>组建封装：给封装的 UI 组件具有正确性，扩展性和复用性</p>\n</li>\n<li>\n<p>过程抽象：使用函数式编程思维</p>\n<ul>\n<li>\n<p>只调用一次，闭包和高阶函数</p>\n<figure class=\"highlight js\"><figcaption><span>调用一次的自定义函数</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">once</span>(<span class=\"params\">fn</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Outer scoped</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\">...argus</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Inner scoped </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fn) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> ret = fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, argus)</span><br><span class=\"line\">            fn = <span class=\"literal\">null</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> ret</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> foo = <span class=\"title function_\">once</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;bar&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>()</span><br><span class=\"line\"><span class=\"title function_\">foo</span>()</span><br><span class=\"line\"><span class=\"title function_\">foo</span>()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/01/03/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E5%89%8D%E7%AB%AF%E4%B8%8EHTML/",
            "url": "http://victinsever.github.io/2023/01/03/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/%E5%89%8D%E7%AB%AF%E4%B8%8EHTML/",
            "title": "前端与HTML|青训营笔记",
            "date_published": "2023-01-03T14:25:20.000Z",
            "content_html": "<h1 id=\"前端与html青训营笔记\"><a class=\"markdownIt-Anchor\" href=\"#前端与html青训营笔记\">#</a> 前端与 HTML | 青训营笔记</h1>\n<p>这是我参与「第五届青训营 」笔记创作活动的第 1 天.</p>\n<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>这个系列文章是参与字节青训营学习课程时做的笔记记录，仅供参阅，对于复习和回顾还是有一定帮助的。第一篇内容不长，仅仅是对 HTML 和整个前端生态的的一些了解。</p>\n<h2 id=\"前端工作\"><a class=\"markdownIt-Anchor\" href=\"#前端工作\">#</a> 前端工作</h2>\n<h3 id=\"前端技术栈\"><a class=\"markdownIt-Anchor\" href=\"#前端技术栈\">#</a> 前端技术栈</h3>\n<p>前端最基础的技术栈都归结为三个，本质是 HTML（内容），CSS（样式）和 JavaScript（行为）的组合。所有的工作都是在为这三层做一些铺垫，然后通过 http 或者 https 协议发送网络请求给服务端。然后服务端返回请求数据提供前端渲染。这种普遍的业务流程形成了业务核心之一。</p>\n<p><img data-src=\"../../../image/image-20230115161048426.png\" alt=\"image-20230115161048426\"></p>\n<p>​\t其他的前端框架以及衍生的等等依赖大部分都是为前端的这个基础工作服务的，因此学好三剑客尤为重要。</p>\n<h3 id=\"前端关注面\"><a class=\"markdownIt-Anchor\" href=\"#前端关注面\">#</a> 前端关注面</h3>\n<ul>\n<li>\n<p>产品而言：美观，功能，无障碍，安全，性能，兼容，体验这是前端最为关注的几个点，前端人员是面向用户的，直接和用户打交道的，因此在前端的工作中，对于前述几个点都需要有很好的把握和关注才能创造一个较为满意的前端产品。</p>\n</li>\n<li>\n<p>学习而言：前端的技术栈相比后端更为繁杂，虽有体系但不完全一家，梁歪技术更新比较频繁，需要时刻关注前沿消息，学习新技术。现在主流的一些学习框架就是 React，Vue，或者其他可视化的框架 WebGL 等，这里不一一列举。</p>\n</li>\n<li>\n<p>开发而言：一个编辑器一个主流浏览器便可以进行前端开发工作，开发工作的前期准备较为简易。</p>\n</li>\n</ul>\n<h2 id=\"html\"><a class=\"markdownIt-Anchor\" href=\"#html\">#</a> HTML</h2>\n<p>HTML 是什么？作为一种超文本标记语言，它的工作就是将各种资源连接起来形成一个整体，组成资源骨架。通过一系列的标签将不同区域的 internet 资源进行加载到一起这就是 HTML 的核心。因此学习 HTML 本质就是学习标签语法的过程。</p>\n<h3 id=\"dom树\"><a class=\"markdownIt-Anchor\" href=\"#dom树\">#</a> DOM 树</h3>\n<p><img data-src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/780ca3aa023d4224ba3ded1246aa78be~tplv-k3u1fbpfcp-watermark.image?\" alt=\"image.png\"></p>\n<p>浏览器渲染时，页面首先对一个 HTML 的解析会渲染成上图这个 DOM 树结构，这是浏览器渲染的第一步。整个页面骨架就渲染成一个树形，通过节点包含的方式不断向下添加标签。</p>\n<h3 id=\"标签\"><a class=\"markdownIt-Anchor\" href=\"#标签\">#</a> 标签</h3>\n<h4 id=\"标签语法\"><a class=\"markdownIt-Anchor\" href=\"#标签语法\">#</a> 标签语法</h4>\n<ul>\n<li>标签和属性不区分大小写，但推荐小写</li>\n<li>空标签可以不闭合：input，meta</li>\n<li>属性值最好使用双引号</li>\n<li>部分属性值可以省略：disabled，required 等</li>\n<li>部分标签的属性必须存在：img 中的 alt</li>\n</ul>\n<h4 id=\"标签语义化\"><a class=\"markdownIt-Anchor\" href=\"#标签语义化\">#</a> 标签语义化</h4>\n<h5 id=\"是什么\"><a class=\"markdownIt-Anchor\" href=\"#是什么\">#</a> 是什么</h5>\n<p>HTML 中的元素、属性以及属性值都有自己的含义</p>\n<h5 id=\"如何做\"><a class=\"markdownIt-Anchor\" href=\"#如何做\">#</a> 如何做</h5>\n<p>网站一般分为头部、底部、导航、侧边栏、文章等几个模块，每个模块下内容又可以分为标题、段落、超链接、代码、地址、时间、英文缩写、拼音等，我们就可以<strong>根据不同的模块，模块下的内容不同的作用或者意义，进行拆分，使用不同语义的标签进行书写，从而达到语义化的目的</strong>。</p>\n<h5 id=\"有何用\"><a class=\"markdownIt-Anchor\" href=\"#有何用\">#</a> 有何用</h5>\n<p>HTML 的标签语义化的作用：</p>\n<ul>\n<li>\n<p>增加代码可读性（开发者）</p>\n</li>\n<li>\n<p>让搜索引擎更容易懂，利于 SEO（搜索引擎）</p>\n</li>\n<li>\n<p>结构明确在没有 CSS 加载前也有较为明确的结构（浏览器）</p>\n</li>\n<li>\n<p>方便其他阅读设备阅读 (如屏幕阅读器阅读 <strong> 的时候会重读而 阅读到 <b> 不会重读)（阅读器）</p>\n</li>\n</ul>\n<h4 id=\"标签说明\"><a class=\"markdownIt-Anchor\" href=\"#标签说明\">#</a> 标签说明</h4>\n<ul>\n<li>\n<p>HTML 标签分为行内和块级</p>\n<ul>\n<li>行内：span，img，vedio，audio 等</li>\n<li>块级：div，p，title，session 等</li>\n</ul>\n</li>\n<li>\n<p>也可以从语义化角度区分</p>\n<ul>\n<li>语义化标签：blockquote，p，title，strong</li>\n<li>非语义化：div，span</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>这是前端的入门学习，本人也只是入行前端一年半菜鸟，参加字节青训营不断充实技术，在基础方面更要打牢固，只有不断学习才能进步～</p>\n",
            "tags": []
        }
    ]
}