{
    "version": "https://jsonfeed.org/version/1",
    "title": "眸光似星辰 • All posts by \"面试\" category",
    "description": "",
    "home_page_url": "http://victinSever.github.io",
    "items": [
        {
            "id": "http://victinsever.github.io/2023/03/06/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E5%BF%AB%E7%8B%97%E6%89%93%E8%BD%A6/%E5%BF%AB%E7%8B%97%E7%94%B5%E8%AF%9D%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/03/06/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E5%BF%AB%E7%8B%97%E6%89%93%E8%BD%A6/%E5%BF%AB%E7%8B%97%E7%94%B5%E8%AF%9D%E4%B8%80%E9%9D%A2/",
            "title": "快狗打车一面",
            "date_published": "2023-03-06T12:36:23.000Z",
            "content_html": "<p>公司： 快狗打车</p>\n<p>时间：2023-03-06 下午6点</p>\n<p>时长：30min左右（电话面）</p>\n<hr>\n<h4 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h4><h4 id=\"说一说Vue和React你更喜欢用哪一个？\"><a href=\"#说一说Vue和React你更喜欢用哪一个？\" class=\"headerlink\" title=\"说一说Vue和React你更喜欢用哪一个？\"></a>说一说Vue和React你更喜欢用哪一个？</h4><h4 id=\"你刚才说Vue的拓展性不如React好，为什么？\"><a href=\"#你刚才说Vue的拓展性不如React好，为什么？\" class=\"headerlink\" title=\"你刚才说Vue的拓展性不如React好，为什么？\"></a>你刚才说Vue的拓展性不如React好，为什么？</h4><h4 id=\"Vue传参方式？\"><a href=\"#Vue传参方式？\" class=\"headerlink\" title=\"Vue传参方式？\"></a>Vue传参方式？</h4><h4 id=\"Vue中computed和watch区别？\"><a href=\"#Vue中computed和watch区别？\" class=\"headerlink\" title=\"Vue中computed和watch区别？\"></a>Vue中computed和watch区别？</h4><h4 id=\"场景：Vue开发中dom1页面更改了，dom2向dom1获取数据，dom2的视图没发生变化，为什么？\"><a href=\"#场景：Vue开发中dom1页面更改了，dom2向dom1获取数据，dom2的视图没发生变化，为什么？\" class=\"headerlink\" title=\"场景：Vue开发中dom1页面更改了，dom2向dom1获取数据，dom2的视图没发生变化，为什么？\"></a>场景：Vue开发中dom1页面更改了，dom2向dom1获取数据，dom2的视图没发生变化，为什么？</h4><h4 id=\"Vue中在created勾子有什么注意事项？\"><a href=\"#Vue中在created勾子有什么注意事项？\" class=\"headerlink\" title=\"Vue中在created勾子有什么注意事项？\"></a>Vue中在created勾子有什么注意事项？</h4><h4 id=\"场景：如果在created中操作js修改了页面布局，会引发什么问题？怎么解决？\"><a href=\"#场景：如果在created中操作js修改了页面布局，会引发什么问题？怎么解决？\" class=\"headerlink\" title=\"场景：如果在created中操作js修改了页面布局，会引发什么问题？怎么解决？\"></a>场景：如果在created中操作js修改了页面布局，会引发什么问题？怎么解决？</h4><h4 id=\"说一说Vue-nexttick？\"><a href=\"#说一说Vue-nexttick？\" class=\"headerlink\" title=\"说一说Vue.$nexttick？\"></a>说一说Vue.$nexttick？</h4><h4 id=\"Vue2和Vue3你更喜欢用哪一个？为什么？\"><a href=\"#Vue2和Vue3你更喜欢用哪一个？为什么？\" class=\"headerlink\" title=\"Vue2和Vue3你更喜欢用哪一个？为什么？\"></a>Vue2和Vue3你更喜欢用哪一个？为什么？</h4><h3 id=\"反问\"><a href=\"#反问\" class=\"headerlink\" title=\"反问\"></a>反问</h3><p>（都是电话面，三个工作日反馈）</p>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/03/06/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/Moka/Moka%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/03/06/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/Moka/Moka%E4%B8%80%E9%9D%A2/",
            "title": "Moka一面",
            "date_published": "2023-03-06T08:29:23.000Z",
            "content_html": "<p>公司： Moka</p>\n<p>时间：2023-03-06 下午3点</p>\n<p>时长：1hour左右</p>\n<hr>\n<p>HR：我们重点考察算法，预计总共一个小时，前半个小时考算法</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"算法题\"><a href=\"#算法题\" class=\"headerlink\" title=\"算法题\"></a>算法题</h3><p><strong>写一个函数format，传入一个javascript object，输出格式化后的string，为了简化，我们规定object里只有number、string、array、object四种类型， 且传入合法。</strong></p>\n<p>（本题需用原生方法实现，不能用<strong>JSON.stringify</strong>方法）</p>\n<figure class=\"highlight js\"><figcaption><span>test</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> object = &#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">b</span>: [</span><br><span class=\"line\">    <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"number\">3</span>,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">c</span>: <span class=\"number\">4</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">d</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">e</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"attr\">f</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">g</span>: <span class=\"string\">&#x27;6&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 将在屏幕上打印：*/</span></span><br><span class=\"line\"><span class=\"comment\">// &#x27;&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   &quot;a&quot;: 1,</span></span><br><span class=\"line\"><span class=\"comment\">//   &quot;b&quot;: [</span></span><br><span class=\"line\"><span class=\"comment\">//     2,</span></span><br><span class=\"line\"><span class=\"comment\">//     3,</span></span><br><span class=\"line\"><span class=\"comment\">//     &#123;          // &lt;-- 这个&#123;前的空格数是4 </span></span><br><span class=\"line\"><span class=\"comment\">//       &quot;c&quot;: 4 </span></span><br><span class=\"line\"><span class=\"comment\">//     &#125; </span></span><br><span class=\"line\"><span class=\"comment\">//   ], </span></span><br><span class=\"line\"><span class=\"comment\">//   &quot;d&quot;: &#123;       // &lt;-- 这个属性&quot;d&quot;前的空格数是2 </span></span><br><span class=\"line\"><span class=\"comment\">//     &quot;e&quot;: 5, </span></span><br><span class=\"line\"><span class=\"comment\">//     &quot;f&quot;: &#123; </span></span><br><span class=\"line\"><span class=\"comment\">//       &quot;g&quot;: &quot;6&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125; </span></span><br><span class=\"line\"><span class=\"comment\">//   &#125; </span></span><br><span class=\"line\"><span class=\"comment\">// &#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//实现</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">format</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> type = <span class=\"keyword\">typeof</span> obj</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(type !== <span class=\"string\">&#x27;object&#x27;</span> || type === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"regexp\">/string|funcntion|undefined/</span>.<span class=\"title function_\">test</span>(type)) &#123;</span><br><span class=\"line\">          obj = <span class=\"string\">&#x27;&quot;&#x27;</span> + obj + <span class=\"string\">&#x27;&quot;&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">String</span>(obj)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> json = []</span><br><span class=\"line\">      <span class=\"keyword\">let</span> arr = (obj &amp;&amp; obj.<span class=\"property\">constructor</span> == <span class=\"title class_\">Array</span>)</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> v = obj[k]</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(<span class=\"regexp\">/string|funcntion|undefined/</span>.<span class=\"title function_\">test</span>(type)) &#123;</span><br><span class=\"line\">              v = <span class=\"string\">&#x27;&quot;&#x27;</span> + v + <span class=\"string\">&#x27;&quot;&#x27;</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type == <span class=\"string\">&#x27;object&#x27;</span>) &#123;</span><br><span class=\"line\">              v = <span class=\"title function_\">format</span>(v)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          json.<span class=\"title function_\">push</span>((arr ? <span class=\"string\">&quot;&quot;</span> : <span class=\"string\">&#x27;&quot;&#x27;</span> +  k + <span class=\"string\">&#x27;&quot;:&#x27;</span>) + <span class=\"title class_\">String</span>(v))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> (arr ? <span class=\"string\">&#x27;[\\n&#x27;</span> : <span class=\"string\">&#x27;&#123;\\n&#x27;</span>) + <span class=\"title class_\">String</span>(json) + (arr ? <span class=\"string\">&#x27; \\n  ]&#x27;</span> : <span class=\"string\">&#x27;\\n  &#125;&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>讲一讲整个题的一个思路？</li>\n<li>用的for in这个循环，怎么处理输出的逗号问题？</li>\n<li>是不是没有用到Object.keys这个方法，这个方法可以判断最后一个元素？</li>\n<li>我看到你有视图去写一个\\t去实现一个缩进，又把它删了，为什么，你怎么处理这个缩进这个场景？</li>\n</ul>\n<figure class=\"highlight js\"><figcaption><span>answer</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//面试后的代码改进</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">format</span>(<span class=\"params\">obj, floor = <span class=\"number\">0</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> type = <span class=\"keyword\">typeof</span> obj</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type !== <span class=\"string\">&#x27;object&#x27;</span> || type === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"regexp\">/string|funcntion|undefined/</span>.<span class=\"title function_\">test</span>(type)) &#123;</span><br><span class=\"line\">            obj = <span class=\"string\">&#x27;&quot;&#x27;</span> + obj + <span class=\"string\">&#x27;&quot;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">String</span>(obj)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> json = []</span><br><span class=\"line\">        <span class=\"keyword\">let</span> arr = (obj &amp;&amp; obj.<span class=\"property\">constructor</span> == <span class=\"title class_\">Array</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//层级判断</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> blank = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; floor; i++) &#123;</span><br><span class=\"line\">            blank += <span class=\"string\">&#x27;  &#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> v = obj[k]</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"regexp\">/string|funcntion|undefined/</span>.<span class=\"title function_\">test</span>(type)) &#123;</span><br><span class=\"line\">                v = <span class=\"string\">&#x27;&quot;&#x27;</span> + v + <span class=\"string\">&#x27;&quot;&#x27;</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type == <span class=\"string\">&#x27;object&#x27;</span>) &#123;</span><br><span class=\"line\">                v = <span class=\"title function_\">format</span>(v, floor + <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            json.<span class=\"title function_\">push</span>(<span class=\"string\">`\\n<span class=\"subst\">$&#123;blank + <span class=\"string\">&#x27;  &#x27;</span>&#125;</span>`</span> + (arr ? <span class=\"string\">&quot;&quot;</span> : <span class=\"string\">&#x27;&quot;&#x27;</span> +  k + <span class=\"string\">&#x27;&quot;: &#x27;</span>) + <span class=\"title class_\">String</span>(v))</span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> (arr ? <span class=\"string\">&#x27;[&#x27;</span> : <span class=\"string\">&#x27;&#123;&#x27;</span>) + <span class=\"title class_\">String</span>(json) + (arr ? <span class=\"string\">`\\n<span class=\"subst\">$&#123;blank&#125;</span>]`</span> : <span class=\"string\">`\\n<span class=\"subst\">$&#123;blank&#125;</span>&#125;`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"工作在北京没有问题吧？\"><a href=\"#工作在北京没有问题吧？\" class=\"headerlink\" title=\"工作在北京没有问题吧？\"></a>工作在北京没有问题吧？</h4><h4 id=\"讲一下你哪一个项目做起来感受最多一些？\"><a href=\"#讲一下你哪一个项目做起来感受最多一些？\" class=\"headerlink\" title=\"讲一下你哪一个项目做起来感受最多一些？\"></a>讲一下你哪一个项目做起来感受最多一些？</h4><h4 id=\"你的低代码项目有哪些应用的场景可以说一下嘛？\"><a href=\"#你的低代码项目有哪些应用的场景可以说一下嘛？\" class=\"headerlink\" title=\"你的低代码项目有哪些应用的场景可以说一下嘛？\"></a>你的低代码项目有哪些应用的场景可以说一下嘛？</h4><h4 id=\"表单里面有复杂一点的功能吗？举个例子，比如说多个selected级联，额外接口的的fetch，输入后可以关联字段，有类似这种吗？\"><a href=\"#表单里面有复杂一点的功能吗？举个例子，比如说多个selected级联，额外接口的的fetch，输入后可以关联字段，有类似这种吗？\" class=\"headerlink\" title=\"表单里面有复杂一点的功能吗？举个例子，比如说多个selected级联，额外接口的的fetch，输入后可以关联字段，有类似这种吗？\"></a>表单里面有复杂一点的功能吗？举个例子，比如说多个selected级联，额外接口的的fetch，输入后可以关联字段，有类似这种吗？</h4><h4 id=\"组件拖拽中，拖拽后插入有一个预状态，怎么实现的？\"><a href=\"#组件拖拽中，拖拽后插入有一个预状态，怎么实现的？\" class=\"headerlink\" title=\"组件拖拽中，拖拽后插入有一个预状态，怎么实现的？\"></a>组件拖拽中，拖拽后插入有一个预状态，怎么实现的？</h4><h4 id=\"反问\"><a href=\"#反问\" class=\"headerlink\" title=\"反问\"></a>反问</h4><p>（直接说她对我的反馈是一面过了）</p>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/03/02/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%B9%9D%E5%8F%B7/%E4%B9%9D%E5%8F%B7%E4%BA%8C%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/03/02/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%B9%9D%E5%8F%B7/%E4%B9%9D%E5%8F%B7%E4%BA%8C%E9%9D%A2/",
            "title": "九号二面",
            "date_published": "2023-03-02T08:17:54.000Z",
            "content_html": "<p>公司： 九号公司</p>\n<p>base：北京-海淀区</p>\n<p>time：2022-3-2 16:00:00</p>\n<p>时长：13min左右</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"你自己做了这么多项目，你觉得自己在项目中最有成就的是什么？\"><a href=\"#你自己做了这么多项目，你觉得自己在项目中最有成就的是什么？\" class=\"headerlink\" title=\"你自己做了这么多项目，你觉得自己在项目中最有成就的是什么？\"></a>你自己做了这么多项目，你觉得自己在项目中最有成就的是什么？</h3><h3 id=\"Vue和React的区别是什么？\"><a href=\"#Vue和React的区别是什么？\" class=\"headerlink\" title=\"Vue和React的区别是什么？\"></a>Vue和React的区别是什么？</h3><h3 id=\"到岗时间-amp-实习时长？\"><a href=\"#到岗时间-amp-实习时长？\" class=\"headerlink\" title=\"到岗时间&amp;实习时长？\"></a>到岗时间&amp;实习时长？</h3><h3 id=\"反问\"><a href=\"#反问\" class=\"headerlink\" title=\"反问\"></a>反问</h3><p>（时长很短，直接最后说让HR和我聊）</p>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/03/01/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%B9%9D%E5%8F%B7/%E4%B9%9D%E5%8F%B7%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/03/01/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%B9%9D%E5%8F%B7/%E4%B9%9D%E5%8F%B7%E4%B8%80%E9%9D%A2/",
            "title": "九号一面",
            "date_published": "2023-03-01T11:20:54.000Z",
            "content_html": "<p>公司： 九号公司</p>\n<p>base：北京-海淀区</p>\n<p>time：2022-3-1 17:00:00</p>\n<p>时长：35min左右</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"你的组件库项目怎么使用的？\"><a href=\"#你的组件库项目怎么使用的？\" class=\"headerlink\" title=\"你的组件库项目怎么使用的？\"></a>你的组件库项目怎么使用的？</h3><h3 id=\"组件库有考虑模块引入吗？组件模块引入怎么做？\"><a href=\"#组件库有考虑模块引入吗？组件模块引入怎么做？\" class=\"headerlink\" title=\"组件库有考虑模块引入吗？组件模块引入怎么做？\"></a>组件库有考虑模块引入吗？组件模块引入怎么做？</h3><h3 id=\"TSX或者JSX你有考虑它是怎么转化成HTML的嘛？\"><a href=\"#TSX或者JSX你有考虑它是怎么转化成HTML的嘛？\" class=\"headerlink\" title=\"TSX或者JSX你有考虑它是怎么转化成HTML的嘛？\"></a>TSX或者JSX你有考虑它是怎么转化成HTML的嘛？</h3><h3 id=\"浏览器输入网址后然后到页面渲染经历哪些步骤？\"><a href=\"#浏览器输入网址后然后到页面渲染经历哪些步骤？\" class=\"headerlink\" title=\"浏览器输入网址后然后到页面渲染经历哪些步骤？\"></a>浏览器输入网址后然后到页面渲染经历哪些步骤？</h3><h3 id=\"你说到了浏览器最后会进行渲染，在渲染时遇到JS时会发生什么？\"><a href=\"#你说到了浏览器最后会进行渲染，在渲染时遇到JS时会发生什么？\" class=\"headerlink\" title=\"你说到了浏览器最后会进行渲染，在渲染时遇到JS时会发生什么？\"></a>你说到了浏览器最后会进行渲染，在渲染时遇到JS时会发生什么？</h3><h3 id=\"你有遇到JS时的动态加载吗？怎么用的？\"><a href=\"#你有遇到JS时的动态加载吗？怎么用的？\" class=\"headerlink\" title=\"你有遇到JS时的动态加载吗？怎么用的？\"></a>你有遇到JS时的动态加载吗？怎么用的？</h3><h3 id=\"JS有一个defer和async，你讲一讲他们的区别？\"><a href=\"#JS有一个defer和async，你讲一讲他们的区别？\" class=\"headerlink\" title=\"JS有一个defer和async，你讲一讲他们的区别？\"></a>JS有一个defer和async，你讲一讲他们的区别？</h3><h3 id=\"算法题：\"><a href=\"#算法题：\" class=\"headerlink\" title=\"算法题：\"></a>算法题：</h3><p>两个数组，设计算法求公共交集</p>\n<figure class=\"highlight js\"><figcaption><span>test</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">solve</span>(<span class=\"params\">arr1, arr2</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组相关的优化你知道哪些？\"><a href=\"#数组相关的优化你知道哪些？\" class=\"headerlink\" title=\"数组相关的优化你知道哪些？\"></a>数组相关的优化你知道哪些？</h3><h3 id=\"查找相关的算法？\"><a href=\"#查找相关的算法？\" class=\"headerlink\" title=\"查找相关的算法？\"></a>查找相关的算法？</h3><h3 id=\"Vue-router的实现原理？\"><a href=\"#Vue-router的实现原理？\" class=\"headerlink\" title=\"Vue-router的实现原理？\"></a>Vue-router的实现原理？</h3><h3 id=\"Vue-router怎么在页面地址变化时，让页面重新渲染的？\"><a href=\"#Vue-router怎么在页面地址变化时，让页面重新渲染的？\" class=\"headerlink\" title=\"Vue-router怎么在页面地址变化时，让页面重新渲染的？\"></a>Vue-router怎么在页面地址变化时，让页面重新渲染的？</h3><h3 id=\"JS是单线程的，你讲一讲JS的运行过程？\"><a href=\"#JS是单线程的，你讲一讲JS的运行过程？\" class=\"headerlink\" title=\"JS是单线程的，你讲一讲JS的运行过程？\"></a>JS是单线程的，你讲一讲JS的运行过程？</h3><h3 id=\"说一说你感兴趣的前端领域的东西，或者正在学习的？\"><a href=\"#说一说你感兴趣的前端领域的东西，或者正在学习的？\" class=\"headerlink\" title=\"说一说你感兴趣的前端领域的东西，或者正在学习的？\"></a>说一说你感兴趣的前端领域的东西，或者正在学习的？</h3><h3 id=\"服务端渲染你了解吗？SSR解决方案？\"><a href=\"#服务端渲染你了解吗？SSR解决方案？\" class=\"headerlink\" title=\"服务端渲染你了解吗？SSR解决方案？\"></a>服务端渲染你了解吗？SSR解决方案？</h3><h3 id=\"讲一讲Nuxt-js\"><a href=\"#讲一讲Nuxt-js\" class=\"headerlink\" title=\"讲一讲Nuxt.js\"></a>讲一讲Nuxt.js</h3><p>不了解</p>\n<h3 id=\"什么专业的？\"><a href=\"#什么专业的？\" class=\"headerlink\" title=\"什么专业的？\"></a>什么专业的？</h3><p>了解我是计科的，想问我操作系统和算法知识，因为时间原因没问了</p>\n<h3 id=\"反问\"><a href=\"#反问\" class=\"headerlink\" title=\"反问\"></a>反问</h3><ul>\n<li>不问面评，我就想问我面试过程中还可以怎么改进？</li>\n<li>公司业务是什么？我如果进去后做什么？</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/02/27/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%91%E5%8F%AF%E7%A7%91%E6%8A%80/%E4%BA%91%E5%8F%AF%E7%A7%91%E6%8A%80%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/27/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%91%E5%8F%AF%E7%A7%91%E6%8A%80/%E4%BA%91%E5%8F%AF%E7%A7%91%E6%8A%80%E4%B8%80%E9%9D%A2/",
            "title": "云可科技一面（初创公司）",
            "date_published": "2023-02-27T12:20:54.000Z",
            "content_html": "<p>公司： 云可科技（初创，搞元宇宙和AR技术的）</p>\n<p>base：北京</p>\n<p>time： 2月27日星期一16点00分</p>\n<p>时长：1hour20min左右</p>\n<p>面试官：3个，一个前端技术面试，一个算法技术面试，一个CEO</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h2 id=\"前端技术面试\"><a href=\"#前端技术面试\" class=\"headerlink\" title=\"前端技术面试\"></a>前端技术面试</h2><h3 id=\"你了解的新潮的前端或者web技术，哪些前沿知识？\"><a href=\"#你了解的新潮的前端或者web技术，哪些前沿知识？\" class=\"headerlink\" title=\"你了解的新潮的前端或者web技术，哪些前沿知识？\"></a>你了解的新潮的前端或者web技术，哪些前沿知识？</h3><h3 id=\"serverless和flutter已经不是新技术了吧？\"><a href=\"#serverless和flutter已经不是新技术了吧？\" class=\"headerlink\" title=\"serverless和flutter已经不是新技术了吧？\"></a>serverless和flutter已经不是新技术了吧？</h3><h3 id=\"你项目中的低代码编辑怎么获取到表单的数据的？如何验证表单数据的？\"><a href=\"#你项目中的低代码编辑怎么获取到表单的数据的？如何验证表单数据的？\" class=\"headerlink\" title=\"你项目中的低代码编辑怎么获取到表单的数据的？如何验证表单数据的？\"></a>你项目中的低代码编辑怎么获取到表单的数据的？如何验证表单数据的？</h3><h3 id=\"你是怎么分类表单组件类型的？\"><a href=\"#你是怎么分类表单组件类型的？\" class=\"headerlink\" title=\"你是怎么分类表单组件类型的？\"></a>你是怎么分类表单组件类型的？</h3><h3 id=\"你项目封装了hook，问问你最有意思封装的hook是什么？\"><a href=\"#你项目封装了hook，问问你最有意思封装的hook是什么？\" class=\"headerlink\" title=\"你项目封装了hook，问问你最有意思封装的hook是什么？\"></a>你项目封装了hook，问问你最有意思封装的hook是什么？</h3><h3 id=\"你了解的HTML5新增的标签？\"><a href=\"#你了解的HTML5新增的标签？\" class=\"headerlink\" title=\"你了解的HTML5新增的标签？\"></a>你了解的HTML5新增的标签？</h3><h3 id=\"Canvas你在项目里面怎么使用的？\"><a href=\"#Canvas你在项目里面怎么使用的？\" class=\"headerlink\" title=\"Canvas你在项目里面怎么使用的？\"></a>Canvas你在项目里面怎么使用的？</h3><h3 id=\"CSS3隐藏元素的方式有哪些？\"><a href=\"#CSS3隐藏元素的方式有哪些？\" class=\"headerlink\" title=\"CSS3隐藏元素的方式有哪些？\"></a>CSS3隐藏元素的方式有哪些？</h3><h3 id=\"了解BFC和IFC吗？讲一讲？\"><a href=\"#了解BFC和IFC吗？讲一讲？\" class=\"headerlink\" title=\"了解BFC和IFC吗？讲一讲？\"></a>了解BFC和IFC吗？讲一讲？</h3><h3 id=\"讲一讲多端适配方案？你了解哪些？\"><a href=\"#讲一讲多端适配方案？你了解哪些？\" class=\"headerlink\" title=\"讲一讲多端适配方案？你了解哪些？\"></a>讲一讲多端适配方案？你了解哪些？</h3><h3 id=\"了解前端动画吗？有哪些方案？\"><a href=\"#了解前端动画吗？有哪些方案？\" class=\"headerlink\" title=\"了解前端动画吗？有哪些方案？\"></a>了解前端动画吗？有哪些方案？</h3><h3 id=\"什么是伪类，什么是伪元素，说一说他们的作用和区别？\"><a href=\"#什么是伪类，什么是伪元素，说一说他们的作用和区别？\" class=\"headerlink\" title=\"什么是伪类，什么是伪元素，说一说他们的作用和区别？\"></a>什么是伪类，什么是伪元素，说一说他们的作用和区别？</h3><h3 id=\"JS运行机制？\"><a href=\"#JS运行机制？\" class=\"headerlink\" title=\"JS运行机制？\"></a>JS运行机制？</h3><h3 id=\"用过闭包吗，哪些情况？\"><a href=\"#用过闭包吗，哪些情况？\" class=\"headerlink\" title=\"用过闭包吗，哪些情况？\"></a>用过闭包吗，哪些情况？</h3><h3 id=\"讲一讲Promise？\"><a href=\"#讲一讲Promise？\" class=\"headerlink\" title=\"讲一讲Promise？\"></a>讲一讲Promise？</h3><h3 id=\"JS的对象迭代？\"><a href=\"#JS的对象迭代？\" class=\"headerlink\" title=\"JS的对象迭代？\"></a>JS的对象迭代？</h3><h3 id=\"Object-entries输出的是什么？\"><a href=\"#Object-entries输出的是什么？\" class=\"headerlink\" title=\"Object.entries输出的是什么？\"></a>Object.entries输出的是什么？</h3><p>二元键值对</p>\n<h3 id=\"HTTP状态码有哪些，说一下？\"><a href=\"#HTTP状态码有哪些，说一下？\" class=\"headerlink\" title=\"HTTP状态码有哪些，说一下？\"></a>HTTP状态码有哪些，说一下？</h3><h3 id=\"说一下跨域解决方案？\"><a href=\"#说一下跨域解决方案？\" class=\"headerlink\" title=\"说一下跨域解决方案？\"></a>说一下跨域解决方案？</h3><h3 id=\"了解Websocket吗？说一下他的优点和优化方案？\"><a href=\"#了解Websocket吗？说一下他的优点和优化方案？\" class=\"headerlink\" title=\"了解Websocket吗？说一下他的优点和优化方案？\"></a>了解Websocket吗？说一下他的优点和优化方案？</h3><h3 id=\"Vue和React的区别？\"><a href=\"#Vue和React的区别？\" class=\"headerlink\" title=\"Vue和React的区别？\"></a>Vue和React的区别？</h3><h3 id=\"Vue2的双向数据绑定原理？\"><a href=\"#Vue2的双向数据绑定原理？\" class=\"headerlink\" title=\"Vue2的双向数据绑定原理？\"></a>Vue2的双向数据绑定原理？</h3><h3 id=\"了解React的哪些hooks？\"><a href=\"#了解React的哪些hooks？\" class=\"headerlink\" title=\"了解React的哪些hooks？\"></a>了解React的哪些hooks？</h3><h3 id=\"useRef用过吗？讲一下这个勾子？\"><a href=\"#useRef用过吗？讲一下这个勾子？\" class=\"headerlink\" title=\"useRef用过吗？讲一下这个勾子？\"></a>useRef用过吗？讲一下这个勾子？</h3><h3 id=\"useState哪些情况是同步哪些情况是异步的？\"><a href=\"#useState哪些情况是同步哪些情况是异步的？\" class=\"headerlink\" title=\"useState哪些情况是同步哪些情况是异步的？\"></a>useState哪些情况是同步哪些情况是异步的？</h3><h3 id=\"Git操作中，你了解哪些命令？\"><a href=\"#Git操作中，你了解哪些命令？\" class=\"headerlink\" title=\"Git操作中，你了解哪些命令？\"></a>Git操作中，你了解哪些命令？</h3><h3 id=\"你说了git-stash，如果我有一个test分支，需要切换到主分支，使用这个命令后出出现哪些问题需要主题，就是这个命令的注意事项有哪些？\"><a href=\"#你说了git-stash，如果我有一个test分支，需要切换到主分支，使用这个命令后出出现哪些问题需要主题，就是这个命令的注意事项有哪些？\" class=\"headerlink\" title=\"你说了git stash，如果我有一个test分支，需要切换到主分支，使用这个命令后出出现哪些问题需要主题，就是这个命令的注意事项有哪些？\"></a>你说了git stash，如果我有一个test分支，需要切换到主分支，使用这个命令后出出现哪些问题需要主题，就是这个命令的注意事项有哪些？</h3><h3 id=\"最开始你说你了解了下Web3-0的一些概念，说一下你认识的web3-0？\"><a href=\"#最开始你说你了解了下Web3-0的一些概念，说一下你认识的web3-0？\" class=\"headerlink\" title=\"最开始你说你了解了下Web3.0的一些概念，说一下你认识的web3.0？\"></a>最开始你说你了解了下Web3.0的一些概念，说一下你认识的web3.0？</h3><h3 id=\"你有了解three-js吗？你知道多少说多少\"><a href=\"#你有了解three-js吗？你知道多少说多少\" class=\"headerlink\" title=\"你有了解three.js吗？你知道多少说多少\"></a>你有了解three.js吗？你知道多少说多少</h3><h2 id=\"数据结构面试\"><a href=\"#数据结构面试\" class=\"headerlink\" title=\"数据结构面试\"></a>数据结构面试</h2><h3 id=\"说一下你了解的数据结构和算法？\"><a href=\"#说一下你了解的数据结构和算法？\" class=\"headerlink\" title=\"说一下你了解的数据结构和算法？\"></a>说一下你了解的数据结构和算法？</h3><h3 id=\"你了解最短路径算法吗？你知道哪些最短路径算法？说一下\"><a href=\"#你了解最短路径算法吗？你知道哪些最短路径算法？说一下\" class=\"headerlink\" title=\"你了解最短路径算法吗？你知道哪些最短路径算法？说一下\"></a>你了解最短路径算法吗？你知道哪些最短路径算法？说一下</h3><h3 id=\"Kruskal算法的时间复杂度？\"><a href=\"#Kruskal算法的时间复杂度？\" class=\"headerlink\" title=\"Kruskal算法的时间复杂度？\"></a>Kruskal算法的时间复杂度？</h3><h3 id=\"这个算法的时间复杂度为什么是有个logn？\"><a href=\"#这个算法的时间复杂度为什么是有个logn？\" class=\"headerlink\" title=\"这个算法的时间复杂度为什么是有个logn？\"></a>这个算法的时间复杂度为什么是有个logn？</h3><h3 id=\"Kruskal算法的这个图要求是一个什么图？\"><a href=\"#Kruskal算法的这个图要求是一个什么图？\" class=\"headerlink\" title=\"Kruskal算法的这个图要求是一个什么图？\"></a>Kruskal算法的这个图要求是一个什么图？</h3><h3 id=\"这个边和点的关系是什么？\"><a href=\"#这个边和点的关系是什么？\" class=\"headerlink\" title=\"这个边和点的关系是什么？\"></a>这个边和点的关系是什么？</h3><h3 id=\"给两个节点，在单树中查找他们的公共祖先节点，如何实现这个算法？\"><a href=\"#给两个节点，在单树中查找他们的公共祖先节点，如何实现这个算法？\" class=\"headerlink\" title=\"给两个节点，在单树中查找他们的公共祖先节点，如何实现这个算法？\"></a>给两个节点，在单树中查找他们的公共祖先节点，如何实现这个算法？</h3><h3 id=\"如何提升这个算法的效率？如何优化？你这个算法是O-n-如何降低到O-logn-？\"><a href=\"#如何提升这个算法的效率？如何优化？你这个算法是O-n-如何降低到O-logn-？\" class=\"headerlink\" title=\"如何提升这个算法的效率？如何优化？你这个算法是O(n)如何降低到O(logn)？\"></a>如何提升这个算法的效率？如何优化？你这个算法是O(n)如何降低到O(logn)？</h3><h2 id=\"HR面\"><a href=\"#HR面\" class=\"headerlink\" title=\"HR面\"></a>HR面</h2><h3 id=\"如何学习新的技术栈的？\"><a href=\"#如何学习新的技术栈的？\" class=\"headerlink\" title=\"如何学习新的技术栈的？\"></a>如何学习新的技术栈的？</h3><h3 id=\"学习新的技术栈一般用多久？\"><a href=\"#学习新的技术栈一般用多久？\" class=\"headerlink\" title=\"学习新的技术栈一般用多久？\"></a>学习新的技术栈一般用多久？</h3><h3 id=\"比如学习uni-app你怎么学的？\"><a href=\"#比如学习uni-app你怎么学的？\" class=\"headerlink\" title=\"比如学习uni-app你怎么学的？\"></a>比如学习uni-app你怎么学的？</h3><h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"反问\"><a href=\"#反问\" class=\"headerlink\" title=\"反问\"></a>反问</h3><h3 id=\"公司主要业务是做虚拟3d产品吗？\"><a href=\"#公司主要业务是做虚拟3d产品吗？\" class=\"headerlink\" title=\"公司主要业务是做虚拟3d产品吗？\"></a>公司主要业务是做虚拟3d产品吗？</h3><h3 id=\"需要学习游戏引擎吗？\"><a href=\"#需要学习游戏引擎吗？\" class=\"headerlink\" title=\"需要学习游戏引擎吗？\"></a>需要学习游戏引擎吗？</h3><h3 id=\"需要会建模吗？\"><a href=\"#需要会建模吗？\" class=\"headerlink\" title=\"需要会建模吗？\"></a>需要会建模吗？</h3>",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/02/27/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%BB%BF%E7%9B%9F/%E7%BB%BF%E7%9B%9F%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/27/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%BB%BF%E7%9B%9F/%E7%BB%BF%E7%9B%9F%E4%B8%80%E9%9D%A2/",
            "title": "绿盟一面",
            "date_published": "2023-02-27T12:00:54.000Z",
            "content_html": "<p>公司： 绿盟</p>\n<p>base：西安</p>\n<p>time： 2月27日星期一14点30分</p>\n<p>时长：20min左右</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"JS的数据类型？\"><a href=\"#JS的数据类型？\" class=\"headerlink\" title=\"JS的数据类型？\"></a>JS的数据类型？</h3><h3 id=\"typeof和instanceof的区别？\"><a href=\"#typeof和instanceof的区别？\" class=\"headerlink\" title=\"typeof和instanceof的区别？\"></a>typeof和instanceof的区别？</h3><h3 id=\"箭头函数和普通函数的区别？\"><a href=\"#箭头函数和普通函数的区别？\" class=\"headerlink\" title=\"箭头函数和普通函数的区别？\"></a>箭头函数和普通函数的区别？</h3><ul>\n<li>还有吗？</li>\n<li>还有补充的吗？</li>\n</ul>\n<p>1、箭头函数的定义要比function定义简洁、清晰得多，很快捷；</p>\n<p>2、箭头函数不会创建自己的this，而function会；</p>\n<p>3、箭头函数不能作为构造函数使用，而function能作为构造函数使用；</p>\n<p>4、箭头函数没有自己的arguments，而function有。</p>\n<h3 id=\"JS的事件循环机制？\"><a href=\"#JS的事件循环机制？\" class=\"headerlink\" title=\"JS的事件循环机制？\"></a>JS的事件循环机制？</h3><h3 id=\"说一说你知道哪些宏任务哪些微任务？\"><a href=\"#说一说你知道哪些宏任务哪些微任务？\" class=\"headerlink\" title=\"说一说你知道哪些宏任务哪些微任务？\"></a>说一说你知道哪些宏任务哪些微任务？</h3><h3 id=\"虚拟DOM有什么好处？\"><a href=\"#虚拟DOM有什么好处？\" class=\"headerlink\" title=\"虚拟DOM有什么好处？\"></a>虚拟DOM有什么好处？</h3><p>（这里给自己挖了坑，说了虚拟dom的diff算法，然后就问了这个）</p>\n<h3 id=\"讲一讲Vue和React的diff算法，有什么不同？\"><a href=\"#讲一讲Vue和React的diff算法，有什么不同？\" class=\"headerlink\" title=\"讲一讲Vue和React的diff算法，有什么不同？\"></a>讲一讲Vue和React的diff算法，有什么不同？</h3><h3 id=\"页面进入首页，讲一讲token鉴权？\"><a href=\"#页面进入首页，讲一讲token鉴权？\" class=\"headerlink\" title=\"页面进入首页，讲一讲token鉴权？\"></a>页面进入首页，讲一讲token鉴权？</h3><h3 id=\"如何使用Vue勾子来达到页面权限管理，有了解吗？\"><a href=\"#如何使用Vue勾子来达到页面权限管理，有了解吗？\" class=\"headerlink\" title=\"如何使用Vue勾子来达到页面权限管理，有了解吗？\"></a>如何使用Vue勾子来达到页面权限管理，有了解吗？</h3><p>（我答的路由守卫）</p>\n<h3 id=\"讲一讲组件通信？\"><a href=\"#讲一讲组件通信？\" class=\"headerlink\" title=\"讲一讲组件通信？\"></a>讲一讲组件通信？</h3><h3 id=\"讲一讲前后端交互是怎么做的？\"><a href=\"#讲一讲前后端交互是怎么做的？\" class=\"headerlink\" title=\"讲一讲前后端交互是怎么做的？\"></a>讲一讲前后端交互是怎么做的？</h3><h3 id=\"项目里面写了权限分离，讲一讲怎么做的？\"><a href=\"#项目里面写了权限分离，讲一讲怎么做的？\" class=\"headerlink\" title=\"项目里面写了权限分离，讲一讲怎么做的？\"></a>项目里面写了权限分离，讲一讲怎么做的？</h3><h3 id=\"你有考虑到后期页面增加吗，项目中的路由是固定写好的嘛？\"><a href=\"#你有考虑到后期页面增加吗，项目中的路由是固定写好的嘛？\" class=\"headerlink\" title=\"你有考虑到后期页面增加吗，项目中的路由是固定写好的嘛？\"></a>你有考虑到后期页面增加吗，项目中的路由是固定写好的嘛？</h3><h3 id=\"项目中的多级嵌套是怎么做的，你有什么好的封装或者有意思的组件封装吗？\"><a href=\"#项目中的多级嵌套是怎么做的，你有什么好的封装或者有意思的组件封装吗？\" class=\"headerlink\" title=\"项目中的多级嵌套是怎么做的，你有什么好的封装或者有意思的组件封装吗？\"></a>项目中的多级嵌套是怎么做的，你有什么好的封装或者有意思的组件封装吗？</h3><h3 id=\"你了解Echarts吗？有对Echarts封装过吗，怎么封装？\"><a href=\"#你了解Echarts吗？有对Echarts封装过吗，怎么封装？\" class=\"headerlink\" title=\"你了解Echarts吗？有对Echarts封装过吗，怎么封装？\"></a>你了解Echarts吗？有对Echarts封装过吗，怎么封装？</h3><h3 id=\"你刚才说你封装Echarts会出现页面的表没有渲染出来，你有了解数据刷新吗\"><a href=\"#你刚才说你封装Echarts会出现页面的表没有渲染出来，你有了解数据刷新吗\" class=\"headerlink\" title=\"你刚才说你封装Echarts会出现页面的表没有渲染出来，你有了解数据刷新吗\"></a>你刚才说你封装Echarts会出现页面的表没有渲染出来，你有了解数据刷新吗</h3><h3 id=\"反问\"><a href=\"#反问\" class=\"headerlink\" title=\"反问\"></a>反问</h3><ul>\n<li>面试有几面？<ul>\n<li>一面</li>\n</ul>\n</li>\n<li>业务是什么？<ul>\n<li>管理系统</li>\n</ul>\n</li>\n<li>技术栈是什么？<ul>\n<li>Vue和ElementUI</li>\n</ul>\n</li>\n<li>如果可能了解这个需要多久到岗？</li>\n</ul>\n<h3 id=\"一周可以到岗多少天？学校放你走吗？\"><a href=\"#一周可以到岗多少天？学校放你走吗？\" class=\"headerlink\" title=\"一周可以到岗多少天？学校放你走吗？\"></a>一周可以到岗多少天？学校放你走吗？</h3>",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/02/17/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%99%BE%E5%BA%A6/%E7%99%BE%E5%BA%A6%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/17/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%99%BE%E5%BA%A6/%E7%99%BE%E5%BA%A6%E4%B8%80%E9%9D%A2/",
            "title": "百度一面",
            "date_published": "2023-02-17T05:26:54.000Z",
            "content_html": "<p>公司： 百度-前端国际化产品研发（北京）</p>\n<p>面试时间：2022-2-17 上午11:00-11:45</p>\n<p>时长：45min左右</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么\"><a href=\"#浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么\" class=\"headerlink\" title=\"浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么?\"></a>浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么?</h3><ul>\n<li>域名解析</li>\n<li>TCP的三次握手</li>\n<li>数据传输：向服务器请求，封装成请求数据包，发送给服务器<ul>\n<li>请求数据包从 客户机应用层 出发，经过 客户机传输层、客户机网络层、客户机数据链路层、客户机物理层、本地交换机物理层，到达 本地交换机数据链路层。</li>\n<li>本地交换机向本地路由器转发数据包。</li>\n<li>数据包从 本地交换机数据链路层 出发，经过 本地交换机物理层 、本地路由器物理层、本地路由器数据链路层，到达 本地路由器网络层。</li>\n<li>本地路由器对数据包进行 分组过滤，依据 路由表 信息，将可传输的数据包 转发 至目的路由器。</li>\n<li>数据包从 本地路由器网络层 出发，经过 本地路由器数据链路层、本地路由器物理层，通过 互联网 与 目的路由器的物理层 连接，然后经过 目的路由器的数据链路层，到达 目的路由器的网络层。</li>\n<li>目的路由器根据 路由表 信息将数据包转发至目的交换机。<br>数据包从 目的路由器网络层 出发，经过 目的路由器数据链路层、目的路由器物理层、目的交换机物理层，到达 目的交换机数据链路层。<br>目的交换机转发数据包至对应服务器。</li>\n<li>数据包从 目的交换机数据链路层 出发，经过 目的交换机物理层、服务器物理层、服务器数据链路层、服务器网络层、服务器传输层，到达 服务器应用层。</li>\n<li>服务器 WEB 应用对请求数据包进行解析，提供对应资源，封装成响应数据包。</li>\n</ul>\n</li>\n<li>响应数据包通过相同的流程返回给客户端应用层</li>\n</ul>\n<h3 id=\"TCP协议负责做什么？IP协议负责做什么？\"><a href=\"#TCP协议负责做什么？IP协议负责做什么？\" class=\"headerlink\" title=\"TCP协议负责做什么？IP协议负责做什么？\"></a>TCP协议负责做什么？IP协议负责做什么？</h3><ul>\n<li>TCP协议：<ul>\n<li>1、完成对数据报的确认、流量控制和网络拥塞；</li>\n<li>2、自动检测数据报，并提供错误重发的功能；</li>\n<li>3、将多条路径传送的数据报按照原来的顺序进行排列；</li>\n<li>4、控制超时重发，自动调整超时值。</li>\n</ul>\n</li>\n<li>IP协议：寻址和分段</li>\n</ul>\n<h3 id=\"IP分类中C类地址的网络号是什么？\"><a href=\"#IP分类中C类地址的网络号是什么？\" class=\"headerlink\" title=\"IP分类中C类地址的网络号是什么？\"></a>IP分类中C类地址的网络号是什么？</h3><p> 一个C类IP地址由3字节的网络地址和1字节的主机地址组成，网络地址的最高位必须是“110”。范围从192.0.0.0到223.255.255.255。C类网络可达209万余个，每个网络能容纳254个主机。</p>\n<h3 id=\"http2的特性是什么？http2的首部压缩是怎么一回事？\"><a href=\"#http2的特性是什么？http2的首部压缩是怎么一回事？\" class=\"headerlink\" title=\"http2的特性是什么？http2的首部压缩是怎么一回事？\"></a>http2的特性是什么？http2的首部压缩是怎么一回事？</h3><ul>\n<li><p>特性：</p>\n<ul>\n<li>二进制分帧：减少服务器压力，网络拥塞减少，丢包回复加快</li>\n<li>首部压缩：报头紧凑，利于数据传输，减少传输数据量</li>\n<li>流量控制：基于HTTP链接的每一跳进行，而非端到端的控制</li>\n<li>多路复用：请求和响应不影响，一个链接可以并行发送多个请求响应，减小延迟</li>\n<li>请求优先级：可以让服务器决定数据优先级</li>\n<li>服务器推送：服务器推送提高性能</li>\n</ul>\n</li>\n<li><p>首部压缩工作流程：</p>\n<p>对于相同的数据，不再重新通过每次请求和响应发送。每个新的首部键值对要么追加到当前表的末尾，要么替换表中之前的值。首部表在HTTP2.0的链接存续期内始终存在，由客户端和服务端共同渐进的更新。</p>\n</li>\n</ul>\n<h3 id=\"说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？\"><a href=\"#说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？\" class=\"headerlink\" title=\"说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？\"></a>说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？</h3><ul>\n<li>精确匹配 &#x3D;<br>前缀匹配 ^~<br>按文件中顺序的正则匹配<br>匹配不带任何修饰的前缀匹配<br>交给&#x2F;通用匹配<br>当有匹配成功时候，停止匹配，按当前匹配规则处理请求</li>\n</ul>\n<h3 id=\"git中代码提交方面的准则？\"><a href=\"#git中代码提交方面的准则？\" class=\"headerlink\" title=\"git中代码提交方面的准则？\"></a>git中代码提交方面的准则？</h3><table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">add</td>\n<td align=\"left\">新增功能</td>\n</tr>\n<tr>\n<td align=\"left\">update</td>\n<td align=\"left\">更新功能</td>\n</tr>\n<tr>\n<td align=\"left\">delete</td>\n<td align=\"left\">删除功能</td>\n</tr>\n<tr>\n<td align=\"left\">fix</td>\n<td align=\"left\">修复 BUG</td>\n</tr>\n<tr>\n<td align=\"left\">refactor</td>\n<td align=\"left\">代码重构</td>\n</tr>\n<tr>\n<td align=\"left\">revert</td>\n<td align=\"left\">撤销上次commit</td>\n</tr>\n<tr>\n<td align=\"left\">style</td>\n<td align=\"left\">代码风格更改</td>\n</tr>\n<tr>\n<td align=\"left\">docs</td>\n<td align=\"left\">修改文档相关内容</td>\n</tr>\n</tbody></table>\n<h3 id=\"介绍使用git的几个操作？\"><a href=\"#介绍使用git的几个操作？\" class=\"headerlink\" title=\"介绍使用git的几个操作？\"></a>介绍使用git的几个操作？</h3><ul>\n<li>git add</li>\n<li>git commit</li>\n<li>git pull</li>\n<li>git push</li>\n<li>git log</li>\n<li>git reset</li>\n<li>git merge</li>\n<li>git branch</li>\n<li>git checkout</li>\n<li>git remote</li>\n<li>git clone</li>\n<li>git diff</li>\n<li>git rm</li>\n<li>git mv</li>\n<li>git fetch</li>\n<li>git status</li>\n</ul>\n<h3 id=\"我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？\"><a href=\"#我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？\" class=\"headerlink\" title=\"我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？\"></a>我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？</h3><ul>\n<li><p>git stash</p>\n<p>我在a分支git stash save “sss”暂存了一个修改,那么我切换到b分支,我使用git stash pop 就能把在a分支保存的”sss”这个修改同步到了b分支上.所以当我们需要在不同的分支上取出不同的分支上保存的修改,那么就用到了git stash list,这个命令可以把在所有分支上暂存的信息显示出来,然后我们通过 git stash apply stash@{0} 来选择恢复哪个暂存,stash@{0}这个会在list中列出来.</p>\n</li>\n</ul>\n<h3 id=\"js的数据类型？\"><a href=\"#js的数据类型？\" class=\"headerlink\" title=\"js的数据类型？\"></a>js的数据类型？</h3><ul>\n<li><p>普通数据类型：number，string，boolean，null，undefined，symbol，bigint</p>\n</li>\n<li><p>引用数据类型：object，fuction</p>\n</li>\n</ul>\n<h3 id=\"对于js的数据类型哪些可以通过typeof判断出来，哪些不行？\"><a href=\"#对于js的数据类型哪些可以通过typeof判断出来，哪些不行？\" class=\"headerlink\" title=\"对于js的数据类型哪些可以通过typeof判断出来，哪些不行？\"></a>对于js的数据类型哪些可以通过typeof判断出来，哪些不行？</h3><p>除了对象都可以，如果是对象的话，都结果为Object</p>\n<h3 id=\"有没有万能的判断数据的方法？\"><a href=\"#有没有万能的判断数据的方法？\" class=\"headerlink\" title=\"有没有万能的判断数据的方法？\"></a>有没有万能的判断数据的方法？</h3><p>Object.prototype.toString.call()</p>\n<h3 id=\"js绑定事件的方法有哪些？\"><a href=\"#js绑定事件的方法有哪些？\" class=\"headerlink\" title=\"js绑定事件的方法有哪些？\"></a>js绑定事件的方法有哪些？</h3><ul>\n<li><p>原生添加属性绑定事件处理函数</p>\n</li>\n<li><p>添加监听器</p>\n</li>\n</ul>\n<h3 id=\"对于js数组哪些方法可以在遍历的时候去进行一个break跳出？\"><a href=\"#对于js数组哪些方法可以在遍历的时候去进行一个break跳出？\" class=\"headerlink\" title=\"对于js数组哪些方法可以在遍历的时候去进行一个break跳出？\"></a>对于js数组哪些方法可以在遍历的时候去进行一个break跳出？</h3><ul>\n<li>数组的方法没有可以在遍历时break跳出</li>\n<li>但some和every可以通过return停止遍历，其他方法如forEach，map，ffilter使用return只是跳出本次循环</li>\n</ul>\n<h3 id=\"for，for…in和for…of有没有可以或者不可以break跳出？\"><a href=\"#for，for…in和for…of有没有可以或者不可以break跳出？\" class=\"headerlink\" title=\"for，for…in和for…of有没有可以或者不可以break跳出？\"></a>for，for…in和for…of有没有可以或者不可以break跳出？</h3><p>都可以跳出</p>\n<h3 id=\"我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async-x2F-await的方法有什么区别？\"><a href=\"#我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async-x2F-await的方法有什么区别？\" class=\"headerlink\" title=\"我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async&#x2F;await的方法有什么区别？\"></a>我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async&#x2F;await的方法有什么区别？</h3><ul>\n<li>若响应不及时或者等待时间过程，await会阻塞后续js的运行。</li>\n<li>区别：需要等待每一个promise响应结束</li>\n</ul>\n<h3 id=\"优化上述场景如何解决？做项目的时候有没有遇到过？\"><a href=\"#优化上述场景如何解决？做项目的时候有没有遇到过？\" class=\"headerlink\" title=\"优化上述场景如何解决？做项目的时候有没有遇到过？\"></a>优化上述场景如何解决？做项目的时候有没有遇到过？</h3><p>Promise.all()</p>\n<h3 id=\"CSS选择器的优先级？\"><a href=\"#CSS选择器的优先级？\" class=\"headerlink\" title=\"CSS选择器的优先级？\"></a>CSS选择器的优先级？</h3><p>!important &gt; 内联样式 &gt; 嵌入演示 &gt; 外链样式 &gt; id选择器 &gt; 类选择器 &gt; 标签选择器 &gt; 子选择器 &gt; 后代选择器 &gt; 伪类选择器 &gt; 继承属性</p>\n<p>优先级相同采用最后出现的样式</p>\n<h3 id=\"我用了id选择器，和class选择器相比会造成什么问题？\"><a href=\"#我用了id选择器，和class选择器相比会造成什么问题？\" class=\"headerlink\" title=\"我用了id选择器，和class选择器相比会造成什么问题？\"></a>我用了id选择器，和class选择器相比会造成什么问题？</h3><ul>\n<li>id选择器只能使用一次</li>\n<li>id选择器不能结合使用</li>\n</ul>\n<h3 id=\"vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？\"><a href=\"#vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？\" class=\"headerlink\" title=\"vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？\"></a>vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？</h3><ul>\n<li>普通CSS写法：&gt;&gt;&gt;</li>\n<li>SCSS写法：::v-deep </li>\n<li>sass语法&#x2F;less语法：&#x2F;deep&#x2F;</li>\n</ul>\n<h3 id=\"你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？\"><a href=\"#你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？\" class=\"headerlink\" title=\"你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？\"></a>你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？</h3><h3 id=\"平时是怎么学习的呢？\"><a href=\"#平时是怎么学习的呢？\" class=\"headerlink\" title=\"平时是怎么学习的呢？\"></a>平时是怎么学习的呢？</h3><h3 id=\"我可能问了一些你没有准备到的，你觉得哪些是你擅长的？\"><a href=\"#我可能问了一些你没有准备到的，你觉得哪些是你擅长的？\" class=\"headerlink\" title=\"我可能问了一些你没有准备到的，你觉得哪些是你擅长的？\"></a>我可能问了一些你没有准备到的，你觉得哪些是你擅长的？</h3>",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/02/16/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C/%E4%BA%AC%E4%B8%9C%E4%BA%8C%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/16/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C/%E4%BA%AC%E4%B8%9C%E4%BA%8C%E9%9D%A2/",
            "title": "京东二面",
            "date_published": "2023-02-16T08:26:54.000Z",
            "content_html": "<p>公司： 京东（北京）</p>\n<p>面试时间：2022-2-16 下午2:30-3:30</p>\n<p>时长：1hour左右</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"近期学了一些什么新技术\"><a href=\"#近期学了一些什么新技术\" class=\"headerlink\" title=\"近期学了一些什么新技术\"></a>近期学了一些什么新技术</h3><h3 id=\"组件库怎么进行主题配置的\"><a href=\"#组件库怎么进行主题配置的\" class=\"headerlink\" title=\"组件库怎么进行主题配置的\"></a>组件库怎么进行主题配置的</h3><h3 id=\"vue和react你都用过，你觉得你更喜欢哪一个？\"><a href=\"#vue和react你都用过，你觉得你更喜欢哪一个？\" class=\"headerlink\" title=\"vue和react你都用过，你觉得你更喜欢哪一个？\"></a>vue和react你都用过，你觉得你更喜欢哪一个？</h3><blockquote>\n<p>面试官：</p>\n</blockquote>\n<blockquote>\n<p>hook本身对生命周期不会有什么影响</p>\n</blockquote>\n<blockquote>\n<p>hook的依赖渲染和vue的computed和watch差不多</p>\n</blockquote>\n<blockquote>\n<p>react的hook可以减少更新，某种程度也算是一种优化</p>\n</blockquote>\n<blockquote>\n<p>vue在组件渲染没有react的灵活</p>\n</blockquote>\n<h3 id=\"vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？\"><a href=\"#vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？\" class=\"headerlink\" title=\"vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？\"></a>vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？</h3><p>个人理解：首先是定义全局文件常量文件，如src下创建一个common&#x2F;enum.js文件专门用于存储枚举类数据。如果枚举使用过多，可以考虑在vue的原型对象上注入该文件的枚举常量；如果使用过少，直接在vue组件的script中引入该常量，然后在data或者computed中注册后再template中使用。</p>\n<h3 id=\"js的数据类型？\"><a href=\"#js的数据类型？\" class=\"headerlink\" title=\"js的数据类型？\"></a>js的数据类型？</h3><ul>\n<li><p>普通数据类型：number，string，boolean，null，undefined，symbol，bigint</p>\n</li>\n<li><p>引用数据类型：object，fuction</p>\n</li>\n</ul>\n<h3 id=\"数据类型的检测方式？\"><a href=\"#数据类型的检测方式？\" class=\"headerlink\" title=\"数据类型的检测方式？\"></a>数据类型的检测方式？</h3><ul>\n<li>typeof</li>\n<li>instanceof</li>\n<li>Object.toString().call()</li>\n<li>constructor（只用于函数）</li>\n</ul>\n<h3 id=\"null和undefined的区别？\"><a href=\"#null和undefined的区别？\" class=\"headerlink\" title=\"null和undefined的区别？\"></a>null和undefined的区别？</h3><p>null是人为给定的空对象，undefined是未定义的值</p>\n<h3 id=\"如何判断空对象？\"><a href=\"#如何判断空对象？\" class=\"headerlink\" title=\"如何判断空对象？\"></a>如何判断空对象？</h3><ul>\n<li>JSON.stringify()方法</li>\n<li>Object.keys().length &#x3D;&#x3D; 0</li>\n</ul>\n<h3 id=\"js延迟加载的方法？\"><a href=\"#js延迟加载的方法？\" class=\"headerlink\" title=\"js延迟加载的方法？\"></a>js延迟加载的方法？</h3><ul>\n<li>defer</li>\n<li>async</li>\n</ul>\n<h3 id=\"es6模块和commonjs规范不同点？\"><a href=\"#es6模块和commonjs规范不同点？\" class=\"headerlink\" title=\"es6模块和commonjs规范不同点？\"></a>es6模块和commonjs规范不同点？</h3><ul>\n<li>commonjs中，一个文件就是一个模块，通过exports或者module.exports挂载，通过require拿到对应的exports模块</li>\n<li>es6使用import和export进行模块的引入和暴露，并且模块内部是通过闭包和函数封装进行模块化</li>\n</ul>\n<h3 id=\"for…in和for…of的区别？\"><a href=\"#for…in和for…of的区别？\" class=\"headerlink\" title=\"for…in和for…of的区别？\"></a>for…in和for…of的区别？</h3><ul>\n<li>for…in遍历的是数组索引，for…of遍历的是数组元素值</li>\n<li>for…in对对象进行迭代，而for…of是对任何可以迭代对象都可，如map，set，array</li>\n</ul>\n<h3 id=\"call和apply的区别？\"><a href=\"#call和apply的区别？\" class=\"headerlink\" title=\"call和apply的区别？\"></a>call和apply的区别？</h3><p>接收参数不同，call接收若干参数列表，apply接收数组</p>\n<h3 id=\"vue的data某个属性发生变化，页面会立即方发生变化吗？\"><a href=\"#vue的data某个属性发生变化，页面会立即方发生变化吗？\" class=\"headerlink\" title=\"vue的data某个属性发生变化，页面会立即方发生变化吗？\"></a>vue的data某个属性发生变化，页面会立即方发生变化吗？</h3><h3 id=\"算法1\"><a href=\"#算法1\" class=\"headerlink\" title=\"算法1\"></a>算法1</h3><blockquote>\n<p>设计函数生成所有有效的括号组合。<br>输入：n &#x3D; 3（数字）<br>输出：((())),(()()),(())(),()(()),()()()</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption><span>括号组合</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title function_\">generateParenthesis</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] f = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[ n * <span class=\"number\">2</span> ];    <span class=\"comment\">//0：空  1：(  2：)</span></span><br><span class=\"line\">        List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        dfs( n, n, list, <span class=\"string\">&quot;&quot;</span> );</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> leftN, <span class=\"type\">int</span> rightN, List&lt;String&gt; list, String  out )</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( leftN == <span class=\"number\">0</span> &amp;&amp; rightN == <span class=\"number\">0</span> ) &#123;</span><br><span class=\"line\">            list.add( out );</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( leftN &gt; <span class=\"number\">0</span> ) &#123;</span><br><span class=\"line\">            dfs( leftN - <span class=\"number\">1</span>, rightN, list, out + <span class=\"string\">&quot;(&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( rightN &gt; leftN ) &#123;</span><br><span class=\"line\">            dfs( leftN, rightN - <span class=\"number\">1</span>, list, out + <span class=\"string\">&quot;)&quot;</span> );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"算法2\"><a href=\"#算法2\" class=\"headerlink\" title=\"算法2\"></a>算法2</h3><blockquote>\n<p>给定排序数组，原地删除重复的元素，返回移除后数组的长度。</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>原地去重</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//耍赖方案</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">deleteArray</span> = (<span class=\"params\">array</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>(array).<span class=\"property\">length</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//不考虑时间复杂度</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">deleteArray1</span> = (<span class=\"params\">array</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> k = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = array.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array[i] === array[i + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            k = i</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(k++ &lt; len - <span class=\"number\">1</span>) array[k] = array[k + <span class=\"number\">1</span>];</span><br><span class=\"line\">            len--</span><br><span class=\"line\">            i--</span><br><span class=\"line\">        &#125;     </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//splice解决</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">deleteArray2</span> = (<span class=\"params\">array</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; array.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array[i] === array[i + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            array.<span class=\"title function_\">splice</span>(i--, <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125;     </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array.<span class=\"property\">length</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"算法3\"><a href=\"#算法3\" class=\"headerlink\" title=\"算法3\"></a>算法3</h3><blockquote>\n<p>红绿灯算法，先红灯亮3秒，然后黄灯1秒，绿灯3秒，不断循环。</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>红绿灯算法</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用settimeout和递归方案解决</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> lights = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">color</span>: <span class=\"string\">&#x27;red&#x27;</span>, <span class=\"attr\">time</span>: <span class=\"number\">3000</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">color</span>: <span class=\"string\">&#x27;yellow&#x27;</span>, <span class=\"attr\">time</span>: <span class=\"number\">1000</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">color</span>: <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"attr\">time</span>: <span class=\"number\">3000</span> &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">wait</span>(<span class=\"params\">index = <span class=\"number\">0</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(lights[index].<span class=\"property\">color</span>);</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;       </span><br><span class=\"line\">        <span class=\"title function_\">wait</span>((index + <span class=\"number\">1</span>) % lights.<span class=\"property\">length</span>)</span><br><span class=\"line\">    &#125;, lights[index].<span class=\"property\">time</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">wait</span>()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><figcaption><span>红绿灯算法</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结合promise和async/await解决</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">wait2</span>(<span class=\"params\">time</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">resolve</span>()</span><br><span class=\"line\">        &#125;, time)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> lights = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">color</span>: <span class=\"string\">&#x27;red&#x27;</span>, <span class=\"attr\">time</span>: <span class=\"number\">3000</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">color</span>: <span class=\"string\">&#x27;yellow&#x27;</span>, <span class=\"attr\">time</span>: <span class=\"number\">1000</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">color</span>: <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"attr\">time</span>: <span class=\"number\">3000</span> &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">run</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; lights.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(lights[i].<span class=\"property\">color</span>);</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"title function_\">wait2</span>(lights[i].<span class=\"property\">time</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">run</span>()</span><br></pre></td></tr></table></figure>\n\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/02/15/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C/%E4%BA%AC%E4%B8%9C%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/15/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C/%E4%BA%AC%E4%B8%9C%E4%B8%80%E9%9D%A2/",
            "title": "京东一面",
            "date_published": "2023-02-15T08:26:54.000Z",
            "content_html": "<p>公司： 京东（北京）</p>\n<p>一面时间：2022-2-14 下午2:30-4:30</p>\n<p>时长：1hour左右</p>\n<h3 id=\"你了解的js的数组的方法，聊一聊？\"><a href=\"#你了解的js的数组的方法，聊一聊？\" class=\"headerlink\" title=\"你了解的js的数组的方法，聊一聊？\"></a>你了解的js的数组的方法，聊一聊？</h3><ul>\n<li>forEach</li>\n<li>map</li>\n<li>filter</li>\n<li>reduce</li>\n<li>indexOf</li>\n<li>include</li>\n<li>includes</li>\n<li>find</li>\n<li>findIndex</li>\n<li>pop</li>\n<li>push</li>\n<li>shift</li>\n<li>unshift</li>\n<li>splice</li>\n<li>slice</li>\n<li>every</li>\n<li>some</li>\n<li>isArray</li>\n<li>concat</li>\n<li>from</li>\n<li>reverse</li>\n<li>sort</li>\n</ul>\n<h3 id=\"splice方法的参数解释一下？\"><a href=\"#splice方法的参数解释一下？\" class=\"headerlink\" title=\"splice方法的参数解释一下？\"></a>splice方法的参数解释一下？</h3><ul>\n<li>index：开始的索引下标</li>\n<li>howmany：删除多少个元素</li>\n<li>item1…itemX：添加的元素</li>\n</ul>\n<h3 id=\"点击ul中的li时如何获取到这个li，然后弹出li里面的内容？\"><a href=\"#点击ul中的li时如何获取到这个li，然后弹出li里面的内容？\" class=\"headerlink\" title=\"点击ul中的li时如何获取到这个li，然后弹出li里面的内容？\"></a>点击ul中的li时如何获取到这个li，然后弹出li里面的内容？</h3><h3 id=\"event-target-和-event-currentTarget-的区别？\"><a href=\"#event-target-和-event-currentTarget-的区别？\" class=\"headerlink\" title=\"event.target 和 event.currentTarget 的区别？\"></a>event.target 和 event.currentTarget 的区别？</h3><ul>\n<li><p>event.currentTarget 获取到的是发起事件的标签元素，根据捕获和冒泡阶段不同而不同</p>\n</li>\n<li><p>event.target 获取的是触发事件的标签元素</p>\n</li>\n</ul>\n<h3 id=\"遍历children直接给children绑定事件有什么不好的地方？\"><a href=\"#遍历children直接给children绑定事件有什么不好的地方？\" class=\"headerlink\" title=\"遍历children直接给children绑定事件有什么不好的地方？\"></a>遍历children直接给children绑定事件有什么不好的地方？</h3><ul>\n<li>可读性较差</li>\n<li>每个函数都是对象，会占用内存，造成性能下降</li>\n<li>导致dom访问次数过多，页面交互就绪时间增加</li>\n</ul>\n<h3 id=\"代码输出结果？原因？\"><a href=\"#代码输出结果？原因？\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">b</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    a = <span class=\"number\">100</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">b</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//100</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码输出结果？原因？-1\"><a href=\"#代码输出结果？原因？-1\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">b</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">100</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">b</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//10</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码输出结果？原因？-2\"><a href=\"#代码输出结果？原因？-2\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">b</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">b</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//10</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"var和let的区别？\"><a href=\"#var和let的区别？\" class=\"headerlink\" title=\"var和let的区别？\"></a>var和let的区别？</h3><ul>\n<li>var会进行变量提升，let不存在</li>\n<li>在相同作用域中，var允许重复声明，let不可以</li>\n<li>var的申明会在window上挂载一个全局变量，let的作用域更加严谨，只在当前作用域影响</li>\n</ul>\n<h3 id=\"什么是块级作用域？\"><a href=\"#什么是块级作用域？\" class=\"headerlink\" title=\"什么是块级作用域？\"></a>什么是块级作用域？</h3><p>大括号包裹的就是块级作用域</p>\n<h3 id=\"代码输出结果？原因？-3\"><a href=\"#代码输出结果？原因？-3\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;name&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;obj&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">a</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;obj1&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.<span class=\"property\">a</span>.<span class=\"title function_\">call</span>(obj1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//undefined</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"箭头函数的作用？\"><a href=\"#箭头函数的作用？\" class=\"headerlink\" title=\"箭头函数的作用？\"></a>箭头函数的作用？</h3><ul>\n<li>简化</li>\n<li>内部的this指向外部的执行上下文中的this</li>\n<li>没有构造器，迭代器和生成器</li>\n</ul>\n<h3 id=\"代码输出结果？原因？-4\"><a href=\"#代码输出结果？原因？-4\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = []</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(<span class=\"function\">(<span class=\"params\">finish</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">finish</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> func = arr.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">pre, cur</span>) =&gt;</span> <span class=\"title function_\">cur</span>(pre))</span><br><span class=\"line\"><span class=\"title function_\">func</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1,2,3,4,5,6,7,8,9,0</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"什么是程序（用计算机的术语回答）？\"><a href=\"#什么是程序（用计算机的术语回答）？\" class=\"headerlink\" title=\"什么是程序（用计算机的术语回答）？\"></a>什么是程序（用计算机的术语回答）？</h3><p>程序是指令集合</p>\n<h3 id=\"代码输出结果？原因？-5\"><a href=\"#代码输出结果？原因？-5\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">a</span>: <span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">a</span>??obj.<span class=\"property\">a</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码输出结果？原因？-6\"><a href=\"#代码输出结果？原因？-6\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2.1</span> &lt;&lt; <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数字转千分制字符串\"><a href=\"#数字转千分制字符串\" class=\"headerlink\" title=\"数字转千分制字符串\"></a>数字转千分制字符串</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">format_with_regex</span>(<span class=\"params\">number</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//write code</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方法一</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">format_with_regex</span> = (<span class=\"params\">number</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str = number + <span class=\"string\">&#x27;&#x27;</span>, res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        res += str[i]</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((str.<span class=\"property\">length</span> - i - <span class=\"number\">1</span>) % <span class=\"number\">3</span> === <span class=\"number\">0</span> &amp;&amp; (str.<span class=\"property\">length</span> - <span class=\"number\">1</span>) !== i) &#123;</span><br><span class=\"line\">            res += <span class=\"string\">&#x27;,&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//方法二：正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">format_with_regex</span> = (<span class=\"params\">number</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"title class_\">String</span>(number)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !num.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;.&#x27;</span>) </span><br><span class=\"line\">    ? </span><br><span class=\"line\">        num.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+$)/g</span>, <span class=\"function\">(<span class=\"params\">match</span>) =&gt;</span> match + <span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">    :</span><br><span class=\"line\">        num.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+(\\.))/g</span>, <span class=\"function\">(<span class=\"params\">match</span>) =&gt;</span> match + <span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"useMemo和useCallBack的区别？\"><a href=\"#useMemo和useCallBack的区别？\" class=\"headerlink\" title=\"useMemo和useCallBack的区别？\"></a>useMemo和useCallBack的区别？</h3><ul>\n<li>都用于缓存数据优化性能，依赖数据变化重新计算结果类似于vue中的computed</li>\n<li>区别：<ul>\n<li>useMemo 缓存的结果是回调函数中return回来的值，主要用于缓存计算结果的值，应用场景如需要计算的状态</li>\n<li>useCallback  缓存的结果是函数，主要用于缓存函数，应用场景如需要缓存的函数，因为函数式组件每次任何一个state发生变化，会触发整个组件更新，一些函数是没有必要更新的，此时就应该缓存起来，提高性能，减少对资源的浪费；另外还需要注意的是，useCallback应该和React.memo配套使用，缺了一个都可能导致性能不升反而下降。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？\"><a href=\"#在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？\" class=\"headerlink\" title=\"在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？\"></a>在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？</h3><p>自定义hook（用use开头），函数组件hook</p>\n<h3 id=\"正向代理和反向代理？\"><a href=\"#正向代理和反向代理？\" class=\"headerlink\" title=\"正向代理和反向代理？\"></a>正向代理和反向代理？</h3><ul>\n<li>正向代理：客户端部署代理服务器，客户端发送请求给代理服务器，代理服务器发送给目标服务器，目标服务器返回给代理服务器，代理服务器转发给客户端。（服务端并不清楚谁发给了我）</li>\n<li>反向代理：服务端部署代理服务器，代理服务器负责接收请求和相应业务。（客户端不清楚发给了谁）</li>\n</ul>\n<h3 id=\"什么是跨域？\"><a href=\"#什么是跨域？\" class=\"headerlink\" title=\"什么是跨域？\"></a>什么是跨域？</h3><p>端口，协议，域名不同就是跨域</p>\n<h3 id=\"如何解决跨域？\"><a href=\"#如何解决跨域？\" class=\"headerlink\" title=\"如何解决跨域？\"></a>如何解决跨域？</h3><ul>\n<li>cros</li>\n<li>jsonp</li>\n</ul>\n<h3 id=\"jsonp如何获取到后端的数据的？\"><a href=\"#jsonp如何获取到后端的数据的？\" class=\"headerlink\" title=\"jsonp如何获取到后端的数据的？\"></a>jsonp如何获取到后端的数据的？</h3><p>通过前端设置回调函数，后端对获取到的回调函数赋值后重新返回，回调函数中接收到的就是包裹的后端赋值数据。必须是json格式数据。</p>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2022/11/26/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E5%AD%97%E8%8A%82/%E5%AD%97%E8%8A%82%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2022/11/26/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E5%AD%97%E8%8A%82/%E5%AD%97%E8%8A%82%E4%B8%80%E9%9D%A2/",
            "title": "字节一面（第一次面试）",
            "date_published": "2022-11-26T05:26:01.000Z",
            "content_html": "<h2 id=\"第一次面试记录\"><a href=\"#第一次面试记录\" class=\"headerlink\" title=\"第一次面试记录\"></a>第一次面试记录</h2><p>公司： 字节跳动-懂车帝</p>\n<p>一面时间：2022-11-25 下午4:30-5:30</p>\n<p>时长：1hour左右</p>\n<p>HR印象：hr提前了3分钟进入会议室，年龄不大，语气很温和，有耐心，给了很多中肯的评价和指导</p>\n<h4 id=\"面试内容\"><a href=\"#面试内容\" class=\"headerlink\" title=\"面试内容\"></a>面试内容</h4><ul>\n<li><p>1，介绍最近做的项目</p>\n<ul>\n<li>回答：CLF平台···</li>\n</ul>\n</li>\n<li><p>2，你认为最有挑战的是什么，项目中遇到的</p>\n<ul>\n<li>回答：阿里终端训练营做的小项目···</li>\n<li>hr评价：项目做的挺丰富，这点不错（这里有点开心，感觉回答上来了）</li>\n</ul>\n</li>\n<li><p>3，（看了下简历，可能他感觉有点多）你觉得你最擅长哪个技术栈？</p>\n<ul>\n<li>回答：vue，css，喜欢css动画（这里给自己挖坑）</li>\n</ul>\n</li>\n<li><p>4，先来个简单的css简答题？</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-sizing</span>: content-box;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1 box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2 box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>问：蓝色部分的面积分别是多少？</p>\n<p>回答：box1 &#x3D; 10 * 10 ，box2 &#x3D; 12 * 12</p>\n<p>这个答错了qaq（正确是8 * 8, 14 * 14），考的知识点是盒模型和怪异盒模型</p>\n</li>\n<li><p>5，说一说transition和animation的区别，什么情况使用？</p>\n<p>回答：transition一般是小的模块，单个dom或者只对dom内容少时使用，比如在图片放大缩小这种，而animation用的比较多，比如做一个长连续动画或者涉及多个dom变化的</p>\n<p>hr给我感觉：好像是答对了，也好像木有答对，就是总结了我混乱不清的言语</p>\n</li>\n<li><p>6，设置一个动画，从右向左逐渐拉伸边长，类似风车打开，说说想法</p>\n<p>回答：有点忘了怎么回答的（大致是从内置动画，或者结合js考虑显示或隐藏来调用动画）</p>\n</li>\n<li><p>7，考一下vue的知识，设计一个组件，有传入数据内置内容功能，也可以调控整个页面的蒙版，就是可以操控全局也可以设置组件内容的功能，说一说想法？（大致是这个意思，说实话，没怎么听懂）</p>\n<p>回答：也忘了怎么回答的</p>\n</li>\n<li><p>8，js算法</p>\n<figure class=\"highlight javascript\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>).<span class=\"title function_\">sumOf</span>() <span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)(<span class=\"number\">4</span>).<span class=\"title function_\">sumOf</span>() <span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>).<span class=\"title function_\">sumOf</span>() <span class=\"comment\">//···</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//后面还有，忘了</span></span><br></pre></td></tr></table></figure>\n\n<p>问：设计js代码，输入结果等于后面的注释</p>\n</li>\n</ul>\n<p>​\t\t这个题没写出来，知识点就是函数柯里化和闭包的封装</p>\n<ul>\n<li><p>9，js算法</p>\n<figure class=\"highlight javascript\"><figcaption><span>数组转递归树</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> list = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">1</span>, <span class=\"attr\">parent</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">2</span>, <span class=\"attr\">parent</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;C&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">3</span>, <span class=\"attr\">parent</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;D&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">4</span>, <span class=\"attr\">parent</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;E&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">5</span>, <span class=\"attr\">parent</span>: <span class=\"number\">3</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">6</span>, <span class=\"attr\">parent</span>: <span class=\"number\">5</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;G&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">7</span>, <span class=\"attr\">parent</span>: <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverseTree</span>(<span class=\"params\">list</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> tree = <span class=\"title function_\">reverseTree</span>(list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(tree);</span><br></pre></td></tr></table></figure>\n\n<p>问：写出reverseTree()，使结果为递归树</p>\n<p>回答：</p>\n<figure class=\"highlight javascript\"><figcaption><span>数组转递归树</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverseTree</span>(<span class=\"params\">list</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> map = &#123;&#125;, node, tree= [], i;</span><br><span class=\"line\">    <span class=\"comment\">// 将数组所有节点用对象装取成树状</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; list.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        map[list[i].<span class=\"property\">key</span>] = list[i]; </span><br><span class=\"line\">        list[i].<span class=\"property\">children</span> = []; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; list.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        node = list[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">parent</span> !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            map[node.<span class=\"property\">parent</span>].<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(node);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            tree.<span class=\"title function_\">push</span>(node);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tree;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>面试官补充：你有什么想问的吗？</p>\n<p>反问：你对我的评价是怎么样的？</p>\n<p>hr：语言表达可以，项目也有特色，很多知识都有涉及，但是有点庞杂，显得不太精，需要多专一个知识，找一个方向特别精通的地步</p>\n<p>hr：可以看看网络的知识，缓存，懒加载等等，比如三次握手和四次挥手，以及跨域····（我心想，这些你也没问也），vue更加深层的应用，毕竟不能只是应用技术，还要做拓展和深入研究，</p>\n<p>我：这些我都学习了解了的</p>\n<p>hr：没事，面试不是第一次，每次期待下一次（凉了！~）</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>问的其实都不难，就是问的比较深入，喜欢搞一些大项目中的高阶用法，和很多多层封装考得多，个人认为确实要把一些技术搞的牢固一些，然后可以做自己的开源项目，用自己的熟悉技术不断迭代，高阶知识自然用上了。</p>\n<p>第一次面试虽凉了，但是收获还是不错的，说紧张，也只是面试官没进入会议可能紧张，其他时候也就是写不出代码紧张了，在想什么呢（今晚吃啥呢，好吧，我在封寝~~~）</p>\n",
            "tags": []
        }
    ]
}