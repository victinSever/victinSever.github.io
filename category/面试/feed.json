{
    "version": "https://jsonfeed.org/version/1",
    "title": "眸光似星辰 • All posts by \"面试\" category",
    "description": "",
    "home_page_url": "http://victinSever.github.io",
    "items": [
        {
            "id": "http://victinsever.github.io/2023/02/17/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%99%BE%E5%BA%A6%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/17/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%99%BE%E5%BA%A6%E4%B8%80%E9%9D%A2/",
            "title": "百度一面",
            "date_published": "2023-02-17T05:26:54.000Z",
            "content_html": "<p>公司： 百度-前端国际化产品研发（北京）</p>\n<p>面试时间：2022-2-17 上午11:00-11:45</p>\n<p>时长：45min左右</p>\n<h3 id=\"浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么\"><a href=\"#浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么\" class=\"headerlink\" title=\"浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么?\"></a>浏览器访问网站，网站打开到对方返回数据这一些过程中在操作系统和网络层面经历了哪些流程呢，介绍一下步骤？就是发送请求到dns解析再到网络七层模型到服务端再到服务端怎么回来的这个过程？就是发请求可以得到什么，然后择取通过什么协议带上这几个东西去做什么?</h3><h3 id=\"TCP协议负责做什么？IP协议负责做什么？\"><a href=\"#TCP协议负责做什么？IP协议负责做什么？\" class=\"headerlink\" title=\"TCP协议负责做什么？IP协议负责做什么？\"></a>TCP协议负责做什么？IP协议负责做什么？</h3><h3 id=\"IP分类中C类地址的网络号是什么？\"><a href=\"#IP分类中C类地址的网络号是什么？\" class=\"headerlink\" title=\"IP分类中C类地址的网络号是什么？\"></a>IP分类中C类地址的网络号是什么？</h3><h3 id=\"http2的特性是什么？http2的首部压缩是怎么一回事？\"><a href=\"#http2的特性是什么？http2的首部压缩是怎么一回事？\" class=\"headerlink\" title=\"http2的特性是什么？http2的首部压缩是怎么一回事？\"></a>http2的特性是什么？http2的首部压缩是怎么一回事？</h3><h3 id=\"说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？\"><a href=\"#说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？\" class=\"headerlink\" title=\"说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？\"></a>说一下nginx的匹配规则优先级，就是对url进行匹配，然后去做一些处理？比如正则还是等号还有什么其他优先级你说一下？</h3><h3 id=\"git中代码提交方面的准则？\"><a href=\"#git中代码提交方面的准则？\" class=\"headerlink\" title=\"git中代码提交方面的准则？\"></a>git中代码提交方面的准则？</h3><h3 id=\"介绍使用git的几个操作？\"><a href=\"#介绍使用git的几个操作？\" class=\"headerlink\" title=\"介绍使用git的几个操作？\"></a>介绍使用git的几个操作？</h3><h3 id=\"我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？\"><a href=\"#我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？\" class=\"headerlink\" title=\"我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？\"></a>我正在项目写代码，突然线上有一个严重的bug然后本地仓库还有很多代码没有提交（本地工作未完成是不能提交代码入库的），我需要临时去处理这个高优先级问题，如何做去切换到对应的新的分支去修改线上的这个问题？</h3><h3 id=\"js的数据类型？\"><a href=\"#js的数据类型？\" class=\"headerlink\" title=\"js的数据类型？\"></a>js的数据类型？</h3><h3 id=\"对于js的数据类型哪些可以通过typeof判断出来，哪些不行？\"><a href=\"#对于js的数据类型哪些可以通过typeof判断出来，哪些不行？\" class=\"headerlink\" title=\"对于js的数据类型哪些可以通过typeof判断出来，哪些不行？\"></a>对于js的数据类型哪些可以通过typeof判断出来，哪些不行？</h3><h3 id=\"有没有万能的判断数据的方法？\"><a href=\"#有没有万能的判断数据的方法？\" class=\"headerlink\" title=\"有没有万能的判断数据的方法？\"></a>有没有万能的判断数据的方法？</h3><h3 id=\"js绑定事件的方法有哪些？\"><a href=\"#js绑定事件的方法有哪些？\" class=\"headerlink\" title=\"js绑定事件的方法有哪些？\"></a>js绑定事件的方法有哪些？</h3><h3 id=\"对于js数组哪些方法可以在遍历的时候去进行一个break跳出？\"><a href=\"#对于js数组哪些方法可以在遍历的时候去进行一个break跳出？\" class=\"headerlink\" title=\"对于js数组哪些方法可以在遍历的时候去进行一个break跳出？\"></a>对于js数组哪些方法可以在遍历的时候去进行一个break跳出？</h3><h3 id=\"for，for…in和for…of有没有可以或者不可以break跳出？\"><a href=\"#for，for…in和for…of有没有可以或者不可以break跳出？\" class=\"headerlink\" title=\"for，for…in和for…of有没有可以或者不可以break跳出？\"></a>for，for…in和for…of有没有可以或者不可以break跳出？</h3><h3 id=\"我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async-x2F-await的方法有什么区别？\"><a href=\"#我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async-x2F-await的方法有什么区别？\" class=\"headerlink\" title=\"我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async&#x2F;await的方法有什么区别？\"></a>我有三个接口，独立不相关可请求，需要在一个mounted同时调用它们，我使用await将三个接口依次放在mounted中加载，这个写法有没有什么问题？和不使用async&#x2F;await的方法有什么区别？</h3><h3 id=\"优化上述场景如何解决？做项目的时候有没有遇到过？\"><a href=\"#优化上述场景如何解决？做项目的时候有没有遇到过？\" class=\"headerlink\" title=\"优化上述场景如何解决？做项目的时候有没有遇到过？\"></a>优化上述场景如何解决？做项目的时候有没有遇到过？</h3><h3 id=\"CSS选择器的优先级？\"><a href=\"#CSS选择器的优先级？\" class=\"headerlink\" title=\"CSS选择器的优先级？\"></a>CSS选择器的优先级？</h3><h3 id=\"我用了id选择器，和class选择器相比会造成什么问题？\"><a href=\"#我用了id选择器，和class选择器相比会造成什么问题？\" class=\"headerlink\" title=\"我用了id选择器，和class选择器相比会造成什么问题？\"></a>我用了id选择器，和class选择器相比会造成什么问题？</h3><h3 id=\"vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？\"><a href=\"#vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？\" class=\"headerlink\" title=\"vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？\"></a>vue使用elmentui很多地方会有样式穿透，有用过吗，跟我讲一讲这个？</h3><h3 id=\"你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？\"><a href=\"#你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？\" class=\"headerlink\" title=\"你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？\"></a>你有关注前端一些新的领域这些吗，能和我说说最近学习了哪些新领域的东西，关注的东西？</h3><h3 id=\"平时是怎么学习的呢？\"><a href=\"#平时是怎么学习的呢？\" class=\"headerlink\" title=\"平时是怎么学习的呢？\"></a>平时是怎么学习的呢？</h3><h3 id=\"我可能问了一些你没有准备到的，你觉得哪些是你擅长的？\"><a href=\"#我可能问了一些你没有准备到的，你觉得哪些是你擅长的？\" class=\"headerlink\" title=\"我可能问了一些你没有准备到的，你觉得哪些是你擅长的？\"></a>我可能问了一些你没有准备到的，你觉得哪些是你擅长的？</h3>",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/02/16/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C%E4%BA%8C%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/16/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C%E4%BA%8C%E9%9D%A2/",
            "title": "京东二面",
            "date_published": "2023-02-16T08:26:54.000Z",
            "content_html": "<p>公司： 京东（北京）</p>\n<p>面试时间：2022-2-16 下午2:30-3:30</p>\n<p>时长：1hour左右</p>\n<h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"近期学了一些什么新技术\"><a href=\"#近期学了一些什么新技术\" class=\"headerlink\" title=\"近期学了一些什么新技术\"></a>近期学了一些什么新技术</h3><h3 id=\"组件库怎么进行主题配置的\"><a href=\"#组件库怎么进行主题配置的\" class=\"headerlink\" title=\"组件库怎么进行主题配置的\"></a>组件库怎么进行主题配置的</h3><h3 id=\"vue和react你都用过，你觉得你更喜欢哪一个？\"><a href=\"#vue和react你都用过，你觉得你更喜欢哪一个？\" class=\"headerlink\" title=\"vue和react你都用过，你觉得你更喜欢哪一个？\"></a>vue和react你都用过，你觉得你更喜欢哪一个？</h3><blockquote>\n<p>面试官：</p>\n</blockquote>\n<blockquote>\n<p>hook本身对生命周期不会有什么影响</p>\n</blockquote>\n<blockquote>\n<p>hook的依赖渲染和vue的computed和watch差不多</p>\n</blockquote>\n<blockquote>\n<p>react的hook可以减少更新，某种程度也算是一种优化</p>\n</blockquote>\n<blockquote>\n<p>vue在组件渲染没有react的灵活</p>\n</blockquote>\n<h3 id=\"vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？\"><a href=\"#vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？\" class=\"headerlink\" title=\"vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？\"></a>vue怎么引入一个枚举，在template引入枚举（常量，对象）并应用这个枚举？怎么管理项目里的枚举？</h3><h3 id=\"js的数据类型？\"><a href=\"#js的数据类型？\" class=\"headerlink\" title=\"js的数据类型？\"></a>js的数据类型？</h3><h3 id=\"数据类型的检测方式？\"><a href=\"#数据类型的检测方式？\" class=\"headerlink\" title=\"数据类型的检测方式？\"></a>数据类型的检测方式？</h3><h3 id=\"null和undefined的区别？\"><a href=\"#null和undefined的区别？\" class=\"headerlink\" title=\"null和undefined的区别？\"></a>null和undefined的区别？</h3><h3 id=\"如何判断空对象？\"><a href=\"#如何判断空对象？\" class=\"headerlink\" title=\"如何判断空对象？\"></a>如何判断空对象？</h3><ul>\n<li>JSON.stringify()方法</li>\n<li>Object.keys().length &#x3D;&#x3D; 0</li>\n</ul>\n<h3 id=\"js延迟加载的方法？\"><a href=\"#js延迟加载的方法？\" class=\"headerlink\" title=\"js延迟加载的方法？\"></a>js延迟加载的方法？</h3><h3 id=\"es6模块和commonjs规范不同点？\"><a href=\"#es6模块和commonjs规范不同点？\" class=\"headerlink\" title=\"es6模块和commonjs规范不同点？\"></a>es6模块和commonjs规范不同点？</h3><h3 id=\"for…in和for…of的区别？\"><a href=\"#for…in和for…of的区别？\" class=\"headerlink\" title=\"for…in和for…of的区别？\"></a>for…in和for…of的区别？</h3><h3 id=\"call和apply的区别？\"><a href=\"#call和apply的区别？\" class=\"headerlink\" title=\"call和apply的区别？\"></a>call和apply的区别？</h3><h3 id=\"vue的data某个属性发生变化，页面会立即方发生变化吗？\"><a href=\"#vue的data某个属性发生变化，页面会立即方发生变化吗？\" class=\"headerlink\" title=\"vue的data某个属性发生变化，页面会立即方发生变化吗？\"></a>vue的data某个属性发生变化，页面会立即方发生变化吗？</h3><h3 id=\"算法1\"><a href=\"#算法1\" class=\"headerlink\" title=\"算法1\"></a>算法1</h3><p>设计函数生成所有有效的括号组合。<br>输入：n &#x3D; 3（数字）<br>输出：((())),(()()),(())(),()(()),()()()</p>\n<h3 id=\"算法2\"><a href=\"#算法2\" class=\"headerlink\" title=\"算法2\"></a>算法2</h3><p>给定排序数组，原地删除重复的元素，返回移除后数组的长度</p>\n<h3 id=\"算法3\"><a href=\"#算法3\" class=\"headerlink\" title=\"算法3\"></a>算法3</h3><p>红绿灯算法，先红灯亮3秒，然后黄灯1秒，绿灯3秒，不断循环</p>\n",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2023/02/15/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C%E4%B8%80%E9%9D%A2/",
            "url": "http://victinsever.github.io/2023/02/15/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E4%BA%AC%E4%B8%9C%E4%B8%80%E9%9D%A2/",
            "title": "京东一面",
            "date_published": "2023-02-15T08:26:54.000Z",
            "content_html": "<p>公司： 京东（北京）</p>\n<p>一面时间：2022-2-14 下午2:30-4:30</p>\n<p>时长：1hour左右</p>\n<h3 id=\"你了解的js的数组的方法，聊一聊？\"><a href=\"#你了解的js的数组的方法，聊一聊？\" class=\"headerlink\" title=\"你了解的js的数组的方法，聊一聊？\"></a>你了解的js的数组的方法，聊一聊？</h3><ul>\n<li>forEach</li>\n<li>map</li>\n<li>filter</li>\n<li>reduce</li>\n<li>indexOf</li>\n<li>include</li>\n<li>includes</li>\n<li>find</li>\n<li>findIndex</li>\n<li>pop</li>\n<li>push</li>\n<li>shift</li>\n<li>unshift</li>\n<li>splice</li>\n<li>slice</li>\n<li>every</li>\n<li>some</li>\n<li>isArray</li>\n<li>concat</li>\n<li>from</li>\n<li>reverse</li>\n<li>sort</li>\n</ul>\n<h3 id=\"splice方法的参数解释一下？\"><a href=\"#splice方法的参数解释一下？\" class=\"headerlink\" title=\"splice方法的参数解释一下？\"></a>splice方法的参数解释一下？</h3><h3 id=\"点击ul中的li时如何获取到这个li，然后弹出li里面的内容？\"><a href=\"#点击ul中的li时如何获取到这个li，然后弹出li里面的内容？\" class=\"headerlink\" title=\"点击ul中的li时如何获取到这个li，然后弹出li里面的内容？\"></a>点击ul中的li时如何获取到这个li，然后弹出li里面的内容？</h3><h3 id=\"event-target-和-event-currentTarget-的区别？\"><a href=\"#event-target-和-event-currentTarget-的区别？\" class=\"headerlink\" title=\"event.target 和 event.currentTarget 的区别？\"></a>event.target 和 event.currentTarget 的区别？</h3><p>event.currentTarget 获取到的是发起事件的标签元素</p>\n<p>event.target 获取的是触发事件的标签元素</p>\n<h3 id=\"遍历children直接给children绑定事件有什么不好的地方？\"><a href=\"#遍历children直接给children绑定事件有什么不好的地方？\" class=\"headerlink\" title=\"遍历children直接给children绑定事件有什么不好的地方？\"></a>遍历children直接给children绑定事件有什么不好的地方？</h3><h3 id=\"代码输出结果？原因？\"><a href=\"#代码输出结果？原因？\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">b</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    a = <span class=\"number\">100</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">b</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码输出结果？原因？-1\"><a href=\"#代码输出结果？原因？-1\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">b</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">a</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">b</span>()</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"var和let的区别？\"><a href=\"#var和let的区别？\" class=\"headerlink\" title=\"var和let的区别？\"></a>var和let的区别？</h3><h3 id=\"什么是块级作用域？\"><a href=\"#什么是块级作用域？\" class=\"headerlink\" title=\"什么是块级作用域？\"></a>什么是块级作用域？</h3><p>大括号包裹的就是块级作用域</p>\n<h3 id=\"代码输出结果？原因？-2\"><a href=\"#代码输出结果？原因？-2\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;name&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;obj&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">a</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.<span class=\"property\">a</span>.<span class=\"title function_\">call</span>(name)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"箭头函数是干嘛的？\"><a href=\"#箭头函数是干嘛的？\" class=\"headerlink\" title=\"箭头函数是干嘛的？\"></a>箭头函数是干嘛的？</h3><h3 id=\"代码输出结果？原因？-3\"><a href=\"#代码输出结果？原因？-3\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = []</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(<span class=\"function\">(<span class=\"params\">finish</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">finish</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> func = arr.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">pre, cur</span>) =&gt;</span> <span class=\"title function_\">cur</span>(pre))</span><br><span class=\"line\"><span class=\"title function_\">func</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"什么是程序（用计算机的术语回答）？\"><a href=\"#什么是程序（用计算机的术语回答）？\" class=\"headerlink\" title=\"什么是程序（用计算机的术语回答）？\"></a>什么是程序（用计算机的术语回答）？</h3><p>程序是指令集合</p>\n<h3 id=\"代码输出结果？原因？-4\"><a href=\"#代码输出结果？原因？-4\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">a</span>: <span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.<span class=\"property\">a</span>??obj.<span class=\"property\">a</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码输出结果？原因？-5\"><a href=\"#代码输出结果？原因？-5\" class=\"headerlink\" title=\"代码输出结果？原因？\"></a>代码输出结果？原因？</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2.1</span> &lt;&lt; <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数字转千分制字符串\"><a href=\"#数字转千分制字符串\" class=\"headerlink\" title=\"数字转千分制字符串\"></a>数字转千分制字符串</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">format_with_regex</span>(<span class=\"params\">number</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//write code</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方法一</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">format_with_regex</span> = (<span class=\"params\">number</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str = number + <span class=\"string\">&#x27;&#x27;</span>, res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        res += str[i]</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((str.<span class=\"property\">length</span> - i - <span class=\"number\">1</span>) % <span class=\"number\">3</span> === <span class=\"number\">0</span> &amp;&amp; (str.<span class=\"property\">length</span> - <span class=\"number\">1</span>) !== i) &#123;</span><br><span class=\"line\">            res += <span class=\"string\">&#x27;,&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//方法二：正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">format_with_regex</span> = (<span class=\"params\">number</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"title class_\">String</span>(number)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !num.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;.&#x27;</span>) </span><br><span class=\"line\">    ? </span><br><span class=\"line\">        num.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+$)/g</span>, <span class=\"function\">(<span class=\"params\">match</span>) =&gt;</span> match + <span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">    :</span><br><span class=\"line\">        num.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+(\\.))/g</span>, <span class=\"function\">(<span class=\"params\">match</span>) =&gt;</span> match + <span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"useMemo和useCallBack的区别？\"><a href=\"#useMemo和useCallBack的区别？\" class=\"headerlink\" title=\"useMemo和useCallBack的区别？\"></a>useMemo和useCallBack的区别？</h3><h3 id=\"在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？\"><a href=\"#在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？\" class=\"headerlink\" title=\"在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？\"></a>在哪些地方会写hook？写hook的规范？在任何地方都能使用hook吗？</h3><p>自定义hook（用use开头），函数组件hook</p>\n<h3 id=\"正向代理和反向代理？\"><a href=\"#正向代理和反向代理？\" class=\"headerlink\" title=\"正向代理和反向代理？\"></a>正向代理和反向代理？</h3><ul>\n<li>正向代理：客户端部署代理服务器，客户端发送请求给代理服务器，代理服务器发送给目标服务器，目标服务器返回给代理服务器，代理服务器转发给客户端。（服务端并不清楚谁发给了我）</li>\n<li>反向代理：服务端部署代理服务器，代理服务器负责接收请求和相应业务。（客户端不清楚发给了谁）</li>\n</ul>\n<h3 id=\"什么是跨域？\"><a href=\"#什么是跨域？\" class=\"headerlink\" title=\"什么是跨域？\"></a>什么是跨域？</h3><p>端口，协议，域名不同就是跨域</p>\n<h3 id=\"如何解决跨域？\"><a href=\"#如何解决跨域？\" class=\"headerlink\" title=\"如何解决跨域？\"></a>如何解决跨域？</h3><ul>\n<li>cros</li>\n<li>jsonp</li>\n</ul>\n<h3 id=\"jsonp如何获取到后端的数据的？\"><a href=\"#jsonp如何获取到后端的数据的？\" class=\"headerlink\" title=\"jsonp如何获取到后端的数据的？\"></a>jsonp如何获取到后端的数据的？</h3>",
            "tags": []
        },
        {
            "id": "http://victinsever.github.io/2022/11/26/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E5%B0%B1%E6%98%AF%E5%AD%97%E8%8A%82%EF%BC%8C%E5%A4%A7%E5%85%AC%E5%8F%B8%E7%A1%AE%E5%AE%9Ehr%E6%8C%BA%E5%A5%BD%E7%9A%84%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%88%91%E4%B8%8D%E8%A1%8C/",
            "url": "http://victinsever.github.io/2022/11/26/%E6%9D%82%E8%B0%88/%E9%9D%A2%E8%AF%95/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E5%B0%B1%E6%98%AF%E5%AD%97%E8%8A%82%EF%BC%8C%E5%A4%A7%E5%85%AC%E5%8F%B8%E7%A1%AE%E5%AE%9Ehr%E6%8C%BA%E5%A5%BD%E7%9A%84%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%88%91%E4%B8%8D%E8%A1%8C/",
            "title": "第一次面试就是字节，大公司确实hr挺好的，就是我不行",
            "date_published": "2022-11-26T05:26:01.000Z",
            "content_html": "<h2 id=\"第一次面试记录\"><a class=\"markdownIt-Anchor\" href=\"#第一次面试记录\">#</a> 第一次面试记录</h2>\n<p>公司： 字节跳动 - 懂车帝</p>\n<p>一面时间：2022-11-25 下午 4:30-5:30</p>\n<p>时长：1hour 左右</p>\n<p>HR 印象：hr 提前了 3 分钟进入会议室，年龄不大，语气很温和，有耐心，给了很多中肯的评价和指导</p>\n<h4 id=\"面试内容\"><a class=\"markdownIt-Anchor\" href=\"#面试内容\">#</a> 面试内容</h4>\n<ul>\n<li>\n<p>1，介绍最近做的项目</p>\n<ul>\n<li>回答：CLF 平台・・・</li>\n</ul>\n</li>\n<li>\n<p>2，你认为最有挑战的是什么，项目中遇到的</p>\n<ul>\n<li>回答：阿里终端训练营做的小项目・・・</li>\n<li>hr 评价：项目做的挺丰富，这点不错（这里有点开心，感觉回答上来了）</li>\n</ul>\n</li>\n<li>\n<p>3，（看了下简历，可能他感觉有点多）你觉得你最擅长哪个技术栈？</p>\n<ul>\n<li>回答：vue，css，喜欢 css 动画（这里给自己挖坑）</li>\n</ul>\n</li>\n<li>\n<p>4，先来个简单的 css 简答题？</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.box2</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">box-sizing</span>: content-box;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1 box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2 box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>问：蓝色部分的面积分别是多少？</p>\n<p>回答：box1 = 10 * 10 ，box2 = 12 * 12</p>\n<p>这个答错了 qaq（正确是 8 * 8, 14 * 14），考的知识点是盒模型和怪异盒模型</p>\n</li>\n<li>\n<p>5，说一说 transition 和 animation 的区别，什么情况使用？</p>\n<p>回答：transition 一般是小的模块，单个 dom 或者只对 dom 内容少时使用，比如在图片放大缩小这种，而 animation 用的比较多，比如做一个长连续动画或者涉及多个 dom 变化的</p>\n<p>hr 给我感觉：好像是答对了，也好像木有答对，就是总结了我混乱不清的言语</p>\n</li>\n<li>\n<p>6，设置一个动画，从右向左逐渐拉伸边长，类似风车打开，说说想法</p>\n<p>回答：有点忘了怎么回答的（大致是从内置动画，或者结合 js 考虑显示或隐藏来调用动画）</p>\n</li>\n<li>\n<p>7，考一下 vue 的知识，设计一个组件，有传入数据内置内容功能，也可以调控整个页面的蒙版，就是可以操控全局也可以设置组件内容的功能，说一说想法？（大致是这个意思，说实话，没怎么听懂）</p>\n<p>回答：也忘了怎么回答的</p>\n</li>\n<li>\n<p>8，js 算法</p>\n<figure class=\"highlight javascript\"><figcaption><span>1</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>).<span class=\"title function_\">sumOf</span>() <span class=\"comment\">// 6</span></span><br><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)(<span class=\"number\">4</span>).<span class=\"title function_\">sumOf</span>() <span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>)(<span class=\"number\">3</span>)(<span class=\"number\">4</span>).<span class=\"title function_\">sumOf</span>() <span class=\"comment\">//···</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//后面还有，忘了</span></span><br></pre></td></tr></table></figure>\n<p>问：设计 js 代码，输入结果等于后面的注释</p>\n</li>\n</ul>\n<p>​\t\t这个题没写出来，知识点就是函数柯里化和闭包的封装</p>\n<ul>\n<li>\n<p>9，js 算法</p>\n<figure class=\"highlight javascript\"><figcaption><span>数组转递归树</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> list = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">1</span>, <span class=\"attr\">parent</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">2</span>, <span class=\"attr\">parent</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;C&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">3</span>, <span class=\"attr\">parent</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;D&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">4</span>, <span class=\"attr\">parent</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;E&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">5</span>, <span class=\"attr\">parent</span>: <span class=\"number\">3</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">6</span>, <span class=\"attr\">parent</span>: <span class=\"number\">5</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;G&#x27;</span>, <span class=\"attr\">key</span>: <span class=\"number\">7</span>, <span class=\"attr\">parent</span>: <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverseTree</span>(<span class=\"params\">list</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> tree = <span class=\"title function_\">reverseTree</span>(list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(tree);</span><br></pre></td></tr></table></figure>\n<p>问：写出 reverseTree ()，使结果为递归树</p>\n<p>回答：</p>\n<figure class=\"highlight javascript\"><figcaption><span>数组转递归树</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverseTree</span>(<span class=\"params\">list</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> map = &#123;&#125;, node, tree= [], i;</span><br><span class=\"line\">    <span class=\"comment\">// 将数组所有节点用对象装取成树状</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; list.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        map[list[i].<span class=\"property\">key</span>] = list[i]; </span><br><span class=\"line\">        list[i].<span class=\"property\">children</span> = []; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; list.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        node = list[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.<span class=\"property\">parent</span> !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            map[node.<span class=\"property\">parent</span>].<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(node);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            tree.<span class=\"title function_\">push</span>(node);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tree;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>面试官补充：你有什么想问的吗？</p>\n<p>反问：你对我的评价是怎么样的？</p>\n<p>hr：语言表达可以，项目也有特色，很多知识都有涉及，但是有点庞杂，显得不太精，需要多专一个知识，找一个方向特别精通的地步</p>\n<p>hr：可以看看网络的知识，缓存，懒加载等等，比如三次握手和四次挥手，以及跨域・・・・（我心想，这些你也没问也），vue 更加深层的应用，毕竟不能只是应用技术，还要做拓展和深入研究，</p>\n<p>我：这些我都学习了解了的</p>\n<p>hr：没事，面试不是第一次，每次期待下一次（凉了！~）</p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>问的其实都不难，就是问的比较深入，喜欢搞一些大项目中的高阶用法，和很多多层封装考得多，个人认为确实要把一些技术搞的牢固一些，然后可以做自己的开源项目，用自己的熟悉技术不断迭代，高阶知识自然用上了。</p>\n<p>第一次面试虽凉了，但是收获还是不错的，说紧张，也只是面试官没进入会议可能紧张，其他时候也就是写不出代码紧张了，在想什么呢（今晚吃啥呢，好吧，我在封寝～～～）</p>\n",
            "tags": []
        }
    ]
}